


NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: fanime.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FANIME_MT64                           &
(    4) &                     (FA,  KREP, KNUMER, KNIMES )
(    5) USE FA_MOD, ONLY : FA_COM
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme permet d'ajuster le Niveau de Messagerie
(   12) !     propre aux actions faites sur un fichier particulier, ouvert pour
(   13) !     le Logiciel de Fichiers ARPEGE, de meme que le Niveau correspon-
(   14) !     dant du logiciel LFI.
(   15) !        Cependant, tant que le Niveau de Messagerie Global *FA%NIMSGA*
(   16) !     vaut 0 ou 2, le niveau propre au fichier est inoperant.
(   17) !     *FA%NIMSGA* vaut par defaut 1, et est reglable via le s/p "FANMSG".
(   18) !**
(   19) !     Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   20) !                 KNUMER (Entree) ==> Numero d'Unite Logique concernee;
(   21) !                 KNIMES (Entree) ==> Niveau de Messagerie souhaite.
(   22) !
(   23) !
(   24) !
(   25) TYPE(FA_COM) :: FA
(   26) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIMES
(   27) !
(   28) INTEGER (KIND=JPLIKB) IREP, IRANG, INIMEX, INIMES
(   29) !
(   30) LOGICAL LLRLFI






NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 3

(   31) !
(   32) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   33) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   34) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   35) LOGICAL                  LLFATA
(   36) 
(   37) !
(   38) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   39) IF (LHOOK) CALL DR_HOOK('FANIME_MT',0,ZHOOK_HANDLE)
(   40) CLACTI=''
(   41) CALL FANUMU_MT64                 &
(   42) &               (FA, KNUMER,IRANG)
(   43) INIMEX=0
(   44) !
(   45) IF (IRANG.EQ.0) THEN
(   46)   IREP=-51
(   47) ELSEIF (KNIMES.GE.0.AND.KNIMES.LE.2) THEN
(   48)   INIMEX=IXNVMS (IRANG)
(   49)   FA%FICHIER(IRANG)%NIVOMS=KNIMES
(   50)   CALL LFINIM_MT64                            &
(   51) &                 (FA%LFI, IREP,KNUMER,KNIMES)
(   52)   LLRLFI=IREP.NE.0
(   53) ELSE
(   54)   IREP=-52
(   55) ENDIF
(   56) !
(   57) KREP=IREP
(   58) LLFATA=LLMOER (IREP,IRANG)
(   59) !
(   60) IF (LLFATA.OR.MAX (IXNVMS (IRANG),INIMEX).EQ.2) THEN
(   61)   INIMES=2
(   62) ELSE
(   63)   IF (LHOOK) CALL DR_HOOK('FANIME_MT',1,ZHOOK_HANDLE)
(   64)   RETURN
(   65) ENDIF
(   66) !
(   67) CLNSPR='FANIME'
(   68) WRITE (UNIT=CLMESS,FMT='(''KREP='',I4,'', KNUMER='',I3, &
(   69) &       '', KNIMES='',I3)') KREP,KNUMER,KNIMES
(   70) CALL FAIPAR_MT64                                     &
(   71) &               (FA, KNUMER,INIMES,IREP,LLFATA,CLMESS, &
(   72) &             CLNSPR,CLACTI,.FALSE.)
(   73) !
(   74) IF (LHOOK) CALL DR_HOOK('FANIME_MT',1,ZHOOK_HANDLE)
(   75) 
(   76) CONTAINS
(   77) 
(   78) #include "facom2.llmoer.h"
(   79) #include "facom2.ixnvms.h"
(   80) 
(   81) END SUBROUTINE FANIME_MT64
(   82) 
(   83) 
(   84) 
(   85) ! Oct-2012 P. Marguinaud 64b LFI
(   86) SUBROUTINE FANIME64              &
(   87) &           (KREP, KNUMER, KNIMES)
(   88) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 4

(   89) &                   FA_COM_DEFAULT_INIT,  &
(   90) &                   NEW_FA_DEFAULT
(   91) USE LFI_PRECISION
(   92) IMPLICIT NONE
(   93) ! Arguments
(   94) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   95) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   96) INTEGER (KIND=JPLIKB)  KNIMES                                 ! IN   
(   97) 
(   98) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   99) 
(  100) CALL FANIME_MT64                     &
(  101) &           (FA, KREP, KNUMER, KNIMES)
(  102) 
(  103) END SUBROUTINE FANIME64
(  104) 
(  105) SUBROUTINE FANIME                &
(  106) &           (KREP, KNUMER, KNIMES)
(  107) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  108) &                   FA_COM_DEFAULT_INIT,  &
(  109) &                   NEW_FA_DEFAULT
(  110) USE LFI_PRECISION
(  111) IMPLICIT NONE
(  112) ! Arguments
(  113) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  114) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  115) INTEGER (KIND=JPLIKM)  KNIMES                                 ! IN   
(  116) 
(  117) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  118) 
(  119) CALL FANIME_MT                       &
(  120) &           (FA, KREP, KNUMER, KNIMES)
(  121) 
(  122) END SUBROUTINE FANIME
(  123) 
(  124) SUBROUTINE FANIME_MT                 &
(  125) &           (FA, KREP, KNUMER, KNIMES)
(  126) USE FA_MOD, ONLY : FA_COM
(  127) USE LFI_PRECISION
(  128) IMPLICIT NONE
(  129) ! Arguments
(  130) TYPE (FA_COM)          FA                                     ! INOUT
(  131) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  132) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  133) INTEGER (KIND=JPLIKM)  KNIMES                                 ! IN   
(  134) ! Local integers
(  135) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  136) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  137) INTEGER (KIND=JPLIKB)  INIMES                                 ! IN   
(  138) ! Convert arguments
(  139) 
(  140) INUMER     = INT (    KNUMER, JPLIKB)
(  141) INIMES     = INT (    KNIMES, JPLIKB)
(  142) 
(  143) CALL FANIME_MT64                     &
(  144) &           (FA, IREP, INUMER, INIMES)
(  145) 
(  146) KREP       = INT (      IREP, JPLIKM)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 5

(  147) 
(  148) END SUBROUTINE FANIME_MT
(  149) 
(  150) !INTF KREP            OUT 
(  151) !INTF KNUMER        IN    
(  152) !INTF KNIMES        IN    


























































NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 6

(    1) # 1 "fanime.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FANIME_MT64                           &
(    4) &                     (FA,  KREP, KNUMER, KNIMES )
(    5) USE FA_MOD, ONLY : FA_COM
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme permet d'ajuster le Niveau de Messagerie
(   12) !     propre aux actions faites sur un fichier particulier, ouvert pour
(   13) !     le Logiciel de Fichiers ARPEGE, de meme que le Niveau correspon-
(   14) !     dant du logiciel LFI.
(   15) !        Cependant, tant que le Niveau de Messagerie Global *FA%NIMSGA*
(   16) !     vaut 0 ou 2, le niveau propre au fichier est inoperant.
(   17) !     *FA%NIMSGA* vaut par defaut 1, et est reglable via le s/p "FANMSG".
(   18) !**
(   19) !     Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   20) !                 KNUMER (Entree) ==> Numero d'Unite Logique concernee;
(   21) !                 KNIMES (Entree) ==> Niveau de Messagerie souhaite.
(   22) !
(   23) !
(   24) !
(   25) TYPE(FA_COM) :: FA
(   26) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIMES
(   27) !
(   28) INTEGER (KIND=JPLIKB) IREP, IRANG, INIMEX, INIMES
(   29) !
(   30) LOGICAL LLRLFI
(   31) !
(   32) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   33) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   34) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   35) LOGICAL                  LLFATA
(   36) # 37 "fanime.F90"
(   37) !
(   38) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   39) IF (LHOOK) CALL DR_HOOK('FANIME_MT',0,ZHOOK_HANDLE)
(   40) CLACTI=''
(   41) CALL FANUMU_MT64                 &
(   42) &               (FA, KNUMER,IRANG)
(   43) INIMEX=0
(   44) !
(   45) IF (IRANG.EQ.0) THEN
(   46)   IREP=-51
(   47) ELSEIF (KNIMES.GE.0.AND.KNIMES.LE.2) THEN
(   48)   INIMEX=IXNVMS (IRANG)
(   49)   FA%FICHIER(IRANG)%NIVOMS=KNIMES
(   50)   CALL LFINIM_MT64                            &
(   51) &                 (FA%LFI, IREP,KNUMER,KNIMES)
(   52)   LLRLFI=IREP.NE.0
(   53) ELSE
(   54)   IREP=-52
(   55) ENDIF
(   56) !
(   57) KREP=IREP






NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 7

(   58) LLFATA=LLMOER (IREP,IRANG)
(   59) !
(   60) IF (LLFATA.OR.MAX (IXNVMS (IRANG),INIMEX).EQ.2) THEN
(   61)   INIMES=2
(   62) ELSE
(   63)   IF (LHOOK) CALL DR_HOOK('FANIME_MT',1,ZHOOK_HANDLE)
(   64)   RETURN
(   65) ENDIF
(   66) !
(   67) CLNSPR='FANIME'
(   68) WRITE (UNIT=CLMESS,FMT='(''KREP='',I4,'', KNUMER='',I3, &
(   69) &       '', KNIMES='',I3)') KREP,KNUMER,KNIMES
(   70) CALL FAIPAR_MT64                                     &
(   71) &               (FA, KNUMER,INIMES,IREP,LLFATA,CLMESS, &
(   72) &             CLNSPR,CLACTI,.FALSE.)
(   73) !
(   74) IF (LHOOK) CALL DR_HOOK('FANIME_MT',1,ZHOOK_HANDLE)
(   75) # 76 "fanime.F90"
(   76) CONTAINS
(   77) # 78 "fanime.F90"
(   78) # 1 ".D[27]/facom2.llmoer.h"
(    1) !
(    2) !       Fonction servant a rendre fatale ou non une erreur detectee,
(    3) !       a l'aide du code reponse courant, du niveau de filtrage global,
(    4) !       et de l'option d'erreur fatale propre au fichier.
(    5) !       s'il n'y a pas de fichier (I5678=0, d'ou dimensionnement de
(    6) !          *LERRFA*), le niveau de filtrage joue le role principal.
(    7) !
(    8) LOGICAL FUNCTION LLMOER (I1234,I5678)
(    9) INTEGER (KIND=JPLIKB) :: I1234,I5678
(   10) LLMOER=I1234.EQ.-66_JPLIKB .OR. (I1234.NE.0_JPLIKB .AND.(FA%NRFAGA.EQ.0_JPLIKB &
(   11)      & .OR. (FA%NRFAGA.EQ.1_JPLIKB .AND.FA%FICHIER(I5678)%LERRFA)))
(   12) END FUNCTION
(   13) # 79 "fanime.F90"
(   79) # 79 "fanime.F90"
(   79) # 1 ".D[27]/facom2.ixnvms.h"
(    1) !*
(    2) !       Fonction "en ligne" donnant le plus haut niveau de messagerie
(    3) !       acceptable pour l'unite logique de rang "I3456"
(    4) !       (utilisation des niveaux de messagerie global et propre au
(    5) !        fichier; s'il n'y a pas de fichier - I3456=0, d'ou le dimensio-
(    6) !        nnement de *NIVOMS* a partir de zero, le niveau de filtrage
(    7) !        global joue seul)
(    8) !
(    9) INTEGER (KIND=JPLIKB) FUNCTION IXNVMS (I3456)
(   10) INTEGER (KIND=JPLIKB) :: I3456
(   11) IXNVMS =MIN (2_JPLIKB ,2_JPLIKB *FA%NIMSGA,MAX (2_JPLIKB *FA%NIMSGA-2_JPLIKB ,FA%FICHIER(I3456)%NIVOMS))
(   12) END FUNCTION
(   13) # 80 "fanime.F90"
(   80) # 81 "fanime.F90"
(   81) END SUBROUTINE FANIME_MT64
(   82) # 85 "fanime.F90"
(   85) ! Oct-2012 P. Marguinaud 64b LFI
(   86) SUBROUTINE FANIME64              &
(   87) &           (KREP, KNUMER, KNIMES)
(   88) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   89) &                   FA_COM_DEFAULT_INIT,  &
(   90) &                   NEW_FA_DEFAULT






NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 8

(   91) USE LFI_PRECISION
(   92) IMPLICIT NONE
(   93) ! Arguments
(   94) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   95) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   96) INTEGER (KIND=JPLIKB)  KNIMES                                 ! IN   
(   97) # 98 "fanime.F90"
(   98) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   99) # 100 "fanime.F90"
(  100) CALL FANIME_MT64                     &
(  101) &           (FA, KREP, KNUMER, KNIMES)
(  102) # 103 "fanime.F90"
(  103) END SUBROUTINE FANIME64
(  104) # 105 "fanime.F90"
(  105) SUBROUTINE FANIME                &
(  106) &           (KREP, KNUMER, KNIMES)
(  107) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  108) &                   FA_COM_DEFAULT_INIT,  &
(  109) &                   NEW_FA_DEFAULT
(  110) USE LFI_PRECISION
(  111) IMPLICIT NONE
(  112) ! Arguments
(  113) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  114) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  115) INTEGER (KIND=JPLIKM)  KNIMES                                 ! IN   
(  116) # 117 "fanime.F90"
(  117) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  118) # 119 "fanime.F90"
(  119) CALL FANIME_MT                       &
(  120) &           (FA, KREP, KNUMER, KNIMES)
(  121) # 122 "fanime.F90"
(  122) END SUBROUTINE FANIME
(  123) # 124 "fanime.F90"
(  124) SUBROUTINE FANIME_MT                 &
(  125) &           (FA, KREP, KNUMER, KNIMES)
(  126) USE FA_MOD, ONLY : FA_COM
(  127) USE LFI_PRECISION
(  128) IMPLICIT NONE
(  129) ! Arguments
(  130) TYPE (FA_COM)          FA                                     ! INOUT
(  131) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  132) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  133) INTEGER (KIND=JPLIKM)  KNIMES                                 ! IN   
(  134) ! Local integers
(  135) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  136) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  137) INTEGER (KIND=JPLIKB)  INIMES                                 ! IN   
(  138) ! Convert arguments
(  139) # 140 "fanime.F90"
(  140) INUMER     = INT (    KNUMER, JPLIKB)
(  141) INIMES     = INT (    KNIMES, JPLIKB)
(  142) # 143 "fanime.F90"
(  143) CALL FANIME_MT64                     &
(  144) &           (FA, IREP, INUMER, INIMES)
(  145) # 146 "fanime.F90"
(  146) KREP       = INT (      IREP, JPLIKM)
(  147) # 148 "fanime.F90"
(  148) END SUBROUTINE FANIME_MT






NVFORTRAN (Version     23.1)          02/24/2023  13:54:14      page 9

(  149) # 150 "fanime.F90"
(  150) !INTF KREP            OUT 
(  151) !INTF KNUMER        IN    
(  152) !INTF KNIMES        IN    
