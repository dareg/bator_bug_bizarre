


NVFORTRAN (Version     23.1)          02/24/2023  13:54:13      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:13      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: faixla.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAIXLA_MT64           &
(    4) &                     (FA)
(    5) USE FA_MOD, ONLY : FA_COM
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme est charge des Initialisations des
(   12) !     tableaux XLAp.d., utilises pour aplatir le spectre des champs
(   13) !     avant le compactage (coefficients spectraux seulement).
(   14) !**
(   15) !
(   16) !
(   17) !
(   18) TYPE(FA_COM) :: FA
(   19) INTEGER (KIND=JPLIKB) J, JN, IDEBUT
(   20) INTEGER (KIND=JPLIKB) IFIN, INDM, INDN, JJPUIS
(   21) 
(   22) !
(   23) !
(   24) !        On commence par les allocations des differents tableaux
(   25) !
(   26) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   27) IF (LHOOK) CALL DR_HOOK('FAIXLA_MT',0,ZHOOK_HANDLE)
(   28) ALLOCATE (FA%XLAP1D (FA%JPXTRO,0:1))
(   29) ALLOCATE (FA%XLAP1DA (FA%JPXTRO*FA%JPXTRO,0:1))
(   30) ALLOCATE (FA%XLAP2D (2:FA%JPXCSP,FA%JPUILA,0:1))






NVFORTRAN (Version     23.1)          02/24/2023  13:54:13      page 3

(   31) ALLOCATE (FA%XLAP2DA (FA%JPXTRO*FA%JPXTRO,FA%JPUILA,0:1))
(   32) !
(   33) DO JN=1,FA%JPXTRO
(   34)   FA%XLAP1D(JN,0)=REAL (JN*(JN+1), JPDBLR)
(   35)   FA%XLAP1D(JN,1)=1._JPDBLR/FA%XLAP1D(JN,0)
(   36) ENDDO
(   37) !
(   38) DO JN=1,FA%JPXTRO*FA%JPXTRO
(   39)   INDN=1+(JN-1)/FA%JPXTRO
(   40)   INDM=JN-(INDN-1)*FA%JPXTRO
(   41)   FA%XLAP1DA(JN,0)=REAL (INDN**2+INDM**2, JPDBLR)
(   42)   FA%XLAP1DA(JN,1)=1._JPDBLR/FA%XLAP1DA(JN,0)
(   43) ENDDO
(   44) !
(   45) DO JN=1,FA%JPXTRO
(   46)   IDEBUT=JN**2+1
(   47)   IFIN=(1+JN)**2
(   48) !
(   49)   DO JJPUIS=1,FA%JPUILA
(   50) !
(   51) !NEC$ ivdep
(   52)   DO J=IDEBUT,IFIN
(   53)     FA%XLAP2D(J,JJPUIS,0)=FA%XLAP1D(JN,0)**JJPUIS
(   54)     FA%XLAP2D(J,JJPUIS,1)=1._JPDBLR/FA%XLAP2D(J,JJPUIS,0)
(   55)   ENDDO
(   56) !        
(   57)   ENDDO
(   58) !
(   59) ENDDO
(   60) !
(   61) DO JJPUIS=1,FA%JPUILA
(   62) !
(   63) !NEC$ ivdep
(   64) DO JN=1,FA%JPXTRO**2 
(   65)   FA%XLAP2DA(JN,JJPUIS,0)=FA%XLAP1DA(JN,0)**JJPUIS
(   66)   FA%XLAP2DA(JN,JJPUIS,1)=1._JPDBLR/FA%XLAP2DA(JN,JJPUIS,0)
(   67) ENDDO
(   68) !
(   69) ENDDO
(   70) !
(   71) !
(   72) IF (LHOOK) CALL DR_HOOK('FAIXLA_MT',1,ZHOOK_HANDLE)
(   73) END SUBROUTINE FAIXLA_MT64
(   74) 
(   75) 
(   76) 
(   77) ! Oct-2012 P. Marguinaud 64b LFI
(   78) SUBROUTINE FAIXLA64           &
(   79) &           ()
(   80) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   81) &                   FA_COM_DEFAULT_INIT,  &
(   82) &                   NEW_FA_DEFAULT
(   83) USE LFI_PRECISION
(   84) IMPLICIT NONE
(   85) ! Arguments
(   86) 
(   87) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   88) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:13      page 4

(   89) CALL FAIXLA_MT64           &
(   90) &           (FA)
(   91) 
(   92) END SUBROUTINE FAIXLA64
(   93) 
(   94) SUBROUTINE FAIXLA             &
(   95) &           ()
(   96) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   97) &                   FA_COM_DEFAULT_INIT,  &
(   98) &                   NEW_FA_DEFAULT
(   99) USE LFI_PRECISION
(  100) IMPLICIT NONE
(  101) ! Arguments
(  102) 
(  103) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  104) 
(  105) CALL FAIXLA_MT             &
(  106) &           (FA)
(  107) 
(  108) END SUBROUTINE FAIXLA
(  109) 
(  110) SUBROUTINE FAIXLA_MT             &
(  111) &           (FA)
(  112) USE FA_MOD, ONLY : FA_COM
(  113) USE LFI_PRECISION
(  114) IMPLICIT NONE
(  115) ! Arguments
(  116) TYPE (FA_COM)          FA                                     ! INOUT
(  117) ! Local integers
(  118) ! Convert arguments
(  119) 
(  120) 
(  121) CALL FAIXLA_MT64           &
(  122) &           (FA)
(  123) 
(  124) 
(  125) END SUBROUTINE FAIXLA_MT



























NVFORTRAN (Version     23.1)          02/24/2023  13:54:13      page 5

(    1) # 1 "faixla.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAIXLA_MT64           &
(    4) &                     (FA)
(    5) USE FA_MOD, ONLY : FA_COM
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme est charge des Initialisations des
(   12) !     tableaux XLAp.d., utilises pour aplatir le spectre des champs
(   13) !     avant le compactage (coefficients spectraux seulement).
(   14) !**
(   15) !
(   16) !
(   17) !
(   18) TYPE(FA_COM) :: FA
(   19) INTEGER (KIND=JPLIKB) J, JN, IDEBUT
(   20) INTEGER (KIND=JPLIKB) IFIN, INDM, INDN, JJPUIS
(   21) # 22 "faixla.F90"
(   22) !
(   23) !
(   24) !        On commence par les allocations des differents tableaux
(   25) !
(   26) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   27) IF (LHOOK) CALL DR_HOOK('FAIXLA_MT',0,ZHOOK_HANDLE)
(   28) ALLOCATE (FA%XLAP1D (FA%JPXTRO,0:1))
(   29) ALLOCATE (FA%XLAP1DA (FA%JPXTRO*FA%JPXTRO,0:1))
(   30) ALLOCATE (FA%XLAP2D (2:FA%JPXCSP,FA%JPUILA,0:1))
(   31) ALLOCATE (FA%XLAP2DA (FA%JPXTRO*FA%JPXTRO,FA%JPUILA,0:1))
(   32) !
(   33) DO JN=1,FA%JPXTRO
(   34)   FA%XLAP1D(JN,0)=REAL (JN*(JN+1), JPDBLR)
(   35)   FA%XLAP1D(JN,1)=1._JPDBLR/FA%XLAP1D(JN,0)
(   36) ENDDO
(   37) !
(   38) DO JN=1,FA%JPXTRO*FA%JPXTRO
(   39)   INDN=1+(JN-1)/FA%JPXTRO
(   40)   INDM=JN-(INDN-1)*FA%JPXTRO
(   41)   FA%XLAP1DA(JN,0)=REAL (INDN**2+INDM**2, JPDBLR)
(   42)   FA%XLAP1DA(JN,1)=1._JPDBLR/FA%XLAP1DA(JN,0)
(   43) ENDDO
(   44) !
(   45) DO JN=1,FA%JPXTRO
(   46)   IDEBUT=JN**2+1
(   47)   IFIN=(1+JN)**2
(   48) !
(   49)   DO JJPUIS=1,FA%JPUILA
(   50) !
(   51) !NEC$ ivdep
(   52)   DO J=IDEBUT,IFIN
(   53)     FA%XLAP2D(J,JJPUIS,0)=FA%XLAP1D(JN,0)**JJPUIS
(   54)     FA%XLAP2D(J,JJPUIS,1)=1._JPDBLR/FA%XLAP2D(J,JJPUIS,0)
(   55)   ENDDO
(   56) !        
(   57)   ENDDO






NVFORTRAN (Version     23.1)          02/24/2023  13:54:13      page 6

(   58) !
(   59) ENDDO
(   60) !
(   61) DO JJPUIS=1,FA%JPUILA
(   62) !
(   63) !NEC$ ivdep
(   64) DO JN=1,FA%JPXTRO**2 
(   65)   FA%XLAP2DA(JN,JJPUIS,0)=FA%XLAP1DA(JN,0)**JJPUIS
(   66)   FA%XLAP2DA(JN,JJPUIS,1)=1._JPDBLR/FA%XLAP2DA(JN,JJPUIS,0)
(   67) ENDDO
(   68) !
(   69) ENDDO
(   70) !
(   71) !
(   72) IF (LHOOK) CALL DR_HOOK('FAIXLA_MT',1,ZHOOK_HANDLE)
(   73) END SUBROUTINE FAIXLA_MT64
(   74) # 77 "faixla.F90"
(   77) ! Oct-2012 P. Marguinaud 64b LFI
(   78) SUBROUTINE FAIXLA64           &
(   79) &           ()
(   80) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   81) &                   FA_COM_DEFAULT_INIT,  &
(   82) &                   NEW_FA_DEFAULT
(   83) USE LFI_PRECISION
(   84) IMPLICIT NONE
(   85) ! Arguments
(   86) # 87 "faixla.F90"
(   87) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   88) # 89 "faixla.F90"
(   89) CALL FAIXLA_MT64           &
(   90) &           (FA)
(   91) # 92 "faixla.F90"
(   92) END SUBROUTINE FAIXLA64
(   93) # 94 "faixla.F90"
(   94) SUBROUTINE FAIXLA             &
(   95) &           ()
(   96) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   97) &                   FA_COM_DEFAULT_INIT,  &
(   98) &                   NEW_FA_DEFAULT
(   99) USE LFI_PRECISION
(  100) IMPLICIT NONE
(  101) ! Arguments
(  102) # 103 "faixla.F90"
(  103) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  104) # 105 "faixla.F90"
(  105) CALL FAIXLA_MT             &
(  106) &           (FA)
(  107) # 108 "faixla.F90"
(  108) END SUBROUTINE FAIXLA
(  109) # 110 "faixla.F90"
(  110) SUBROUTINE FAIXLA_MT             &
(  111) &           (FA)
(  112) USE FA_MOD, ONLY : FA_COM
(  113) USE LFI_PRECISION
(  114) IMPLICIT NONE
(  115) ! Arguments
(  116) TYPE (FA_COM)          FA                                     ! INOUT
(  117) ! Local integers






NVFORTRAN (Version     23.1)          02/24/2023  13:54:13      page 7

(  118) ! Convert arguments
(  119) # 121 "faixla.F90"
(  121) CALL FAIXLA_MT64           &
(  122) &           (FA)
(  123) # 125 "faixla.F90"
(  125) END SUBROUTINE FAIXLA_MT
