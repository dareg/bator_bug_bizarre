


NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: fadeco.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FADECO_MT64                                                &
(    4) &                     (FA,  KREP,   KNUMER, CDPREF, KNIVAU, CDSUFF,   &
(    5) &                      LDCOSP, CDNOMA, KLNOMA, KVALCO, KLONGD,        &
(    6) &                      PCHAMP )
(    7) USE FA_MOD, ONLY : FA_COM, FAGR1TAB
(    8) USE PARKIND1, ONLY : JPRB
(    9) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(   10) USE LFI_PRECISION
(   11) IMPLICIT NONE
(   12) !****
(   13) !      Sous-programme de controle et de DECODAGE d'un CHAMP HORIZONTAL
(   14) !      venant d'etre lu sur un fichier ARPEGE/ALADIN.
(   15) !       ( DECOdage de donnees )
(   16) !**
(   17) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   18) !                KNUMER (Entree) ==> Numero de l'unite logique;
(   19) !                CDPREF (Entree) ==> Prefixe eventuel du nom d'article;
(   20) !                KNIVAU (Entree) ==> Niveau vertical eventuel;
(   21) !                CDSUFF (Entree) ==> Suffixe eventuel du nom d'article;
(   22) !                LDCOSP (Entree) ==> Vrai si le champ est represente
(   23) !                                    par des coefficients spectraux;
(   24) !                CDNOMA (Sortie) ==> Nom de l'article-champ lu;
(   25) !                KLNOMA (Sortie) ==> Nombre de caracteres utiles dans
(   26) !                                    CDNOMA;
(   27) !    ( Tableau ) KVALCO (Entree) ==> Donnees issues de la lecture;
(   28) !                KLONGD (Entree) ==> Nombre de valeurs (mots de 64 bits
(   29) !                                    en principe) lues;
(   30) !    ( Tableau ) PCHAMP (Sortie) ==> Valeurs REELLES du champ lu.






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 3

(   31) !
(   32) !    Remarques:
(   33) !
(   34) !    - KVALCO est type entier, et doit avoir une longueur
(   35) !      suffisante pour stocker les donnees codees. Le dimensionnement
(   36) !      "tous terrains" est (2+ILCHAM), qui permet le cas echeant de
(   37) !      stocker un champ a pleine resolution sans codage effectif.
(   38) !      (ILCHAM est le nombre de valeurs du champ a decoder)
(   39) !
(   40) !    - CDNOMA doit avoir au moins FA%JPXNOM caracteres.
(   41) !
(   42) !
(   43) TYPE(FA_COM) :: FA
(   44) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIVAU, KLNOMA, KLONGD
(   45) !
(   46) !
(   47) REAL (KIND=JPDBLR) PCHAMP (*), ZUNDF
(   48) INTEGER (KIND=JPLIKB) KVALCO(*)
(   49) !
(   50) LOGICAL LDCOSP, LLUNDF
(   51) !
(   52) CHARACTER CDPREF*(*), CDSUFF*(*), CDNOMA*(*)
(   53) TYPE (FAGR1TAB) YLGR1TAB
(   54) !
(   55) 
(   56) !**
(   57) !     1.  -  CONTROLES ET INITIALISATIONS.
(   58) !-----------------------------------------------------------------------
(   59) !
(   60) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   61) IF (LHOOK) CALL DR_HOOK('FADECO_MT',0,ZHOOK_HANDLE)
(   62) 
(   63) CALL FADEC1_MT64 (FA, KREP,   KNUMER, CDPREF, KNIVAU, CDSUFF,  &
(   64)                 & LDCOSP, CDNOMA, KLNOMA, KVALCO, KLONGD,      & 
(   65)                 & PCHAMP, LLUNDF, ZUNDF, YLGR1TAB)
(   66) 
(   67) IF (LHOOK) CALL DR_HOOK('FADECO_MT',1,ZHOOK_HANDLE)
(   68) 
(   69) END SUBROUTINE FADECO_MT64
(   70) 
(   71) ! Oct-2012 P. Marguinaud 64b LFI
(   72) SUBROUTINE FADECO64                                        &
(   73) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(   74) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(   75) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   76) &                  FA_COM_DEFAULT_INIT,  &
(   77) &                  NEW_FA_DEFAULT
(   78) USE LFI_PRECISION
(   79) IMPLICIT NONE
(   80) ! Arguments
(   81) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   82) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   83) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(   84) INTEGER (KIND=JPLIKB)  KNIVAU                                 ! IN   
(   85) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(   86) LOGICAL                LDCOSP                                 ! IN   
(   87) CHARACTER (LEN=*)      CDNOMA                                 !   OUT
(   88) INTEGER (KIND=JPLIKB)  KLNOMA                                 !   OUT






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 4

(   89) INTEGER (KIND=JPLIKB)  KVALCO     (*)                         ! IN   
(   90) INTEGER (KIND=JPLIKB)  KLONGD                                 ! IN   
(   91) REAL (KIND=JPDBLR)     PCHAMP     (*)                         !   OUT
(   92) 
(   93) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   94) 
(   95) CALL FADECO_MT64                                               &
(   96) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(   97) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(   98) 
(   99) END SUBROUTINE FADECO64
(  100) 
(  101) SUBROUTINE FADECO                                          &
(  102) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(  103) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(  104) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  105) &                  FA_COM_DEFAULT_INIT,  &
(  106) &                  NEW_FA_DEFAULT
(  107) USE LFI_PRECISION
(  108) IMPLICIT NONE
(  109) ! Arguments
(  110) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  111) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  112) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  113) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  114) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  115) LOGICAL                LDCOSP                                 ! IN   
(  116) CHARACTER (LEN=*)      CDNOMA                                 !   OUT
(  117) INTEGER (KIND=JPLIKM)  KLNOMA                                 !   OUT
(  118) INTEGER (KIND=JPLIKB)  KVALCO     (*)                         ! IN   
(  119) INTEGER (KIND=JPLIKM)  KLONGD                                 ! IN   
(  120) REAL (KIND=JPDBLR)     PCHAMP     (*)                         !   OUT
(  121) 
(  122) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  123) 
(  124) CALL FADECO_MT                                                 &
(  125) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(  126) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(  127) 
(  128) END SUBROUTINE FADECO
(  129) 
(  130) SUBROUTINE FADECO_MT                                           &
(  131) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(  132) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(  133) USE FA_MOD, ONLY : FA_COM
(  134) USE LFI_PRECISION
(  135) IMPLICIT NONE
(  136) ! Arguments
(  137) TYPE (FA_COM)          FA                                     ! INOUT
(  138) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  139) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  140) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  141) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  142) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  143) LOGICAL                LDCOSP                                 ! IN   
(  144) CHARACTER (LEN=*)      CDNOMA                                 !   OUT
(  145) INTEGER (KIND=JPLIKM)  KLNOMA                                 !   OUT
(  146) INTEGER (KIND=JPLIKB)  KVALCO     (*)                         ! IN   






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 5

(  147) INTEGER (KIND=JPLIKM)  KLONGD                                 ! IN   
(  148) REAL (KIND=JPDBLR)     PCHAMP     (*)                         !   OUT
(  149) ! Local integers
(  150) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  151) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  152) INTEGER (KIND=JPLIKB)  INIVAU                                 ! IN   
(  153) INTEGER (KIND=JPLIKB)  ILNOMA                                 !   OUT
(  154) INTEGER (KIND=JPLIKB)  ILONGD                                 ! IN   
(  155) ! Convert arguments
(  156) 
(  157) INUMER     = INT (    KNUMER, JPLIKB)
(  158) INIVAU     = INT (    KNIVAU, JPLIKB)
(  159) ILONGD     = INT (    KLONGD, JPLIKB)
(  160) 
(  161) CALL FADECO_MT64                                               &
(  162) &           (FA, IREP, INUMER, CDPREF, INIVAU, CDSUFF, LDCOSP, &
(  163) &            CDNOMA, ILNOMA, KVALCO, ILONGD, PCHAMP)
(  164) 
(  165) KREP       = INT (      IREP, JPLIKM)
(  166) KLNOMA     = INT (    ILNOMA, JPLIKM)
(  167) 
(  168) END SUBROUTINE FADECO_MT
(  169) 
(  170) !INTF KREP            OUT                                                              
(  171) !INTF KNUMER        IN                                                                 
(  172) !INTF CDPREF        IN                                                                 
(  173) !INTF KNIVAU        IN                                                                 
(  174) !INTF CDSUFF        IN                                                                 
(  175) !INTF LDCOSP        IN                                                                 
(  176) !INTF CDNOMA          OUT                                                              
(  177) !INTF KLNOMA          OUT                                                              
(  178) !INTF KVALCO        IN    DIMS=*                         KIND=JPLIKB                   
(  179) !INTF KLONGD        IN                                                                 
(  180) !INTF PCHAMP          OUT DIMS=*                                                       






























NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 6

(    1) # 1 "fadeco.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FADECO_MT64                                                &
(    4) &                     (FA,  KREP,   KNUMER, CDPREF, KNIVAU, CDSUFF,   &
(    5) &                      LDCOSP, CDNOMA, KLNOMA, KVALCO, KLONGD,        &
(    6) &                      PCHAMP )
(    7) USE FA_MOD, ONLY : FA_COM, FAGR1TAB
(    8) USE PARKIND1, ONLY : JPRB
(    9) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(   10) USE LFI_PRECISION
(   11) IMPLICIT NONE
(   12) !****
(   13) !      Sous-programme de controle et de DECODAGE d'un CHAMP HORIZONTAL
(   14) !      venant d'etre lu sur un fichier ARPEGE/ALADIN.
(   15) !       ( DECOdage de donnees )
(   16) !**
(   17) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   18) !                KNUMER (Entree) ==> Numero de l'unite logique;
(   19) !                CDPREF (Entree) ==> Prefixe eventuel du nom d'article;
(   20) !                KNIVAU (Entree) ==> Niveau vertical eventuel;
(   21) !                CDSUFF (Entree) ==> Suffixe eventuel du nom d'article;
(   22) !                LDCOSP (Entree) ==> Vrai si le champ est represente
(   23) !                                    par des coefficients spectraux;
(   24) !                CDNOMA (Sortie) ==> Nom de l'article-champ lu;
(   25) !                KLNOMA (Sortie) ==> Nombre de caracteres utiles dans
(   26) !                                    CDNOMA;
(   27) !    ( Tableau ) KVALCO (Entree) ==> Donnees issues de la lecture;
(   28) !                KLONGD (Entree) ==> Nombre de valeurs (mots de 64 bits
(   29) !                                    en principe) lues;
(   30) !    ( Tableau ) PCHAMP (Sortie) ==> Valeurs REELLES du champ lu.
(   31) !
(   32) !    Remarques:
(   33) !
(   34) !    - KVALCO est type entier, et doit avoir une longueur
(   35) !      suffisante pour stocker les donnees codees. Le dimensionnement
(   36) !      "tous terrains" est (2+ILCHAM), qui permet le cas echeant de
(   37) !      stocker un champ a pleine resolution sans codage effectif.
(   38) !      (ILCHAM est le nombre de valeurs du champ a decoder)
(   39) !
(   40) !    - CDNOMA doit avoir au moins FA%JPXNOM caracteres.
(   41) !
(   42) !
(   43) TYPE(FA_COM) :: FA
(   44) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIVAU, KLNOMA, KLONGD
(   45) !
(   46) !
(   47) REAL (KIND=JPDBLR) PCHAMP (*), ZUNDF
(   48) INTEGER (KIND=JPLIKB) KVALCO(*)
(   49) !
(   50) LOGICAL LDCOSP, LLUNDF
(   51) !
(   52) CHARACTER CDPREF*(*), CDSUFF*(*), CDNOMA*(*)
(   53) TYPE (FAGR1TAB) YLGR1TAB
(   54) !
(   55) # 56 "fadeco.F90"
(   56) !**
(   57) !     1.  -  CONTROLES ET INITIALISATIONS.






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 7

(   58) !-----------------------------------------------------------------------
(   59) !
(   60) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   61) IF (LHOOK) CALL DR_HOOK('FADECO_MT',0,ZHOOK_HANDLE)
(   62) # 63 "fadeco.F90"
(   63) CALL FADEC1_MT64 (FA, KREP,   KNUMER, CDPREF, KNIVAU, CDSUFF,  &
(   64)                 & LDCOSP, CDNOMA, KLNOMA, KVALCO, KLONGD,      & 
(   65)                 & PCHAMP, LLUNDF, ZUNDF, YLGR1TAB)
(   66) # 67 "fadeco.F90"
(   67) IF (LHOOK) CALL DR_HOOK('FADECO_MT',1,ZHOOK_HANDLE)
(   68) # 69 "fadeco.F90"
(   69) END SUBROUTINE FADECO_MT64
(   70) # 71 "fadeco.F90"
(   71) ! Oct-2012 P. Marguinaud 64b LFI
(   72) SUBROUTINE FADECO64                                        &
(   73) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(   74) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(   75) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   76) &                  FA_COM_DEFAULT_INIT,  &
(   77) &                  NEW_FA_DEFAULT
(   78) USE LFI_PRECISION
(   79) IMPLICIT NONE
(   80) ! Arguments
(   81) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   82) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   83) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(   84) INTEGER (KIND=JPLIKB)  KNIVAU                                 ! IN   
(   85) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(   86) LOGICAL                LDCOSP                                 ! IN   
(   87) CHARACTER (LEN=*)      CDNOMA                                 !   OUT
(   88) INTEGER (KIND=JPLIKB)  KLNOMA                                 !   OUT
(   89) INTEGER (KIND=JPLIKB)  KVALCO     (*)                         ! IN   
(   90) INTEGER (KIND=JPLIKB)  KLONGD                                 ! IN   
(   91) REAL (KIND=JPDBLR)     PCHAMP     (*)                         !   OUT
(   92) # 93 "fadeco.F90"
(   93) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   94) # 95 "fadeco.F90"
(   95) CALL FADECO_MT64                                               &
(   96) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(   97) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(   98) # 99 "fadeco.F90"
(   99) END SUBROUTINE FADECO64
(  100) # 101 "fadeco.F90"
(  101) SUBROUTINE FADECO                                          &
(  102) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(  103) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(  104) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  105) &                  FA_COM_DEFAULT_INIT,  &
(  106) &                  NEW_FA_DEFAULT
(  107) USE LFI_PRECISION
(  108) IMPLICIT NONE
(  109) ! Arguments
(  110) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  111) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  112) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  113) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  114) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  115) LOGICAL                LDCOSP                                 ! IN   






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 8

(  116) CHARACTER (LEN=*)      CDNOMA                                 !   OUT
(  117) INTEGER (KIND=JPLIKM)  KLNOMA                                 !   OUT
(  118) INTEGER (KIND=JPLIKB)  KVALCO     (*)                         ! IN   
(  119) INTEGER (KIND=JPLIKM)  KLONGD                                 ! IN   
(  120) REAL (KIND=JPDBLR)     PCHAMP     (*)                         !   OUT
(  121) # 122 "fadeco.F90"
(  122) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  123) # 124 "fadeco.F90"
(  124) CALL FADECO_MT                                                 &
(  125) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(  126) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(  127) # 128 "fadeco.F90"
(  128) END SUBROUTINE FADECO
(  129) # 130 "fadeco.F90"
(  130) SUBROUTINE FADECO_MT                                           &
(  131) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, LDCOSP, &
(  132) &            CDNOMA, KLNOMA, KVALCO, KLONGD, PCHAMP)
(  133) USE FA_MOD, ONLY : FA_COM
(  134) USE LFI_PRECISION
(  135) IMPLICIT NONE
(  136) ! Arguments
(  137) TYPE (FA_COM)          FA                                     ! INOUT
(  138) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  139) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  140) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  141) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  142) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  143) LOGICAL                LDCOSP                                 ! IN   
(  144) CHARACTER (LEN=*)      CDNOMA                                 !   OUT
(  145) INTEGER (KIND=JPLIKM)  KLNOMA                                 !   OUT
(  146) INTEGER (KIND=JPLIKB)  KVALCO     (*)                         ! IN   
(  147) INTEGER (KIND=JPLIKM)  KLONGD                                 ! IN   
(  148) REAL (KIND=JPDBLR)     PCHAMP     (*)                         !   OUT
(  149) ! Local integers
(  150) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  151) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  152) INTEGER (KIND=JPLIKB)  INIVAU                                 ! IN   
(  153) INTEGER (KIND=JPLIKB)  ILNOMA                                 !   OUT
(  154) INTEGER (KIND=JPLIKB)  ILONGD                                 ! IN   
(  155) ! Convert arguments
(  156) # 157 "fadeco.F90"
(  157) INUMER     = INT (    KNUMER, JPLIKB)
(  158) INIVAU     = INT (    KNIVAU, JPLIKB)
(  159) ILONGD     = INT (    KLONGD, JPLIKB)
(  160) # 161 "fadeco.F90"
(  161) CALL FADECO_MT64                                               &
(  162) &           (FA, IREP, INUMER, CDPREF, INIVAU, CDSUFF, LDCOSP, &
(  163) &            CDNOMA, ILNOMA, KVALCO, ILONGD, PCHAMP)
(  164) # 165 "fadeco.F90"
(  165) KREP       = INT (      IREP, JPLIKM)
(  166) KLNOMA     = INT (    ILNOMA, JPLIKM)
(  167) # 168 "fadeco.F90"
(  168) END SUBROUTINE FADECO_MT
(  169) # 170 "fadeco.F90"
(  170) !INTF KREP            OUT                                                              
(  171) !INTF KNUMER        IN                                                                 
(  172) !INTF CDPREF        IN                                                                 
(  173) !INTF KNIVAU        IN                                                                 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 9

(  174) !INTF CDSUFF        IN                                                                 
(  175) !INTF LDCOSP        IN                                                                 
(  176) !INTF CDNOMA          OUT                                                              
(  177) !INTF KLNOMA          OUT                                                              
(  178) !INTF KVALCO        IN    DIMS=*                         KIND=JPLIKB                   
(  179) !INTF KLONGD        IN                                                                 
(  180) !INTF PCHAMP          OUT DIMS=*                                                       
