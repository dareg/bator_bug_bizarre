


NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: fagiot.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAGIOT_MT64                                              &
(    4) &                     (FA,  KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, &
(    5) &                      KNARG5)
(    6) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !        Ce sous-programme permet de modifier les options implicites
(   13) !     liees au codage GRIB des champs.
(   14) !     CES OPTIONS NE SONT UTILISEES QUE POUR (RE)ECRIRE DES CHAMPS
(   15) !     codes en GRIB, et les nouvelles valeurs implicites ne serviront
(   16) !     que LORS d'une OUVERTURE de FICHIER ULTERIEURE.
(   17) !       ( Grib, Implicites Options Techniques )
(   18) !**
(   19) !     Arguments : KNGRIB (Entree) ==> Niveau de codage GRIB (-1,0,1,2,3);
(   20) !                 KNARG1 (Entree) ==> Nombre de bits par valeur point-
(   21) !                                     de-grille;
(   22) !                 KNARG2 (Entree) ==> Nombre de bits par partie reelle/
(   23) !                                     imaginaire de coeff. spectral;
(   24) !                 KNARG3 (Entree) ==> Sous-troncature non compactee;
(   25) !                 KNARG4 (Entree) ==> Puissance de laplacien;
(   26) !                 KNARG5 (Entree) ==> Degre de modulation de KNARG4.
(   27) !
(   28) !     N.B.: Il doit y avoir coherence vis-a-vis des cadres deja definis
(   29) !           et vis-a-vis des limites usagers.
(   30) !           ( ce qui en pratique, ne concerne que KNARG3 )






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 3

(   31) !
(   32) !     Remarque:  KNARG3 egal a -1 est accepte, et dans ce cas
(   33) !                on indexera (a chaque ouverture de fichier) la sous-
(   34) !                troncature effective sur la troncature.
(   35) !
(   36) !      MODIF 30/03/2007 JM AUDOIN FA%LFAMOP pour limiter IMPRESSION
(   37) !
(   38) !
(   39) !
(   40) TYPE(FA_COM) :: FA
(   41) INTEGER (KIND=JPLIKB) KNGRIB, KNARG1, KNARG2
(   42) INTEGER (KIND=JPLIKB) KNARG3, KNARG4, KNARG5
(   43) !
(   44) INTEGER (KIND=JPLIKB) IMINIM, IREP, INIMES
(   45) INTEGER (KIND=JPLIKB) INUMER, J, IRANGC
(   46) !
(   47) LOGICAL LLVERG
(   48) !
(   49) !
(   50) !
(   51) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   52) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   53) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   54) LOGICAL                  LLFATA
(   55) 
(   56) !**
(   57) !     1.  -  CONTROLES ET INITIALISATIONS.
(   58) !-----------------------------------------------------------------------
(   59) !
(   60) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   61) IF (LHOOK) CALL DR_HOOK('FAGIOT_MT',0,ZHOOK_HANDLE)
(   62) CLACTI=''
(   63) IF (FA%FAGIOT_LLPREA) THEN
(   64) !
(   65) !          A la premiere utilisation, appel au sous-programme "FARINE".
(   66) !
(   67)   CALL FARINE_MT64             &
(   68) &                (FA, 2_JPLIKB )
(   69)   FA%FAGIOT_LLPREA=.FALSE.
(   70) ENDIF
(   71) !
(   72) LLVERG=.FALSE.
(   73) IMINIM=MIN (2+KNGRIB,2+KNARG1,2+KNARG2,2+KNARG3,1+KNARG5)
(   74) !
(   75) IF (IMINIM.LE.0) THEN
(   76)   IREP=-64
(   77)   GOTO 1001
(   78) ELSEIF (KNARG1*KNARG2.EQ.0) THEN
(   79)   IREP=-64
(   80)   GOTO 1001
(   81) ELSEIF (KNGRIB.GT.3 .AND. .NOT. FALGRA (KNGRIB)) THEN
(   82)   IREP=-96
(   83)   GOTO 1001
(   84) ELSEIF (MAX (KNARG1,KNARG2).GT.FA%NBIMAX) THEN
(   85)   IREP=-97
(   86)   GOTO 1001
(   87) ELSEIF (ABS (KNARG4).GT.2**15-1) THEN
(   88)   IREP=-98






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 4

(   89)   GOTO 1001
(   90) ENDIF
(   91) !
(   92) !         Verrouillage global eventuel.
(   93) !
(   94) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(   95) &                              (FA%LFI, FA%VRGLAS,'ON')
(   96) LLVERG=FA%LFAMUL
(   97) !
(   98) IF (KNARG3.GE.FA%NXTRON) THEN
(   99)   IREP=-113
(  100)   GOTO 1001
(  101) ENDIF
(  102) !
(  103) !        Coherence de "KNARG3" vis-a-vis de la troncature des cadres
(  104) !     deja definis.
(  105) !
(  106) DO J=1,FA%NCADEF
(  107) IRANGC=FA%NCAIND(J)
(  108) !
(  109) IF (KNARG3.GE.FA%CADRE(IRANGC)%MTRONC) THEN
(  110)   IREP=-99
(  111)   GOTO 1001
(  112) ENDIF
(  113) !
(  114) ENDDO
(  115) !**
(  116) !     2.  -  STOCKAGE DES NOUVEAUX PARAMETRES.
(  117) !-----------------------------------------------------------------------
(  118) !
(  119) IF (FA%LFAMOP.AND.(FA%NIGRIB.EQ.-1.OR.FA%NIGRIB.EQ.3).AND. &
(  120) &    (KNGRIB.GT.-1.AND.KNGRIB.LT.3))     THEN
(  121)   WRITE (UNIT=FA%NULOUT,FMT=*)'-----------------'
(  122)   WRITE (UNIT=FA%NULOUT,FMT=*)                                   &
(  123) &          'FAGIOT: CAUTION!! Les champs spectraux ARPEGE ne',    &
(  124) &          ' devront pas etre ranges comme dans le modele ARPEGE'
(  125)   WRITE (UNIT=FA%NULOUT,FMT=*)'-----------------'
(  126) ENDIF
(  127) IF (FA%LFAMOP.AND.(KNGRIB.EQ.-1.OR.KNGRIB.EQ.3).AND. &
(  128) &    (FA%NIGRIB.GT.-1.AND.FA%NIGRIB.LT.3))     THEN
(  129)   WRITE (UNIT=FA%NULOUT,FMT=*)'-----------------'
(  130)   WRITE (UNIT=FA%NULOUT,FMT=*)                                     &
(  131) &          'FAGIOT: CAUTION!! Les champs spectraux ARPEGE devront', &
(  132) &          ' etre ranges comme dans le modele ARPEGE'
(  133)   WRITE (UNIT=FA%NULOUT,FMT=*)'-----------------'
(  134) ENDIF
(  135) FA%NIGRIB=KNGRIB
(  136) FA%NBIPDG=KNARG1
(  137) FA%NBICSP=KNARG2
(  138) FA%NSTROI=KNARG3
(  139) FA%NPUILA=KNARG4
(  140) FA%NMIDPL=KNARG5
(  141) IREP=0
(  142) !**
(  143) !    10.  -  PHASE TERMINALE : MESSAGERIE, AVEC "ABORT" EVENTUEL,
(  144) !            VIA LE SOUS-PROGRAMME "FAIPAR" .
(  145) !-----------------------------------------------------------------------
(  146) !






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 5

(  147) 1001 CONTINUE
(  148) LLFATA=LLMOER (IREP,0_JPLIKB )
(  149) !
(  150) !        Deverrouillage global eventuel.
(  151) !
(  152) IF (LLVERG) CALL LFIVER_MT64                         &
(  153) &                           (FA%LFI, FA%VRGLAS,'OFF')
(  154) !
(  155) IF (LLFATA) THEN
(  156)   INIMES=2
(  157) ELSE
(  158)   INIMES=FA%NIMSGA
(  159) ENDIF
(  160) !
(  161) IF (.NOT.LLFATA.AND.INIMES.NE.2)  THEN 
(  162)   IF (LHOOK) CALL DR_HOOK('FAGIOT_MT',1,ZHOOK_HANDLE)
(  163)   RETURN
(  164) ENDIF
(  165) !
(  166) CLNSPR='FAGIOT'
(  167) !
(  168) WRITE (UNIT=CLMESS,FMT='(''KNGRIB='',I2,'', KNARG1='',I3,  &
(  169) &       '', KNARG2='',I3,'', KNARG3='',I2,'', KNARG4='',I3, &
(  170) &       '', KNARG5='',I3)')                                 &
(  171) &   KNGRIB,KNARG1,KNARG2,KNARG3,KNARG4,KNARG5
(  172) INUMER=JPNIIL
(  173) CALL FAIPAR_MT64                                     &
(  174) &               (FA, INUMER,INIMES,IREP,LLFATA,CLMESS, &
(  175) &                CLNSPR,CLACTI,.FALSE.)
(  176) !
(  177) IF (LHOOK) CALL DR_HOOK('FAGIOT_MT',1,ZHOOK_HANDLE)
(  178) 
(  179) CONTAINS
(  180) 
(  181) #include "facom2.llmoer.h"
(  182) #include "falgra.h"
(  183) 
(  184) END SUBROUTINE FAGIOT_MT64
(  185) 
(  186) 
(  187) 
(  188) ! Oct-2012 P. Marguinaud 64b LFI
(  189) SUBROUTINE FAGIOT64                                        &
(  190) &           (KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  191) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  192) &                   FA_COM_DEFAULT_INIT,  &
(  193) &                   NEW_FA_DEFAULT
(  194) USE LFI_PRECISION
(  195) IMPLICIT NONE
(  196) ! Arguments
(  197) INTEGER (KIND=JPLIKB)  KNGRIB                                 ! IN   
(  198) INTEGER (KIND=JPLIKB)  KNARG1                                 ! IN   
(  199) INTEGER (KIND=JPLIKB)  KNARG2                                 ! IN   
(  200) INTEGER (KIND=JPLIKB)  KNARG3                                 ! IN   
(  201) INTEGER (KIND=JPLIKB)  KNARG4                                 ! IN   
(  202) INTEGER (KIND=JPLIKB)  KNARG5                                 ! IN   
(  203) 
(  204) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 6

(  205) 
(  206) CALL FAGIOT_MT64                                               &
(  207) &           (FA, KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  208) 
(  209) END SUBROUTINE FAGIOT64
(  210) 
(  211) SUBROUTINE FAGIOT                                          &
(  212) &           (KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  213) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  214) &                   FA_COM_DEFAULT_INIT,  &
(  215) &                   NEW_FA_DEFAULT
(  216) USE LFI_PRECISION
(  217) IMPLICIT NONE
(  218) ! Arguments
(  219) INTEGER (KIND=JPLIKM)  KNGRIB                                 ! IN   
(  220) INTEGER (KIND=JPLIKM)  KNARG1                                 ! IN   
(  221) INTEGER (KIND=JPLIKM)  KNARG2                                 ! IN   
(  222) INTEGER (KIND=JPLIKM)  KNARG3                                 ! IN   
(  223) INTEGER (KIND=JPLIKM)  KNARG4                                 ! IN   
(  224) INTEGER (KIND=JPLIKM)  KNARG5                                 ! IN   
(  225) 
(  226) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  227) 
(  228) CALL FAGIOT_MT                                                 &
(  229) &           (FA, KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  230) 
(  231) END SUBROUTINE FAGIOT
(  232) 
(  233) SUBROUTINE FAGIOT_MT                                           &
(  234) &           (FA, KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  235) USE FA_MOD, ONLY : FA_COM
(  236) USE LFI_PRECISION
(  237) IMPLICIT NONE
(  238) ! Arguments
(  239) TYPE (FA_COM)          FA                                     ! INOUT
(  240) INTEGER (KIND=JPLIKM)  KNGRIB                                 ! IN   
(  241) INTEGER (KIND=JPLIKM)  KNARG1                                 ! IN   
(  242) INTEGER (KIND=JPLIKM)  KNARG2                                 ! IN   
(  243) INTEGER (KIND=JPLIKM)  KNARG3                                 ! IN   
(  244) INTEGER (KIND=JPLIKM)  KNARG4                                 ! IN   
(  245) INTEGER (KIND=JPLIKM)  KNARG5                                 ! IN   
(  246) ! Local integers
(  247) INTEGER (KIND=JPLIKB)  INGRIB                                 ! IN   
(  248) INTEGER (KIND=JPLIKB)  INARG1                                 ! IN   
(  249) INTEGER (KIND=JPLIKB)  INARG2                                 ! IN   
(  250) INTEGER (KIND=JPLIKB)  INARG3                                 ! IN   
(  251) INTEGER (KIND=JPLIKB)  INARG4                                 ! IN   
(  252) INTEGER (KIND=JPLIKB)  INARG5                                 ! IN   
(  253) ! Convert arguments
(  254) 
(  255) INGRIB     = INT (    KNGRIB, JPLIKB)
(  256) INARG1     = INT (    KNARG1, JPLIKB)
(  257) INARG2     = INT (    KNARG2, JPLIKB)
(  258) INARG3     = INT (    KNARG3, JPLIKB)
(  259) INARG4     = INT (    KNARG4, JPLIKB)
(  260) INARG5     = INT (    KNARG5, JPLIKB)
(  261) 
(  262) CALL FAGIOT_MT64                                               &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 7

(  263) &           (FA, INGRIB, INARG1, INARG2, INARG3, INARG4, INARG5)
(  264) 
(  265) 
(  266) END SUBROUTINE FAGIOT_MT
(  267) 
(  268) !INTF KNGRIB        IN    
(  269) !INTF KNARG1        IN    
(  270) !INTF KNARG2        IN    
(  271) !INTF KNARG3        IN    
(  272) !INTF KNARG4        IN    
(  273) !INTF KNARG5        IN    





















































NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 8

(    1) # 1 "fagiot.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAGIOT_MT64                                              &
(    4) &                     (FA,  KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, &
(    5) &                      KNARG5)
(    6) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !        Ce sous-programme permet de modifier les options implicites
(   13) !     liees au codage GRIB des champs.
(   14) !     CES OPTIONS NE SONT UTILISEES QUE POUR (RE)ECRIRE DES CHAMPS
(   15) !     codes en GRIB, et les nouvelles valeurs implicites ne serviront
(   16) !     que LORS d'une OUVERTURE de FICHIER ULTERIEURE.
(   17) !       ( Grib, Implicites Options Techniques )
(   18) !**
(   19) !     Arguments : KNGRIB (Entree) ==> Niveau de codage GRIB (-1,0,1,2,3);
(   20) !                 KNARG1 (Entree) ==> Nombre de bits par valeur point-
(   21) !                                     de-grille;
(   22) !                 KNARG2 (Entree) ==> Nombre de bits par partie reelle/
(   23) !                                     imaginaire de coeff. spectral;
(   24) !                 KNARG3 (Entree) ==> Sous-troncature non compactee;
(   25) !                 KNARG4 (Entree) ==> Puissance de laplacien;
(   26) !                 KNARG5 (Entree) ==> Degre de modulation de KNARG4.
(   27) !
(   28) !     N.B.: Il doit y avoir coherence vis-a-vis des cadres deja definis
(   29) !           et vis-a-vis des limites usagers.
(   30) !           ( ce qui en pratique, ne concerne que KNARG3 )
(   31) !
(   32) !     Remarque:  KNARG3 egal a -1 est accepte, et dans ce cas
(   33) !                on indexera (a chaque ouverture de fichier) la sous-
(   34) !                troncature effective sur la troncature.
(   35) !
(   36) !      MODIF 30/03/2007 JM AUDOIN FA%LFAMOP pour limiter IMPRESSION
(   37) !
(   38) !
(   39) !
(   40) TYPE(FA_COM) :: FA
(   41) INTEGER (KIND=JPLIKB) KNGRIB, KNARG1, KNARG2
(   42) INTEGER (KIND=JPLIKB) KNARG3, KNARG4, KNARG5
(   43) !
(   44) INTEGER (KIND=JPLIKB) IMINIM, IREP, INIMES
(   45) INTEGER (KIND=JPLIKB) INUMER, J, IRANGC
(   46) !
(   47) LOGICAL LLVERG
(   48) !
(   49) !
(   50) !
(   51) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   52) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   53) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   54) LOGICAL                  LLFATA
(   55) # 56 "fagiot.F90"
(   56) !**
(   57) !     1.  -  CONTROLES ET INITIALISATIONS.






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 9

(   58) !-----------------------------------------------------------------------
(   59) !
(   60) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   61) IF (LHOOK) CALL DR_HOOK('FAGIOT_MT',0,ZHOOK_HANDLE)
(   62) CLACTI=''
(   63) IF (FA%FAGIOT_LLPREA) THEN
(   64) !
(   65) !          A la premiere utilisation, appel au sous-programme "FARINE".
(   66) !
(   67)   CALL FARINE_MT64             &
(   68) &                (FA, 2_JPLIKB )
(   69)   FA%FAGIOT_LLPREA=.FALSE.
(   70) ENDIF
(   71) !
(   72) LLVERG=.FALSE.
(   73) IMINIM=MIN (2+KNGRIB,2+KNARG1,2+KNARG2,2+KNARG3,1+KNARG5)
(   74) !
(   75) IF (IMINIM.LE.0) THEN
(   76)   IREP=-64
(   77)   GOTO 1001
(   78) ELSEIF (KNARG1*KNARG2.EQ.0) THEN
(   79)   IREP=-64
(   80)   GOTO 1001
(   81) ELSEIF (KNGRIB.GT.3 .AND. .NOT. FALGRA (KNGRIB)) THEN
(   82)   IREP=-96
(   83)   GOTO 1001
(   84) ELSEIF (MAX (KNARG1,KNARG2).GT.FA%NBIMAX) THEN
(   85)   IREP=-97
(   86)   GOTO 1001
(   87) ELSEIF (ABS (KNARG4).GT.2**15-1) THEN
(   88)   IREP=-98
(   89)   GOTO 1001
(   90) ENDIF
(   91) !
(   92) !         Verrouillage global eventuel.
(   93) !
(   94) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(   95) &                              (FA%LFI, FA%VRGLAS,'ON')
(   96) LLVERG=FA%LFAMUL
(   97) !
(   98) IF (KNARG3.GE.FA%NXTRON) THEN
(   99)   IREP=-113
(  100)   GOTO 1001
(  101) ENDIF
(  102) !
(  103) !        Coherence de "KNARG3" vis-a-vis de la troncature des cadres
(  104) !     deja definis.
(  105) !
(  106) DO J=1,FA%NCADEF
(  107) IRANGC=FA%NCAIND(J)
(  108) !
(  109) IF (KNARG3.GE.FA%CADRE(IRANGC)%MTRONC) THEN
(  110)   IREP=-99
(  111)   GOTO 1001
(  112) ENDIF
(  113) !
(  114) ENDDO
(  115) !**






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 10

(  116) !     2.  -  STOCKAGE DES NOUVEAUX PARAMETRES.
(  117) !-----------------------------------------------------------------------
(  118) !
(  119) IF (FA%LFAMOP.AND.(FA%NIGRIB.EQ.-1.OR.FA%NIGRIB.EQ.3).AND. &
(  120) &    (KNGRIB.GT.-1.AND.KNGRIB.LT.3))     THEN
(  121)   WRITE (UNIT=FA%NULOUT,FMT=*)'-----------------'
(  122)   WRITE (UNIT=FA%NULOUT,FMT=*)                                   &
(  123) &          'FAGIOT: CAUTION!! Les champs spectraux ARPEGE ne',    &
(  124) &          ' devront pas etre ranges comme dans le modele ARPEGE'
(  125)   WRITE (UNIT=FA%NULOUT,FMT=*)'-----------------'
(  126) ENDIF
(  127) IF (FA%LFAMOP.AND.(KNGRIB.EQ.-1.OR.KNGRIB.EQ.3).AND. &
(  128) &    (FA%NIGRIB.GT.-1.AND.FA%NIGRIB.LT.3))     THEN
(  129)   WRITE (UNIT=FA%NULOUT,FMT=*)'-----------------'
(  130)   WRITE (UNIT=FA%NULOUT,FMT=*)                                     &
(  131) &          'FAGIOT: CAUTION!! Les champs spectraux ARPEGE devront', &
(  132) &          ' etre ranges comme dans le modele ARPEGE'
(  133)   WRITE (UNIT=FA%NULOUT,FMT=*)'-----------------'
(  134) ENDIF
(  135) FA%NIGRIB=KNGRIB
(  136) FA%NBIPDG=KNARG1
(  137) FA%NBICSP=KNARG2
(  138) FA%NSTROI=KNARG3
(  139) FA%NPUILA=KNARG4
(  140) FA%NMIDPL=KNARG5
(  141) IREP=0
(  142) !**
(  143) !    10.  -  PHASE TERMINALE : MESSAGERIE, AVEC "ABORT" EVENTUEL,
(  144) !            VIA LE SOUS-PROGRAMME "FAIPAR" .
(  145) !-----------------------------------------------------------------------
(  146) !
(  147) 1001 CONTINUE
(  148) LLFATA=LLMOER (IREP,0_JPLIKB )
(  149) !
(  150) !        Deverrouillage global eventuel.
(  151) !
(  152) IF (LLVERG) CALL LFIVER_MT64                         &
(  153) &                           (FA%LFI, FA%VRGLAS,'OFF')
(  154) !
(  155) IF (LLFATA) THEN
(  156)   INIMES=2
(  157) ELSE
(  158)   INIMES=FA%NIMSGA
(  159) ENDIF
(  160) !
(  161) IF (.NOT.LLFATA.AND.INIMES.NE.2)  THEN 
(  162)   IF (LHOOK) CALL DR_HOOK('FAGIOT_MT',1,ZHOOK_HANDLE)
(  163)   RETURN
(  164) ENDIF
(  165) !
(  166) CLNSPR='FAGIOT'
(  167) !
(  168) WRITE (UNIT=CLMESS,FMT='(''KNGRIB='',I2,'', KNARG1='',I3,  &
(  169) &       '', KNARG2='',I3,'', KNARG3='',I2,'', KNARG4='',I3, &
(  170) &       '', KNARG5='',I3)')                                 &
(  171) &   KNGRIB,KNARG1,KNARG2,KNARG3,KNARG4,KNARG5
(  172) INUMER=JPNIIL
(  173) CALL FAIPAR_MT64                                     &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 11

(  174) &               (FA, INUMER,INIMES,IREP,LLFATA,CLMESS, &
(  175) &                CLNSPR,CLACTI,.FALSE.)
(  176) !
(  177) IF (LHOOK) CALL DR_HOOK('FAGIOT_MT',1,ZHOOK_HANDLE)
(  178) # 179 "fagiot.F90"
(  179) CONTAINS
(  180) # 181 "fagiot.F90"
(  181) # 1 ".D[27]/facom2.llmoer.h"
(    1) !
(    2) !       Fonction servant a rendre fatale ou non une erreur detectee,
(    3) !       a l'aide du code reponse courant, du niveau de filtrage global,
(    4) !       et de l'option d'erreur fatale propre au fichier.
(    5) !       s'il n'y a pas de fichier (I5678=0, d'ou dimensionnement de
(    6) !          *LERRFA*), le niveau de filtrage joue le role principal.
(    7) !
(    8) LOGICAL FUNCTION LLMOER (I1234,I5678)
(    9) INTEGER (KIND=JPLIKB) :: I1234,I5678
(   10) LLMOER=I1234.EQ.-66_JPLIKB .OR. (I1234.NE.0_JPLIKB .AND.(FA%NRFAGA.EQ.0_JPLIKB &
(   11)      & .OR. (FA%NRFAGA.EQ.1_JPLIKB .AND.FA%FICHIER(I5678)%LERRFA)))
(   12) END FUNCTION
(   13) # 182 "fagiot.F90"
(  182) # 182 "fagiot.F90"
(  182) # 1 ".D[27]/falgra.h"
(    1) LOGICAL FUNCTION FALGRA (KNGRIB)
(    2) !****
(    3) !    Cette fonction renvoie une valeur vraie si la methode d'encodage passee en argument fait appel a grib_api
(    4) !**
(    5) !    Arguments : KNGRIB (Entree) ==> Methode d'encodage
(    6) !
(    7) !
(    8) INTEGER (KIND=JPLIKB) KNGRIB
(    9) INTEGER (KIND=JPLIKB) INGRIB_SP, INGRIB_GP
(   10) LOGICAL LLFALGRA_SP, LLFALGRA_GP
(   11) # 12 ".D[27]/falgra.h"
(   12) FALGRA = .FALSE.
(   13) # 14 ".D[27]/falgra.h"
(   14) IF (100 <= KNGRIB .AND. KNGRIB <= 200) THEN
(   15) # 16 ".D[27]/falgra.h"
(   16)   INGRIB_SP = FALGRA_SP (KNGRIB)
(   17)   INGRIB_GP = FALGRA_GP (KNGRIB)
(   18)   
(   19)   LLFALGRA_SP = &
(   20)    & (INGRIB_SP - 100 ==  1) .OR. &      ! GRIB2 complex packing (bug)
(   21)    & (INGRIB_SP - 100 ==  2) .OR. &      ! GRIB0 
(   22)    & (INGRIB_SP - 100 ==  3)             ! GRIB2 complex packing
(   23)   
(   24)   LLFALGRA_GP = &
(   25)    & ((INGRIB_GP-100) / 20 ==  1) .OR. & ! GRIB2 simple packing
(   26)    & ((INGRIB_GP-100) / 20 ==  2) .OR. & ! GRIB2 second order packing
(   27)    & ((INGRIB_GP-100) / 20 ==  3) .OR. & ! GRIB1 simple packing
(   28)    & ((INGRIB_GP-100) / 20 ==  4) .OR. & ! GRIB1 second order packing
(   29)    & ((INGRIB_GP-100) / 20 ==  5)        ! GRIB2 complex packing
(   30)    
(   31) # 32 ".D[27]/falgra.h"
(   32)   IF (LLFALGRA_GP .AND. LLFALGRA_SP) THEN
(   33)     FALGRA = .TRUE.
(   34)   ELSEIF (LLFALGRA_GP) THEN
(   35)     FALGRA = INGRIB_SP == 100






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 12

(   36)   ELSEIF (LLFALGRA_SP) THEN
(   37)     FALGRA = INGRIB_GP == 100
(   38)   ENDIF
(   39) # 40 ".D[27]/falgra.h"
(   40) ENDIF
(   41) # 42 ".D[27]/falgra.h"
(   42) END FUNCTION FALGRA
(   43) # 44 ".D[27]/falgra.h"
(   44) INTEGER (KIND=JPLIKB) FUNCTION FALGRA_SP (KNGRIB)
(   45) INTEGER (KIND=JPLIKB) KNGRIB
(   46) FALGRA_SP = 100+MODULO ((KNGRIB-100),20)
(   47) END FUNCTION FALGRA_SP
(   48) # 49 ".D[27]/falgra.h"
(   49) INTEGER (KIND=JPLIKB) FUNCTION FALGRA_GP (KNGRIB)
(   50) INTEGER (KIND=JPLIKB) KNGRIB
(   51) FALGRA_GP = 100+20*((KNGRIB-100)/20)
(   52) END FUNCTION FALGRA_GP
(   53) # 54 ".D[27]/falgra.h"
(   54) INTEGER (KIND=JPLIKB) FUNCTION FALGRA_ED (KNGRIB)
(   55) INTEGER (KIND=JPLIKB) KNGRIB
(   56) # 57 ".D[27]/falgra.h"
(   57) SELECT CASE (KNGRIB)
(   58)   CASE (160, 180)
(   59)     FALGRA_ED = 1
(   60)   CASE DEFAULT
(   61)     FALGRA_ED = 2
(   62) END SELECT 
(   63) # 64 ".D[27]/falgra.h"
(   64) END FUNCTION FALGRA_ED
(   65) # 183 "fagiot.F90"
(  183) # 184 "fagiot.F90"
(  184) END SUBROUTINE FAGIOT_MT64
(  185) # 188 "fagiot.F90"
(  188) ! Oct-2012 P. Marguinaud 64b LFI
(  189) SUBROUTINE FAGIOT64                                        &
(  190) &           (KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  191) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  192) &                   FA_COM_DEFAULT_INIT,  &
(  193) &                   NEW_FA_DEFAULT
(  194) USE LFI_PRECISION
(  195) IMPLICIT NONE
(  196) ! Arguments
(  197) INTEGER (KIND=JPLIKB)  KNGRIB                                 ! IN   
(  198) INTEGER (KIND=JPLIKB)  KNARG1                                 ! IN   
(  199) INTEGER (KIND=JPLIKB)  KNARG2                                 ! IN   
(  200) INTEGER (KIND=JPLIKB)  KNARG3                                 ! IN   
(  201) INTEGER (KIND=JPLIKB)  KNARG4                                 ! IN   
(  202) INTEGER (KIND=JPLIKB)  KNARG5                                 ! IN   
(  203) # 204 "fagiot.F90"
(  204) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  205) # 206 "fagiot.F90"
(  206) CALL FAGIOT_MT64                                               &
(  207) &           (FA, KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  208) # 209 "fagiot.F90"
(  209) END SUBROUTINE FAGIOT64
(  210) # 211 "fagiot.F90"
(  211) SUBROUTINE FAGIOT                                          &
(  212) &           (KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 13

(  213) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  214) &                   FA_COM_DEFAULT_INIT,  &
(  215) &                   NEW_FA_DEFAULT
(  216) USE LFI_PRECISION
(  217) IMPLICIT NONE
(  218) ! Arguments
(  219) INTEGER (KIND=JPLIKM)  KNGRIB                                 ! IN   
(  220) INTEGER (KIND=JPLIKM)  KNARG1                                 ! IN   
(  221) INTEGER (KIND=JPLIKM)  KNARG2                                 ! IN   
(  222) INTEGER (KIND=JPLIKM)  KNARG3                                 ! IN   
(  223) INTEGER (KIND=JPLIKM)  KNARG4                                 ! IN   
(  224) INTEGER (KIND=JPLIKM)  KNARG5                                 ! IN   
(  225) # 226 "fagiot.F90"
(  226) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  227) # 228 "fagiot.F90"
(  228) CALL FAGIOT_MT                                                 &
(  229) &           (FA, KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  230) # 231 "fagiot.F90"
(  231) END SUBROUTINE FAGIOT
(  232) # 233 "fagiot.F90"
(  233) SUBROUTINE FAGIOT_MT                                           &
(  234) &           (FA, KNGRIB, KNARG1, KNARG2, KNARG3, KNARG4, KNARG5)
(  235) USE FA_MOD, ONLY : FA_COM
(  236) USE LFI_PRECISION
(  237) IMPLICIT NONE
(  238) ! Arguments
(  239) TYPE (FA_COM)          FA                                     ! INOUT
(  240) INTEGER (KIND=JPLIKM)  KNGRIB                                 ! IN   
(  241) INTEGER (KIND=JPLIKM)  KNARG1                                 ! IN   
(  242) INTEGER (KIND=JPLIKM)  KNARG2                                 ! IN   
(  243) INTEGER (KIND=JPLIKM)  KNARG3                                 ! IN   
(  244) INTEGER (KIND=JPLIKM)  KNARG4                                 ! IN   
(  245) INTEGER (KIND=JPLIKM)  KNARG5                                 ! IN   
(  246) ! Local integers
(  247) INTEGER (KIND=JPLIKB)  INGRIB                                 ! IN   
(  248) INTEGER (KIND=JPLIKB)  INARG1                                 ! IN   
(  249) INTEGER (KIND=JPLIKB)  INARG2                                 ! IN   
(  250) INTEGER (KIND=JPLIKB)  INARG3                                 ! IN   
(  251) INTEGER (KIND=JPLIKB)  INARG4                                 ! IN   
(  252) INTEGER (KIND=JPLIKB)  INARG5                                 ! IN   
(  253) ! Convert arguments
(  254) # 255 "fagiot.F90"
(  255) INGRIB     = INT (    KNGRIB, JPLIKB)
(  256) INARG1     = INT (    KNARG1, JPLIKB)
(  257) INARG2     = INT (    KNARG2, JPLIKB)
(  258) INARG3     = INT (    KNARG3, JPLIKB)
(  259) INARG4     = INT (    KNARG4, JPLIKB)
(  260) INARG5     = INT (    KNARG5, JPLIKB)
(  261) # 262 "fagiot.F90"
(  262) CALL FAGIOT_MT64                                               &
(  263) &           (FA, INGRIB, INARG1, INARG2, INARG3, INARG4, INARG5)
(  264) # 266 "fagiot.F90"
(  266) END SUBROUTINE FAGIOT_MT
(  267) # 268 "fagiot.F90"
(  268) !INTF KNGRIB        IN    
(  269) !INTF KNARG1        IN    
(  270) !INTF KNARG2        IN    
(  271) !INTF KNARG3        IN    






NVFORTRAN (Version     23.1)          02/24/2023  13:54:48      page 14

(  272) !INTF KNARG4        IN    
(  273) !INTF KNARG5        IN    
