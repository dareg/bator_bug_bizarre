


NVFORTRAN (Version     23.1)          02/24/2023  13:54:27      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:27      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: fanuca.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FANUCA_MT64                             &
(    4) &                     (FA,  CDNOMC, KRANGC, LDVERR )
(    5) USE FA_MOD, ONLY : FA_COM
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme calcule le RANG du Cadre de NOM
(   12) !     *CDNOMC* dans la table des noms de cadres *FA%CNOMCA*;
(   13) !     S'IL N'Y EST PAS TROUVE, LE RESULTAT EST ZERO.
(   14) !        Ce sous-programme, appele par plusieurs sous-programmes
(   15) !     du Logiciel de Fichiers ARPEGE, se charge lors de son
(   16) !     premier appel d'appeler le sous-programme preparatoire FARINE.
(   17) !**
(   18) !       Arguments : CDNOMC (Entree) ==> Nom de cadre cherche;
(   19) !                   KRANGC (Sortie) ==> Rang dans la table des cadres
(   20) !                                       du logiciel FA (0 si absent);
(   21) !                   LDVERR (Entree) ==> Sert, en mode multi-taches
(   22) !                                       seulement, a savoir si l'on doit
(   23) !                                       verrouiller globalement ou pas.
(   24) !
(   25) !
(   26) !
(   27) TYPE(FA_COM) :: FA
(   28) INTEGER (KIND=JPLIKB) KRANGC
(   29) !
(   30) INTEGER (KIND=JPLIKB) J, IRESUL






NVFORTRAN (Version     23.1)          02/24/2023  13:54:27      page 3

(   31) !
(   32) CHARACTER CDNOMC*(*)
(   33) !
(   34) LOGICAL LDVERR, LLVERG
(   35) !
(   36) !
(   37) 
(   38) !
(   39) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   40) IF (LHOOK) CALL DR_HOOK('FANUCA_MT',0,ZHOOK_HANDLE)
(   41) IF (FA%FANUCA_LLPREA) THEN
(   42)   CALL FARINE_MT64              &
(   43) &                 (FA, 2_JPLIKB )
(   44)   FA%FANUCA_LLPREA=.FALSE.
(   45) ENDIF
(   46) !
(   47) !          VERROUILLAGE GLOBAL (A CAUSE DE L'UTILISATION DE FA%NFIOUV )
(   48) !
(   49) LLVERG=FA%LFAMUL.AND.LDVERR
(   50) IF (LLVERG) CALL LFIVER_MT64                        &
(   51) &                           (FA%LFI, FA%VRGLAS,'ON')
(   52) !
(   53) DO J=1,FA%NCADEF
(   54) !
(   55) IF (CDNOMC.EQ.FA%CADRE(FA%NCAIND(J))%CNOMCA) THEN
(   56)   IRESUL=FA%NCAIND(J)
(   57)   GOTO 20
(   58) ENDIF
(   59) !
(   60) ENDDO
(   61) !
(   62) IRESUL=0
(   63) !
(   64) 20 CONTINUE
(   65) !
(   66) !          DEVERROUILLAGE GLOBAL
(   67) !
(   68) IF (LLVERG) CALL LFIVER_MT64                         &
(   69) &                           (FA%LFI, FA%VRGLAS,'OFF')
(   70) KRANGC=IRESUL
(   71) !
(   72) IF (LHOOK) CALL DR_HOOK('FANUCA_MT',1,ZHOOK_HANDLE)
(   73) END SUBROUTINE FANUCA_MT64
(   74) 
(   75) 
(   76) 
(   77) ! Oct-2012 P. Marguinaud 64b LFI
(   78) SUBROUTINE FANUCA64                &
(   79) &           (CDNOMC, KRANGC, LDVERR)
(   80) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   81) &                   FA_COM_DEFAULT_INIT,  &
(   82) &                   NEW_FA_DEFAULT
(   83) USE LFI_PRECISION
(   84) IMPLICIT NONE
(   85) ! Arguments
(   86) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(   87) INTEGER (KIND=JPLIKB)  KRANGC                                 !   OUT
(   88) LOGICAL                LDVERR                                 ! IN   






NVFORTRAN (Version     23.1)          02/24/2023  13:54:27      page 4

(   89) 
(   90) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   91) 
(   92) CALL FANUCA_MT64                       &
(   93) &           (FA, CDNOMC, KRANGC, LDVERR)
(   94) 
(   95) END SUBROUTINE FANUCA64
(   96) 
(   97) SUBROUTINE FANUCA                  &
(   98) &           (CDNOMC, KRANGC, LDVERR)
(   99) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  100) &                   FA_COM_DEFAULT_INIT,  &
(  101) &                   NEW_FA_DEFAULT
(  102) USE LFI_PRECISION
(  103) IMPLICIT NONE
(  104) ! Arguments
(  105) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  106) INTEGER (KIND=JPLIKM)  KRANGC                                 !   OUT
(  107) LOGICAL                LDVERR                                 ! IN   
(  108) 
(  109) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  110) 
(  111) CALL FANUCA_MT                         &
(  112) &           (FA, CDNOMC, KRANGC, LDVERR)
(  113) 
(  114) END SUBROUTINE FANUCA
(  115) 
(  116) SUBROUTINE FANUCA_MT                   &
(  117) &           (FA, CDNOMC, KRANGC, LDVERR)
(  118) USE FA_MOD, ONLY : FA_COM
(  119) USE LFI_PRECISION
(  120) IMPLICIT NONE
(  121) ! Arguments
(  122) TYPE (FA_COM)          FA                                     ! INOUT
(  123) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  124) INTEGER (KIND=JPLIKM)  KRANGC                                 !   OUT
(  125) LOGICAL                LDVERR                                 ! IN   
(  126) ! Local integers
(  127) INTEGER (KIND=JPLIKB)  IRANGC                                 !   OUT
(  128) ! Convert arguments
(  129) 
(  130) 
(  131) CALL FANUCA_MT64                       &
(  132) &           (FA, CDNOMC, IRANGC, LDVERR)
(  133) 
(  134) KRANGC     = INT (    IRANGC, JPLIKM)
(  135) 
(  136) END SUBROUTINE FANUCA_MT
(  137) 
(  138) !INTF CDNOMC        IN    
(  139) !INTF KRANGC          OUT 
(  140) !INTF LDVERR        IN    












NVFORTRAN (Version     23.1)          02/24/2023  13:54:27      page 5

(    1) # 1 "fanuca.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FANUCA_MT64                             &
(    4) &                     (FA,  CDNOMC, KRANGC, LDVERR )
(    5) USE FA_MOD, ONLY : FA_COM
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme calcule le RANG du Cadre de NOM
(   12) !     *CDNOMC* dans la table des noms de cadres *FA%CNOMCA*;
(   13) !     S'IL N'Y EST PAS TROUVE, LE RESULTAT EST ZERO.
(   14) !        Ce sous-programme, appele par plusieurs sous-programmes
(   15) !     du Logiciel de Fichiers ARPEGE, se charge lors de son
(   16) !     premier appel d'appeler le sous-programme preparatoire FARINE.
(   17) !**
(   18) !       Arguments : CDNOMC (Entree) ==> Nom de cadre cherche;
(   19) !                   KRANGC (Sortie) ==> Rang dans la table des cadres
(   20) !                                       du logiciel FA (0 si absent);
(   21) !                   LDVERR (Entree) ==> Sert, en mode multi-taches
(   22) !                                       seulement, a savoir si l'on doit
(   23) !                                       verrouiller globalement ou pas.
(   24) !
(   25) !
(   26) !
(   27) TYPE(FA_COM) :: FA
(   28) INTEGER (KIND=JPLIKB) KRANGC
(   29) !
(   30) INTEGER (KIND=JPLIKB) J, IRESUL
(   31) !
(   32) CHARACTER CDNOMC*(*)
(   33) !
(   34) LOGICAL LDVERR, LLVERG
(   35) !
(   36) !
(   37) # 38 "fanuca.F90"
(   38) !
(   39) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   40) IF (LHOOK) CALL DR_HOOK('FANUCA_MT',0,ZHOOK_HANDLE)
(   41) IF (FA%FANUCA_LLPREA) THEN
(   42)   CALL FARINE_MT64              &
(   43) &                 (FA, 2_JPLIKB )
(   44)   FA%FANUCA_LLPREA=.FALSE.
(   45) ENDIF
(   46) !
(   47) !          VERROUILLAGE GLOBAL (A CAUSE DE L'UTILISATION DE FA%NFIOUV )
(   48) !
(   49) LLVERG=FA%LFAMUL.AND.LDVERR
(   50) IF (LLVERG) CALL LFIVER_MT64                        &
(   51) &                           (FA%LFI, FA%VRGLAS,'ON')
(   52) !
(   53) DO J=1,FA%NCADEF
(   54) !
(   55) IF (CDNOMC.EQ.FA%CADRE(FA%NCAIND(J))%CNOMCA) THEN
(   56)   IRESUL=FA%NCAIND(J)
(   57)   GOTO 20






NVFORTRAN (Version     23.1)          02/24/2023  13:54:27      page 6

(   58) ENDIF
(   59) !
(   60) ENDDO
(   61) !
(   62) IRESUL=0
(   63) !
(   64) 20 CONTINUE
(   65) !
(   66) !          DEVERROUILLAGE GLOBAL
(   67) !
(   68) IF (LLVERG) CALL LFIVER_MT64                         &
(   69) &                           (FA%LFI, FA%VRGLAS,'OFF')
(   70) KRANGC=IRESUL
(   71) !
(   72) IF (LHOOK) CALL DR_HOOK('FANUCA_MT',1,ZHOOK_HANDLE)
(   73) END SUBROUTINE FANUCA_MT64
(   74) # 77 "fanuca.F90"
(   77) ! Oct-2012 P. Marguinaud 64b LFI
(   78) SUBROUTINE FANUCA64                &
(   79) &           (CDNOMC, KRANGC, LDVERR)
(   80) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   81) &                   FA_COM_DEFAULT_INIT,  &
(   82) &                   NEW_FA_DEFAULT
(   83) USE LFI_PRECISION
(   84) IMPLICIT NONE
(   85) ! Arguments
(   86) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(   87) INTEGER (KIND=JPLIKB)  KRANGC                                 !   OUT
(   88) LOGICAL                LDVERR                                 ! IN   
(   89) # 90 "fanuca.F90"
(   90) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   91) # 92 "fanuca.F90"
(   92) CALL FANUCA_MT64                       &
(   93) &           (FA, CDNOMC, KRANGC, LDVERR)
(   94) # 95 "fanuca.F90"
(   95) END SUBROUTINE FANUCA64
(   96) # 97 "fanuca.F90"
(   97) SUBROUTINE FANUCA                  &
(   98) &           (CDNOMC, KRANGC, LDVERR)
(   99) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  100) &                   FA_COM_DEFAULT_INIT,  &
(  101) &                   NEW_FA_DEFAULT
(  102) USE LFI_PRECISION
(  103) IMPLICIT NONE
(  104) ! Arguments
(  105) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  106) INTEGER (KIND=JPLIKM)  KRANGC                                 !   OUT
(  107) LOGICAL                LDVERR                                 ! IN   
(  108) # 109 "fanuca.F90"
(  109) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  110) # 111 "fanuca.F90"
(  111) CALL FANUCA_MT                         &
(  112) &           (FA, CDNOMC, KRANGC, LDVERR)
(  113) # 114 "fanuca.F90"
(  114) END SUBROUTINE FANUCA
(  115) # 116 "fanuca.F90"
(  116) SUBROUTINE FANUCA_MT                   &
(  117) &           (FA, CDNOMC, KRANGC, LDVERR)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:27      page 7

(  118) USE FA_MOD, ONLY : FA_COM
(  119) USE LFI_PRECISION
(  120) IMPLICIT NONE
(  121) ! Arguments
(  122) TYPE (FA_COM)          FA                                     ! INOUT
(  123) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  124) INTEGER (KIND=JPLIKM)  KRANGC                                 !   OUT
(  125) LOGICAL                LDVERR                                 ! IN   
(  126) ! Local integers
(  127) INTEGER (KIND=JPLIKB)  IRANGC                                 !   OUT
(  128) ! Convert arguments
(  129) # 131 "fanuca.F90"
(  131) CALL FANUCA_MT64                       &
(  132) &           (FA, CDNOMC, IRANGC, LDVERR)
(  133) # 134 "fanuca.F90"
(  134) KRANGC     = INT (    IRANGC, JPLIKM)
(  135) # 136 "fanuca.F90"
(  136) END SUBROUTINE FANUCA_MT
(  137) # 138 "fanuca.F90"
(  138) !INTF CDNOMC        IN    
(  139) !INTF KRANGC          OUT 
(  140) !INTF LDVERR        IN    
