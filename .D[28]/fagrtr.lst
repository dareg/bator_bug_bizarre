


NVFORTRAN (Version     23.1)          02/24/2023  13:55:32      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:55:32      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: fagrtr.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAGRTR_MT64           &
(    4) &                     (FA, KREP, KUNIT)
(    5) USE FA_MOD, ONLY : FA_COM, FAGR1TAB
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) TYPE(FA_COM) :: FA
(   11) INTEGER (KIND=JPLIKB) KREP, KUNIT
(   12) !
(   13) INTEGER (KIND=JPLIKB) JJ
(   14) INTEGER (KIND=JPLIKB) IVERS
(   15) 
(   16) INTEGER :: IOST
(   17) 
(   18) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   19) 
(   20) IF (LHOOK) CALL DR_HOOK('FAGRTR_MT',0,ZHOOK_HANDLE)
(   21) 
(   22) KREP=0
(   23) 
(   24) IF (ASSOCIATED (FA%YGR1TAB)) THEN
(   25)   DEALLOCATE (FA%YGR1TAB)
(   26)   NULLIFY (FA%YGR1TAB)
(   27) ENDIF
(   28) 
(   29) IOST = 0
(   30) 






NVFORTRAN (Version     23.1)          02/24/2023  13:55:32      page 3

(   31) READ (KUNIT, '("VERSION = ",I10)', ERR=999, IOSTAT=IOST) IVERS
(   32) 
(   33) SELECT CASE (IVERS)
(   34)   CASE (1)
(   35)     CALL FAGRTR_MT64_V1
(   36)   CASE DEFAULT
(   37)     WRITE (FA%NULOUT, *) "UNKNOWN VERSION :", IVERS
(   38)     CALL SDL_SRLABORT
(   39) END SELECT
(   40) 
(   41) 999 CONTINUE
(   42) 
(   43) IF (IOST /= 0) THEN
(   44)   KREP = IOST
(   45) ENDIF
(   46) 
(   47) IF (LHOOK) CALL DR_HOOK('FAGRTR_MT',1,ZHOOK_HANDLE)
(   48) 
(   49) CONTAINS
(   50) 
(   51) SUBROUTINE FAGRTR_MT64_V1
(   52) 
(   53) READ (KUNIT, '(I10)', ERR=999, IOSTAT=IOST) FA%NBPARC
(   54) ALLOCATE (FA%YGR1TAB (FA%NBPARC))
(   55) 
(   56) DO JJ = 1, FA%NBPARC
(   57)   READ (KUNIT, '(" | ",A8," | ",A24," | ",7I10," | ",L1," | ",E23.16," | ",L1," | ")', &
(   58) &       ERR=999, IOSTAT=IOST)                                                          &
(   59) &       FA%YGR1TAB (JJ)%CIPREF, FA%YGR1TAB (JJ)%CISUFF, FA%YGR1TAB (JJ)%NCODPA(1:7),   &
(   60) &       FA%YGR1TAB (JJ)%LFNIVA, FA%YGR1TAB (JJ)%FMULTI, FA%YGR1TAB (JJ)%LMULTI
(   61) ENDDO
(   62) 
(   63) 999 CONTINUE
(   64) 
(   65) END SUBROUTINE FAGRTR_MT64_V1
(   66) 
(   67) END SUBROUTINE FAGRTR_MT64
(   68) 
(   69) ! Oct-2012 P. Marguinaud 64b LFI
(   70) SUBROUTINE FAGRTR64                    &
(   71) &           (KREP, KUNIT)
(   72) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   73) &                  FA_COM_DEFAULT_INIT,  &
(   74) &                  NEW_FA_DEFAULT
(   75) USE LFI_PRECISION
(   76) IMPLICIT NONE
(   77) ! Arguments
(   78) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   79) INTEGER (KIND=JPLIKB)  KUNIT                                  ! IN   
(   80) 
(   81) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   82) 
(   83) CALL FAGRTR_MT64                           &
(   84) &           (FA, KREP, KUNIT)
(   85) 
(   86) END SUBROUTINE FAGRTR64
(   87) 
(   88) SUBROUTINE FAGRTR                      &






NVFORTRAN (Version     23.1)          02/24/2023  13:55:32      page 4

(   89) &           (KREP, KUNIT)
(   90) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   91) &                  FA_COM_DEFAULT_INIT,  &
(   92) &                  NEW_FA_DEFAULT
(   93) USE LFI_PRECISION
(   94) IMPLICIT NONE
(   95) ! Arguments
(   96) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(   97) INTEGER (KIND=JPLIKM)  KUNIT                                  ! IN   
(   98) 
(   99) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  100) 
(  101) CALL FAGRTR_MT                             &
(  102) &           (FA, KREP, KUNIT)
(  103) 
(  104) END SUBROUTINE FAGRTR
(  105) 
(  106) SUBROUTINE FAGRTR_MT                       &
(  107) &           (FA, KREP, KUNIT)
(  108) USE FA_MOD, ONLY : FA_COM
(  109) USE LFI_PRECISION
(  110) IMPLICIT NONE
(  111) ! Arguments
(  112) TYPE (FA_COM)          FA                                     ! INOUT
(  113) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  114) INTEGER (KIND=JPLIKM)  KUNIT                                  !   OUT
(  115) ! Local integers
(  116) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  117) INTEGER (KIND=JPLIKB)  IUNIT                                  ! IN   
(  118) ! Convert arguments
(  119) 
(  120) IUNIT      = INT (     KUNIT, JPLIKB)
(  121) 
(  122) CALL FAGRTR_MT64                           &
(  123) &           (FA, IREP, IUNIT)
(  124) 
(  125) KREP       = INT (      IREP, JPLIKM)
(  126) 
(  127) END SUBROUTINE FAGRTR_MT
(  128) 
(  129) !INTF KREP            OUT
(  130) !INTF KUNIT         IN                                                                 
(  131) 





















NVFORTRAN (Version     23.1)          02/24/2023  13:55:32      page 5

(    1) # 1 "fagrtr.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAGRTR_MT64           &
(    4) &                     (FA, KREP, KUNIT)
(    5) USE FA_MOD, ONLY : FA_COM, FAGR1TAB
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) TYPE(FA_COM) :: FA
(   11) INTEGER (KIND=JPLIKB) KREP, KUNIT
(   12) !
(   13) INTEGER (KIND=JPLIKB) JJ
(   14) INTEGER (KIND=JPLIKB) IVERS
(   15) # 16 "fagrtr.F90"
(   16) INTEGER :: IOST
(   17) # 18 "fagrtr.F90"
(   18) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   19) # 20 "fagrtr.F90"
(   20) IF (LHOOK) CALL DR_HOOK('FAGRTR_MT',0,ZHOOK_HANDLE)
(   21) # 22 "fagrtr.F90"
(   22) KREP=0
(   23) # 24 "fagrtr.F90"
(   24) IF (ASSOCIATED (FA%YGR1TAB)) THEN
(   25)   DEALLOCATE (FA%YGR1TAB)
(   26)   NULLIFY (FA%YGR1TAB)
(   27) ENDIF
(   28) # 29 "fagrtr.F90"
(   29) IOST = 0
(   30) # 31 "fagrtr.F90"
(   31) READ (KUNIT, '("VERSION = ",I10)', ERR=999, IOSTAT=IOST) IVERS
(   32) # 33 "fagrtr.F90"
(   33) SELECT CASE (IVERS)
(   34)   CASE (1)
(   35)     CALL FAGRTR_MT64_V1
(   36)   CASE DEFAULT
(   37)     WRITE (FA%NULOUT, *) "UNKNOWN VERSION :", IVERS
(   38)     CALL SDL_SRLABORT
(   39) END SELECT
(   40) # 41 "fagrtr.F90"
(   41) 999 CONTINUE
(   42) # 43 "fagrtr.F90"
(   43) IF (IOST /= 0) THEN
(   44)   KREP = IOST
(   45) ENDIF
(   46) # 47 "fagrtr.F90"
(   47) IF (LHOOK) CALL DR_HOOK('FAGRTR_MT',1,ZHOOK_HANDLE)
(   48) # 49 "fagrtr.F90"
(   49) CONTAINS
(   50) # 51 "fagrtr.F90"
(   51) SUBROUTINE FAGRTR_MT64_V1
(   52) # 53 "fagrtr.F90"
(   53) READ (KUNIT, '(I10)', ERR=999, IOSTAT=IOST) FA%NBPARC
(   54) ALLOCATE (FA%YGR1TAB (FA%NBPARC))
(   55) # 56 "fagrtr.F90"
(   56) DO JJ = 1, FA%NBPARC
(   57)   READ (KUNIT, '(" | ",A8," | ",A24," | ",7I10," | ",L1," | ",E23.16," | ",L1," | ")', &






NVFORTRAN (Version     23.1)          02/24/2023  13:55:32      page 6

(   58) &       ERR=999, IOSTAT=IOST)                                                          &
(   59) &       FA%YGR1TAB (JJ)%CIPREF, FA%YGR1TAB (JJ)%CISUFF, FA%YGR1TAB (JJ)%NCODPA(1:7),   &
(   60) &       FA%YGR1TAB (JJ)%LFNIVA, FA%YGR1TAB (JJ)%FMULTI, FA%YGR1TAB (JJ)%LMULTI
(   61) ENDDO
(   62) # 63 "fagrtr.F90"
(   63) 999 CONTINUE
(   64) # 65 "fagrtr.F90"
(   65) END SUBROUTINE FAGRTR_MT64_V1
(   66) # 67 "fagrtr.F90"
(   67) END SUBROUTINE FAGRTR_MT64
(   68) # 69 "fagrtr.F90"
(   69) ! Oct-2012 P. Marguinaud 64b LFI
(   70) SUBROUTINE FAGRTR64                    &
(   71) &           (KREP, KUNIT)
(   72) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   73) &                  FA_COM_DEFAULT_INIT,  &
(   74) &                  NEW_FA_DEFAULT
(   75) USE LFI_PRECISION
(   76) IMPLICIT NONE
(   77) ! Arguments
(   78) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   79) INTEGER (KIND=JPLIKB)  KUNIT                                  ! IN   
(   80) # 81 "fagrtr.F90"
(   81) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   82) # 83 "fagrtr.F90"
(   83) CALL FAGRTR_MT64                           &
(   84) &           (FA, KREP, KUNIT)
(   85) # 86 "fagrtr.F90"
(   86) END SUBROUTINE FAGRTR64
(   87) # 88 "fagrtr.F90"
(   88) SUBROUTINE FAGRTR                      &
(   89) &           (KREP, KUNIT)
(   90) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   91) &                  FA_COM_DEFAULT_INIT,  &
(   92) &                  NEW_FA_DEFAULT
(   93) USE LFI_PRECISION
(   94) IMPLICIT NONE
(   95) ! Arguments
(   96) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(   97) INTEGER (KIND=JPLIKM)  KUNIT                                  ! IN   
(   98) # 99 "fagrtr.F90"
(   99) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  100) # 101 "fagrtr.F90"
(  101) CALL FAGRTR_MT                             &
(  102) &           (FA, KREP, KUNIT)
(  103) # 104 "fagrtr.F90"
(  104) END SUBROUTINE FAGRTR
(  105) # 106 "fagrtr.F90"
(  106) SUBROUTINE FAGRTR_MT                       &
(  107) &           (FA, KREP, KUNIT)
(  108) USE FA_MOD, ONLY : FA_COM
(  109) USE LFI_PRECISION
(  110) IMPLICIT NONE
(  111) ! Arguments
(  112) TYPE (FA_COM)          FA                                     ! INOUT
(  113) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  114) INTEGER (KIND=JPLIKM)  KUNIT                                  !   OUT
(  115) ! Local integers






NVFORTRAN (Version     23.1)          02/24/2023  13:55:32      page 7

(  116) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  117) INTEGER (KIND=JPLIKB)  IUNIT                                  ! IN   
(  118) ! Convert arguments
(  119) # 120 "fagrtr.F90"
(  120) IUNIT      = INT (     KUNIT, JPLIKB)
(  121) # 122 "fagrtr.F90"
(  122) CALL FAGRTR_MT64                           &
(  123) &           (FA, IREP, IUNIT)
(  124) # 125 "fagrtr.F90"
(  125) KREP       = INT (      IREP, JPLIKM)
(  126) # 127 "fagrtr.F90"
(  127) END SUBROUTINE FAGRTR_MT
(  128) # 129 "fagrtr.F90"
(  129) !INTF KREP            OUT
(  130) !INTF KUNIT         IN                                                                 
