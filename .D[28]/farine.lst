


NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: farine.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FARINE_MT64             &
(    4) &                     (FA,  KOPTIO )
(    5) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme est charge des INITIALISATIONS du logiciel
(   12) !     de Fichiers ARPEGE FA ( Routine d'INitialisation )
(   13) !**
(   14) !        Argument : KOPTIO  ==> OPTION concernant le mode d'utilisation.
(   15) !                  (Entree)     (MULTI-TACHE ou NON)
(   16) !     VALEURS POSSIBLES : 0 ==> Mode MONO-Tache prescrit;
(   17) !                         1 ==> Mode MULTI-Taches prescrit;
(   18) !                         2 ==> Utilisation du mode par defaut si c'est
(   19) !                               le premier appel; sinon on garde le mode
(   20) !                               prescrit anterieurement .
(   21) !
(   22) !
(   23) !
(   24) TYPE(FA_COM) :: FA
(   25) INTEGER (KIND=JPLIKB) KOPTIO
(   26) !
(   27) INTEGER (KIND=JPLIKB) IREP, J
(   28) INTEGER (KIND=JPLIKB) INIMES, INUMER
(   29) !
(   30) LOGICAL LLNMUL, LLASGN, LLREL






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 3

(   31) !
(   32) !
(   33) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   34) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   35) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   36) LOGICAL                  LLFATA
(   37) 
(   38) !
(   39) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   40) IF (LHOOK) CALL DR_HOOK('FARINE_MT',0,ZHOOK_HANDLE)
(   41) CLACTI=''
(   42) IF (KOPTIO.LT.0.OR.KOPTIO.GT.2) THEN
(   43)   IREP=-52
(   44)   GOTO 1001
(   45) ENDIF
(   46) !
(   47) IF (FA%FARINE_LLPREA) THEN
(   48) !
(   49) !         C'EST LE PREMIER APPEL AU sous-programme - INITIALISATIONS .
(   50) !
(   51)   FA%NFIOUV=0
(   52)   FA%NCADEF=0
(   53)   FA%NRFAGA=1
(   54)   FA%NIMSGA=1
(   55)   FA%NBIPDG=24
(   56)   FA%NBICSP=24
(   57)   FA%NPUILA=1
(   58)   FA%NSTROI=10
(   59)   FA%NMIDPL=5
(   60)   FA%NIGRIB=2
(   61)   FA%LFAMOP=.FALSE.
(   62)   FA%FICHIER(0)%LERRFA=.TRUE.
(   63)   FA%FICHIER(0)%NIVOMS=0
(   64)   FA%NCPCAD=LEN (FA%CADRE(1)%CNOMCA)
(   65)   FA%SPSMIN=60000._JPDBLR
(   66)   FA%SPSMAX=110000._JPDBLR
(   67)   FA%MPRESX=100000
(   68)   FA%NBIMAC=64
(   69)   FA%NBIMAX=31
(   70)   FA%LIGARD=.FALSE.
(   71)   FA%NTYPTX=2
(   72)   FA%NXNIVV=FA%JPXNIV
(   73)   FA%NXTRON=FA%JPXTRO
(   74)   FA%NXLATI=FA%JPXLAT
(   75)   FA%NXLONG=FA%JPXLON
(   76) !
(   77)   DO J=1,FA%JPNXFA
(   78)     FA%FICHIER(J)%NULOGI=JPNIIL
(   79)     FA%FICHIER(J)%NRASHO=0
(   80)     FA%FICHIER(J)%NRASVE=0
(   81)   ENDDO
(   82) !
(   83)   DO J=1,FA%JPNXCA
(   84)     FA%CADRE(J)%CNOMCA=' '
(   85)   ENDDO
(   86) !
(   87)   DO J=1,FA%JPXNOM
(   88)     FA%CHAINC(J:J)='?'






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 4

(   89)   ENDDO
(   90) !
(   91) !        Descripteurs lies aux types de niveaux verticaux:
(   92) !        prefixes reconnus, extrema possibles du niveau dans le cas
(   93) !        d'une coordonnee verticale, premiers elements de xB1PAR.
(   94) !
(   95)   DO J=0,FA%JPTNIV
(   96) !
(   97) !       Initialisation par defaut pour la serie d'affectations qui suit.
(   98) !
(   99)     FA%NIVDSC(0,J)=0
(  100)     FA%NIVDSC(1,J)=0
(  101)     FA%NIVDSC(2,J)=0
(  102) !
(  103) !        Tous les cas sont reputes "niveau vrai" (pas des couches).
(  104) !
(  105)     FA%NIVDSC(4,J)=0
(  106)   ENDDO
(  107) !
(  108) !           Cas du type non reconnu.
(  109) !
(  110)   FA%NIVDSC(0,0)=0
(  111)   FA%NIVDSC(3,0)=200
(  112) !
(  113) !           Niveau hybride.
(  114) !
(  115)   FA%CTNPRF(1)='S'
(  116)   FA%NIVDSC(0,1)=3
(  117)   FA%NIVDSC(2,1)=FA%JPXNIV
(  118)   FA%NIVDSC(3,1)=109
(  119) !
(  120) !           Niveau isobare.
(  121) !
(  122)   FA%CTNPRF(2)='P'
(  123)   FA%NIVDSC(0,2)=5
(  124)   FA%NIVDSC(1,2)=1
(  125)   FA%NIVDSC(2,2)=10**5
(  126)   FA%NIVDSC(3,2)=100
(  127) !
(  128) !           Niveau iso-hauteur (au-dessus d'un relief de reference).
(  129) !
(  130)   FA%CTNPRF(3)='H'
(  131)   FA%NIVDSC(0,3)=5
(  132)   FA%NIVDSC(2,3)=10**5-1
(  133)   FA%NIVDSC(3,3)=105
(  134) !
(  135) !           Niveau iso-tourbillon_potentiel.
(  136) !
(  137)   FA%CTNPRF(4)='V'
(  138)   FA%NIVDSC(0,4)=3
(  139)   FA%NIVDSC(2,4)=10**3-1
(  140)   FA%NIVDSC(3,4)=117
(  141) !
(  142) !           Niveau iso-temperature_potentielle.
(  143) !
(  144)   FA%CTNPRF(5)='T'
(  145)   FA%NIVDSC(0,5)=3
(  146)   FA%NIVDSC(2,5)=10**3-1






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 5

(  147)   FA%NIVDSC(3,5)=113
(  148) !
(  149) !           Niveau surface.
(  150) !
(  151)   FA%CTNPRF(6)='SURF'
(  152)   FA%NIVDSC(3,6)=1
(  153) !
(  154) !           Niveau de vent max (jet).
(  155) !
(  156)   FA%CTNPRF(7)='JET'
(  157)   FA%NIVDSC(3,7)=6
(  158) !
(  159) !           Niveau surface.
(  160) !
(  161)   FA%CTNPRF(8)='TROPO'
(  162)   FA%NIVDSC(3,8)=7
(  163) !
(  164) !           Niveau moyen de la mer.
(  165) !
(  166)   FA%CTNPRF(9)='MER'
(  167)   FA%NIVDSC(3,9)=102
(  168) !
(  169) !           Niveau hybride bis pour MOCAGE
(  170) !
(  171)   FA%CTNPRF(10)='L'
(  172)   FA%NIVDSC(0,10)=3
(  173)   FA%NIVDSC(2,10)=FA%JPXNIV
(  174) !  
(  175) !           Niveau iso-temperature.
(  176) !
(  177)   FA%CTNPRF(11)='KB'
(  178)   FA%NIVDSC(0,11)=3
(  179)   FA%NIVDSC(2,11)=10**3-1
(  180)   FA%NIVDSC(3,11)=113
(  181) !
(  182)   FA%CTNPRF(12)='KT'
(  183)   FA%NIVDSC(0,12)=3
(  184)   FA%NIVDSC(2,12)=10**3-1
(  185)   FA%NIVDSC(3,12)=113
(  186) !
(  187) !           Niveau iso-hauteur (au-dessus du niveau moyen de la mer).
(  188) !
(  189)   FA%CTNPRF(13)='F'
(  190)   FA%NIVDSC(0,13)=4
(  191)   FA%NIVDSC(2,13)=10**4-1
(  192)   FA%NIVDSC(3,13)=103
(  193) !
(  194) !           Niveau SURFEX
(  195) !
(  196)   FA%CTNPRF(14)='X'
(  197)   FA%NIVDSC(0,14)=3
(  198)   FA%NIVDSC(2,14)=10**3-1
(  199)   FA%NIVDSC(3,14)=113
(  200) 
(  201) !
(  202) !  Initialisations pour la mise en oeuvre de GRIBEX
(  203) !
(  204) !  1/ On force GRIBEX a calculer la puissance de laplacien






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 6

(  205)   CALL GRSMKP(1)
(  206) !  2/ On retire l'arrondi du message GRIB a un multiple de 120 octets
(  207)   CALL GRSRND(0)
(  208) !
(  209) !  3/ Creation de la correspondance "nom article FA" et
(  210) !                                   "descripteurs GRIBEX"
(  211)   IF (.NOT. ASSOCIATED (FA%YGR1TAB)) THEN
(  212)     CALL FAICOR_MT64 (FA)
(  213)   ENDIF
(  214) !
(  215) !
(  216) !  4/ Definition du codage GRIBEX par defaut:
(  217) !
(  218) !  Il s'agit d'une compression "APAC1" (meilleure solution entre
(  219) !  l'absence de compression et la compression ligne a ligne)
(  220) !  associee a la compression "general extended", a la differentiation
(  221) !  spatiale (-1: calcul dynamique de l'ordre) et au rearrangement
(  222) !  boustrophedonique.
(  223) !
(  224) !  "APAC1"
(  225)   FA%NCODGRI(1) = 1
(  226)   FA%NCODGRI(2) = 16
(  227)   FA%NCODGRI(3) = 0
(  228)   FA%NCODGRI(4) = 0
(  229)   FA%NCODGRI(5) = 16
(  230)   FA%NCODGRI(6) = 0
(  231) !  compression "general extended"
(  232)   FA%NCODGRI(7) = 8
(  233) !  arrangement boustrophedonique
(  234)   FA%NCODGRI(8) = 4
(  235) !  differentiation spatiale
(  236)   FA%NCODGRI( 9)= 0
(  237)   FA%NCODGRI(10)= -1
(  238) ! Calcul automatique du facteur d'echelle decimal (KSEC1 (23))
(  239)   FA%NCODGRI(11)= 1
(  240) ! Ecriture des champs GRIB1 dans un fichier externe
(  241)   FA%NCODGRI(12)= 0
(  242) ! Fichiers de surface uniquement : les niveaux verticaux ne sont ni ecrits ni
(  243) ! compares dans FACADI
(  244)   FA%NCODGRI(13)= 0
(  245) !
(  246) !  5/ Initialisation de logiques pilotant des initialisations ulterieures
(  247) !
(  248) !  Il faudra initialiser XLAPxDx
(  249)   FA%LIXLAP=.TRUE.
(  250) !  Il ne faut pas initialiser FLAP1Dx(): on attend l'ouverture du fichier
(  251)   FA%FICHIER(:)%LIFLAP=.FALSE.
(  252) !  Il faudra initialiser le tableau FA%NSEC1 (section 1 GRIBEX) via FAISC1
(  253)   FA%FICHIER(:)%LISEC1=.TRUE.
(  254) !  Il faudra initialiser les tableaux NSEC2xxx et FA%XSEC2
(  255) !  (section 2 GRIBEX) via FAISC2
(  256)   FA%CADRE(:)%LISEC2=.TRUE.
(  257) !  Il faudra initialiser le tableau FA%NSC2ALF
(  258) !  (section 2 GRIBEX) via FAIS2F
(  259)   FA%FICHIER(:)%LISC2F=.TRUE.
(  260) !
(  261)   FA%FARINE_LLPREA=.FALSE.
(  262)   LLNMUL=(KOPTIO.EQ.1).OR.(KOPTIO.EQ.2.AND.FA%FARINE_LLDEFM)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 7

(  263)   LLASGN=LLNMUL
(  264)   LLREL=.FALSE.
(  265)   CALL LFIINI_MT64               &
(  266) &                (FA%LFI, KOPTIO)
(  267) !
(  268) ELSEIF (KOPTIO.EQ.2) THEN
(  269) !
(  270) !         CE N'EST PAS LE PREMIER APPEL, MAIS COMME L'ARGUMENT VAUT 2,
(  271) !         ON LAISSE LES CHOSES EN PLACE .
(  272) !
(  273)   LLNMUL=FA%LFAMUL
(  274)   LLASGN=.FALSE.
(  275)   LLREL =.FALSE.
(  276) !
(  277) ELSE
(  278)   LLNMUL=KOPTIO.EQ.1
(  279)   LLASGN=LLNMUL.AND.(.NOT.FA%LFAMUL)
(  280)   LLREL =(.NOT.LLNMUL).AND.FA%LFAMUL
(  281) !
(  282) !     CE N'EST PAS LE PREMIER APPEL ET LE MODE EST PASSE 'EXPLICITEMENT'
(  283) !
(  284)   IF ((LLASGN.OR.LLREL).AND.FA%NFIOUV.NE.0) THEN
(  285)     IREP=-54
(  286)     GOTO 1001
(  287)   ENDIF
(  288) !
(  289)   CALL LFIINI_MT64               &
(  290) &                (FA%LFI, KOPTIO)
(  291) !
(  292) ENDIF
(  293) !
(  294) FA%LFAMUL=LLNMUL
(  295) IREP=0
(  296) !
(  297) IF (LLASGN) THEN
(  298)   CALL LFIVER_MT64                          &
(  299) &                 (FA%LFI, FA%VRGLAS,'ASGN')
(  300) ELSEIF (LLREL) THEN
(  301)   CALL LFIVER_MT64                         &
(  302) &                 (FA%LFI, FA%VRGLAS,'REL')
(  303) ENDIF
(  304) !
(  305) 1001 CONTINUE
(  306) !
(  307) !        MESSAGERIE EVENTUELLE, AVEC ABORT SI NECESSAIRE .
(  308) !
(  309) LLFATA=IREP.NE.0.AND.FA%NRFAGA.NE.2
(  310) !
(  311) IF (LLFATA.OR.FA%LFAMOP) THEN
(  312)   INIMES=2
(  313) ELSEIF (IREP.NE.0) THEN
(  314)   INIMES=0
(  315) ELSEIF (FA%NIMSGA.EQ.2) THEN
(  316)   INIMES=2
(  317) ELSE
(  318)   IF (LHOOK) CALL DR_HOOK('FARINE_MT',1,ZHOOK_HANDLE)
(  319)   RETURN
(  320) ENDIF






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 8

(  321) !
(  322) CLNSPR='FARINE'
(  323) INUMER=JPNIIL
(  324) !
(  325) IF (MAX (INIMES,FA%NIMSGA).EQ.2) THEN
(  326)   WRITE (UNIT=CLMESS,                                  &
(  327) &         FMT='(''KOPTIO='',I5,'', CODE INTERNE='',I4)' &
(  328) &         ) KOPTIO,IREP
(  329)   IF (INIMES.NE.2) CALL FAIPAR_MT64                          &
(  330) &                                  (FA, INUMER,FA%NIMSGA,IREP, &
(  331) &                                .FALSE.,CLMESS,               &
(  332) &                                CLNSPR,CLACTI,.FALSE.)
(  333) ENDIF
(  334) !
(  335) CALL FAIPAR_MT64                                     &
(  336) &               (FA, INUMER,INIMES,IREP,LLFATA,CLMESS, &
(  337) &             CLNSPR,CLACTI,.FALSE.)
(  338) !
(  339) IF (LHOOK) CALL DR_HOOK('FARINE_MT',1,ZHOOK_HANDLE)
(  340) END SUBROUTINE FARINE_MT64
(  341) 
(  342) 
(  343) 
(  344) ! Oct-2012 P. Marguinaud 64b LFI
(  345) SUBROUTINE FARINE64           &
(  346) &           (KOPTIO)
(  347) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  348) &                   FA_COM_DEFAULT_INIT,  &
(  349) &                   NEW_FA_DEFAULT
(  350) USE LFI_PRECISION
(  351) IMPLICIT NONE
(  352) ! Arguments
(  353) INTEGER (KIND=JPLIKB)  KOPTIO                                 ! IN   
(  354) 
(  355) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  356) 
(  357) CALL FARINE_MT64           &
(  358) &           (FA, KOPTIO)
(  359) 
(  360) END SUBROUTINE FARINE64
(  361) 
(  362) SUBROUTINE FARINE             &
(  363) &           (KOPTIO)
(  364) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  365) &                   FA_COM_DEFAULT_INIT,  &
(  366) &                   NEW_FA_DEFAULT
(  367) USE LFI_PRECISION
(  368) IMPLICIT NONE
(  369) ! Arguments
(  370) INTEGER (KIND=JPLIKM)  KOPTIO                                 ! IN   
(  371) 
(  372) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  373) 
(  374) CALL FARINE_MT             &
(  375) &           (FA, KOPTIO)
(  376) 
(  377) END SUBROUTINE FARINE
(  378) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 9

(  379) SUBROUTINE FARINE_MT             &
(  380) &           (FA, KOPTIO)
(  381) USE FA_MOD, ONLY : FA_COM
(  382) USE LFI_PRECISION
(  383) IMPLICIT NONE
(  384) ! Arguments
(  385) TYPE (FA_COM)          FA                                     ! INOUT
(  386) INTEGER (KIND=JPLIKM)  KOPTIO                                 ! IN   
(  387) ! Local integers
(  388) INTEGER (KIND=JPLIKB)  IOPTIO                                 ! IN   
(  389) ! Convert arguments
(  390) 
(  391) IOPTIO     = INT (    KOPTIO, JPLIKB)
(  392) 
(  393) CALL FARINE_MT64           &
(  394) &           (FA, IOPTIO)
(  395) 
(  396) 
(  397) END SUBROUTINE FARINE_MT
(  398) 
(  399) !INTF KOPTIO        IN    











































NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 10

(    1) # 1 "farine.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FARINE_MT64             &
(    4) &                     (FA,  KOPTIO )
(    5) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme est charge des INITIALISATIONS du logiciel
(   12) !     de Fichiers ARPEGE FA ( Routine d'INitialisation )
(   13) !**
(   14) !        Argument : KOPTIO  ==> OPTION concernant le mode d'utilisation.
(   15) !                  (Entree)     (MULTI-TACHE ou NON)
(   16) !     VALEURS POSSIBLES : 0 ==> Mode MONO-Tache prescrit;
(   17) !                         1 ==> Mode MULTI-Taches prescrit;
(   18) !                         2 ==> Utilisation du mode par defaut si c'est
(   19) !                               le premier appel; sinon on garde le mode
(   20) !                               prescrit anterieurement .
(   21) !
(   22) !
(   23) !
(   24) TYPE(FA_COM) :: FA
(   25) INTEGER (KIND=JPLIKB) KOPTIO
(   26) !
(   27) INTEGER (KIND=JPLIKB) IREP, J
(   28) INTEGER (KIND=JPLIKB) INIMES, INUMER
(   29) !
(   30) LOGICAL LLNMUL, LLASGN, LLREL
(   31) !
(   32) !
(   33) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   34) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   35) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   36) LOGICAL                  LLFATA
(   37) # 38 "farine.F90"
(   38) !
(   39) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   40) IF (LHOOK) CALL DR_HOOK('FARINE_MT',0,ZHOOK_HANDLE)
(   41) CLACTI=''
(   42) IF (KOPTIO.LT.0.OR.KOPTIO.GT.2) THEN
(   43)   IREP=-52
(   44)   GOTO 1001
(   45) ENDIF
(   46) !
(   47) IF (FA%FARINE_LLPREA) THEN
(   48) !
(   49) !         C'EST LE PREMIER APPEL AU sous-programme - INITIALISATIONS .
(   50) !
(   51)   FA%NFIOUV=0
(   52)   FA%NCADEF=0
(   53)   FA%NRFAGA=1
(   54)   FA%NIMSGA=1
(   55)   FA%NBIPDG=24
(   56)   FA%NBICSP=24
(   57)   FA%NPUILA=1






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 11

(   58)   FA%NSTROI=10
(   59)   FA%NMIDPL=5
(   60)   FA%NIGRIB=2
(   61)   FA%LFAMOP=.FALSE.
(   62)   FA%FICHIER(0)%LERRFA=.TRUE.
(   63)   FA%FICHIER(0)%NIVOMS=0
(   64)   FA%NCPCAD=LEN (FA%CADRE(1)%CNOMCA)
(   65)   FA%SPSMIN=60000._JPDBLR
(   66)   FA%SPSMAX=110000._JPDBLR
(   67)   FA%MPRESX=100000
(   68)   FA%NBIMAC=64
(   69)   FA%NBIMAX=31
(   70)   FA%LIGARD=.FALSE.
(   71)   FA%NTYPTX=2
(   72)   FA%NXNIVV=FA%JPXNIV
(   73)   FA%NXTRON=FA%JPXTRO
(   74)   FA%NXLATI=FA%JPXLAT
(   75)   FA%NXLONG=FA%JPXLON
(   76) !
(   77)   DO J=1,FA%JPNXFA
(   78)     FA%FICHIER(J)%NULOGI=JPNIIL
(   79)     FA%FICHIER(J)%NRASHO=0
(   80)     FA%FICHIER(J)%NRASVE=0
(   81)   ENDDO
(   82) !
(   83)   DO J=1,FA%JPNXCA
(   84)     FA%CADRE(J)%CNOMCA=' '
(   85)   ENDDO
(   86) !
(   87)   DO J=1,FA%JPXNOM
(   88)     FA%CHAINC(J:J)='?'
(   89)   ENDDO
(   90) !
(   91) !        Descripteurs lies aux types de niveaux verticaux:
(   92) !        prefixes reconnus, extrema possibles du niveau dans le cas
(   93) !        d'une coordonnee verticale, premiers elements de xB1PAR.
(   94) !
(   95)   DO J=0,FA%JPTNIV
(   96) !
(   97) !       Initialisation par defaut pour la serie d'affectations qui suit.
(   98) !
(   99)     FA%NIVDSC(0,J)=0
(  100)     FA%NIVDSC(1,J)=0
(  101)     FA%NIVDSC(2,J)=0
(  102) !
(  103) !        Tous les cas sont reputes "niveau vrai" (pas des couches).
(  104) !
(  105)     FA%NIVDSC(4,J)=0
(  106)   ENDDO
(  107) !
(  108) !           Cas du type non reconnu.
(  109) !
(  110)   FA%NIVDSC(0,0)=0
(  111)   FA%NIVDSC(3,0)=200
(  112) !
(  113) !           Niveau hybride.
(  114) !
(  115)   FA%CTNPRF(1)='S'






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 12

(  116)   FA%NIVDSC(0,1)=3
(  117)   FA%NIVDSC(2,1)=FA%JPXNIV
(  118)   FA%NIVDSC(3,1)=109
(  119) !
(  120) !           Niveau isobare.
(  121) !
(  122)   FA%CTNPRF(2)='P'
(  123)   FA%NIVDSC(0,2)=5
(  124)   FA%NIVDSC(1,2)=1
(  125)   FA%NIVDSC(2,2)=10**5
(  126)   FA%NIVDSC(3,2)=100
(  127) !
(  128) !           Niveau iso-hauteur (au-dessus d'un relief de reference).
(  129) !
(  130)   FA%CTNPRF(3)='H'
(  131)   FA%NIVDSC(0,3)=5
(  132)   FA%NIVDSC(2,3)=10**5-1
(  133)   FA%NIVDSC(3,3)=105
(  134) !
(  135) !           Niveau iso-tourbillon_potentiel.
(  136) !
(  137)   FA%CTNPRF(4)='V'
(  138)   FA%NIVDSC(0,4)=3
(  139)   FA%NIVDSC(2,4)=10**3-1
(  140)   FA%NIVDSC(3,4)=117
(  141) !
(  142) !           Niveau iso-temperature_potentielle.
(  143) !
(  144)   FA%CTNPRF(5)='T'
(  145)   FA%NIVDSC(0,5)=3
(  146)   FA%NIVDSC(2,5)=10**3-1
(  147)   FA%NIVDSC(3,5)=113
(  148) !
(  149) !           Niveau surface.
(  150) !
(  151)   FA%CTNPRF(6)='SURF'
(  152)   FA%NIVDSC(3,6)=1
(  153) !
(  154) !           Niveau de vent max (jet).
(  155) !
(  156)   FA%CTNPRF(7)='JET'
(  157)   FA%NIVDSC(3,7)=6
(  158) !
(  159) !           Niveau surface.
(  160) !
(  161)   FA%CTNPRF(8)='TROPO'
(  162)   FA%NIVDSC(3,8)=7
(  163) !
(  164) !           Niveau moyen de la mer.
(  165) !
(  166)   FA%CTNPRF(9)='MER'
(  167)   FA%NIVDSC(3,9)=102
(  168) !
(  169) !           Niveau hybride bis pour MOCAGE
(  170) !
(  171)   FA%CTNPRF(10)='L'
(  172)   FA%NIVDSC(0,10)=3
(  173)   FA%NIVDSC(2,10)=FA%JPXNIV






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 13

(  174) !  
(  175) !           Niveau iso-temperature.
(  176) !
(  177)   FA%CTNPRF(11)='KB'
(  178)   FA%NIVDSC(0,11)=3
(  179)   FA%NIVDSC(2,11)=10**3-1
(  180)   FA%NIVDSC(3,11)=113
(  181) !
(  182)   FA%CTNPRF(12)='KT'
(  183)   FA%NIVDSC(0,12)=3
(  184)   FA%NIVDSC(2,12)=10**3-1
(  185)   FA%NIVDSC(3,12)=113
(  186) !
(  187) !           Niveau iso-hauteur (au-dessus du niveau moyen de la mer).
(  188) !
(  189)   FA%CTNPRF(13)='F'
(  190)   FA%NIVDSC(0,13)=4
(  191)   FA%NIVDSC(2,13)=10**4-1
(  192)   FA%NIVDSC(3,13)=103
(  193) !
(  194) !           Niveau SURFEX
(  195) !
(  196)   FA%CTNPRF(14)='X'
(  197)   FA%NIVDSC(0,14)=3
(  198)   FA%NIVDSC(2,14)=10**3-1
(  199)   FA%NIVDSC(3,14)=113
(  200) # 201 "farine.F90"
(  201) !
(  202) !  Initialisations pour la mise en oeuvre de GRIBEX
(  203) !
(  204) !  1/ On force GRIBEX a calculer la puissance de laplacien
(  205)   CALL GRSMKP(1)
(  206) !  2/ On retire l'arrondi du message GRIB a un multiple de 120 octets
(  207)   CALL GRSRND(0)
(  208) !
(  209) !  3/ Creation de la correspondance "nom article FA" et
(  210) !                                   "descripteurs GRIBEX"
(  211)   IF (.NOT. ASSOCIATED (FA%YGR1TAB)) THEN
(  212)     CALL FAICOR_MT64 (FA)
(  213)   ENDIF
(  214) !
(  215) !
(  216) !  4/ Definition du codage GRIBEX par defaut:
(  217) !
(  218) !  Il s'agit d'une compression "APAC1" (meilleure solution entre
(  219) !  l'absence de compression et la compression ligne a ligne)
(  220) !  associee a la compression "general extended", a la differentiation
(  221) !  spatiale (-1: calcul dynamique de l'ordre) et au rearrangement
(  222) !  boustrophedonique.
(  223) !
(  224) !  "APAC1"
(  225)   FA%NCODGRI(1) = 1
(  226)   FA%NCODGRI(2) = 16
(  227)   FA%NCODGRI(3) = 0
(  228)   FA%NCODGRI(4) = 0
(  229)   FA%NCODGRI(5) = 16
(  230)   FA%NCODGRI(6) = 0
(  231) !  compression "general extended"






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 14

(  232)   FA%NCODGRI(7) = 8
(  233) !  arrangement boustrophedonique
(  234)   FA%NCODGRI(8) = 4
(  235) !  differentiation spatiale
(  236)   FA%NCODGRI( 9)= 0
(  237)   FA%NCODGRI(10)= -1
(  238) ! Calcul automatique du facteur d'echelle decimal (KSEC1 (23))
(  239)   FA%NCODGRI(11)= 1
(  240) ! Ecriture des champs GRIB1 dans un fichier externe
(  241)   FA%NCODGRI(12)= 0
(  242) ! Fichiers de surface uniquement : les niveaux verticaux ne sont ni ecrits ni
(  243) ! compares dans FACADI
(  244)   FA%NCODGRI(13)= 0
(  245) !
(  246) !  5/ Initialisation de logiques pilotant des initialisations ulterieures
(  247) !
(  248) !  Il faudra initialiser XLAPxDx
(  249)   FA%LIXLAP=.TRUE.
(  250) !  Il ne faut pas initialiser FLAP1Dx(): on attend l'ouverture du fichier
(  251)   FA%FICHIER(:)%LIFLAP=.FALSE.
(  252) !  Il faudra initialiser le tableau FA%NSEC1 (section 1 GRIBEX) via FAISC1
(  253)   FA%FICHIER(:)%LISEC1=.TRUE.
(  254) !  Il faudra initialiser les tableaux NSEC2xxx et FA%XSEC2
(  255) !  (section 2 GRIBEX) via FAISC2
(  256)   FA%CADRE(:)%LISEC2=.TRUE.
(  257) !  Il faudra initialiser le tableau FA%NSC2ALF
(  258) !  (section 2 GRIBEX) via FAIS2F
(  259)   FA%FICHIER(:)%LISC2F=.TRUE.
(  260) !
(  261)   FA%FARINE_LLPREA=.FALSE.
(  262)   LLNMUL=(KOPTIO.EQ.1).OR.(KOPTIO.EQ.2.AND.FA%FARINE_LLDEFM)
(  263)   LLASGN=LLNMUL
(  264)   LLREL=.FALSE.
(  265)   CALL LFIINI_MT64               &
(  266) &                (FA%LFI, KOPTIO)
(  267) !
(  268) ELSEIF (KOPTIO.EQ.2) THEN
(  269) !
(  270) !         CE N'EST PAS LE PREMIER APPEL, MAIS COMME L'ARGUMENT VAUT 2,
(  271) !         ON LAISSE LES CHOSES EN PLACE .
(  272) !
(  273)   LLNMUL=FA%LFAMUL
(  274)   LLASGN=.FALSE.
(  275)   LLREL =.FALSE.
(  276) !
(  277) ELSE
(  278)   LLNMUL=KOPTIO.EQ.1
(  279)   LLASGN=LLNMUL.AND.(.NOT.FA%LFAMUL)
(  280)   LLREL =(.NOT.LLNMUL).AND.FA%LFAMUL
(  281) !
(  282) !     CE N'EST PAS LE PREMIER APPEL ET LE MODE EST PASSE 'EXPLICITEMENT'
(  283) !
(  284)   IF ((LLASGN.OR.LLREL).AND.FA%NFIOUV.NE.0) THEN
(  285)     IREP=-54
(  286)     GOTO 1001
(  287)   ENDIF
(  288) !
(  289)   CALL LFIINI_MT64               &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 15

(  290) &                (FA%LFI, KOPTIO)
(  291) !
(  292) ENDIF
(  293) !
(  294) FA%LFAMUL=LLNMUL
(  295) IREP=0
(  296) !
(  297) IF (LLASGN) THEN
(  298)   CALL LFIVER_MT64                          &
(  299) &                 (FA%LFI, FA%VRGLAS,'ASGN')
(  300) ELSEIF (LLREL) THEN
(  301)   CALL LFIVER_MT64                         &
(  302) &                 (FA%LFI, FA%VRGLAS,'REL')
(  303) ENDIF
(  304) !
(  305) 1001 CONTINUE
(  306) !
(  307) !        MESSAGERIE EVENTUELLE, AVEC ABORT SI NECESSAIRE .
(  308) !
(  309) LLFATA=IREP.NE.0.AND.FA%NRFAGA.NE.2
(  310) !
(  311) IF (LLFATA.OR.FA%LFAMOP) THEN
(  312)   INIMES=2
(  313) ELSEIF (IREP.NE.0) THEN
(  314)   INIMES=0
(  315) ELSEIF (FA%NIMSGA.EQ.2) THEN
(  316)   INIMES=2
(  317) ELSE
(  318)   IF (LHOOK) CALL DR_HOOK('FARINE_MT',1,ZHOOK_HANDLE)
(  319)   RETURN
(  320) ENDIF
(  321) !
(  322) CLNSPR='FARINE'
(  323) INUMER=JPNIIL
(  324) !
(  325) IF (MAX (INIMES,FA%NIMSGA).EQ.2) THEN
(  326)   WRITE (UNIT=CLMESS,                                  &
(  327) &         FMT='(''KOPTIO='',I5,'', CODE INTERNE='',I4)' &
(  328) &         ) KOPTIO,IREP
(  329)   IF (INIMES.NE.2) CALL FAIPAR_MT64                          &
(  330) &                                  (FA, INUMER,FA%NIMSGA,IREP, &
(  331) &                                .FALSE.,CLMESS,               &
(  332) &                                CLNSPR,CLACTI,.FALSE.)
(  333) ENDIF
(  334) !
(  335) CALL FAIPAR_MT64                                     &
(  336) &               (FA, INUMER,INIMES,IREP,LLFATA,CLMESS, &
(  337) &             CLNSPR,CLACTI,.FALSE.)
(  338) !
(  339) IF (LHOOK) CALL DR_HOOK('FARINE_MT',1,ZHOOK_HANDLE)
(  340) END SUBROUTINE FARINE_MT64
(  341) # 344 "farine.F90"
(  344) ! Oct-2012 P. Marguinaud 64b LFI
(  345) SUBROUTINE FARINE64           &
(  346) &           (KOPTIO)
(  347) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  348) &                   FA_COM_DEFAULT_INIT,  &
(  349) &                   NEW_FA_DEFAULT






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 16

(  350) USE LFI_PRECISION
(  351) IMPLICIT NONE
(  352) ! Arguments
(  353) INTEGER (KIND=JPLIKB)  KOPTIO                                 ! IN   
(  354) # 355 "farine.F90"
(  355) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  356) # 357 "farine.F90"
(  357) CALL FARINE_MT64           &
(  358) &           (FA, KOPTIO)
(  359) # 360 "farine.F90"
(  360) END SUBROUTINE FARINE64
(  361) # 362 "farine.F90"
(  362) SUBROUTINE FARINE             &
(  363) &           (KOPTIO)
(  364) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  365) &                   FA_COM_DEFAULT_INIT,  &
(  366) &                   NEW_FA_DEFAULT
(  367) USE LFI_PRECISION
(  368) IMPLICIT NONE
(  369) ! Arguments
(  370) INTEGER (KIND=JPLIKM)  KOPTIO                                 ! IN   
(  371) # 372 "farine.F90"
(  372) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  373) # 374 "farine.F90"
(  374) CALL FARINE_MT             &
(  375) &           (FA, KOPTIO)
(  376) # 377 "farine.F90"
(  377) END SUBROUTINE FARINE
(  378) # 379 "farine.F90"
(  379) SUBROUTINE FARINE_MT             &
(  380) &           (FA, KOPTIO)
(  381) USE FA_MOD, ONLY : FA_COM
(  382) USE LFI_PRECISION
(  383) IMPLICIT NONE
(  384) ! Arguments
(  385) TYPE (FA_COM)          FA                                     ! INOUT
(  386) INTEGER (KIND=JPLIKM)  KOPTIO                                 ! IN   
(  387) ! Local integers
(  388) INTEGER (KIND=JPLIKB)  IOPTIO                                 ! IN   
(  389) ! Convert arguments
(  390) # 391 "farine.F90"
(  391) IOPTIO     = INT (    KOPTIO, JPLIKB)
(  392) # 393 "farine.F90"
(  393) CALL FARINE_MT64           &
(  394) &           (FA, IOPTIO)
(  395) # 397 "farine.F90"
(  397) END SUBROUTINE FARINE_MT
(  398) # 399 "farine.F90"
(  399) !INTF KOPTIO        IN    
