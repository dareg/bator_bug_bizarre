


NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: favori.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAVORI_MT64                                              &
(    4) &                     (FA,  KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, &
(    5) &                      KDMOPL)
(    6) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !        Ce sous-programme permet de connaitre les options implicites
(   13) !     courantes liees au codage GRIB des champs.
(   14) !     CES OPTIONS NE SONT UTILISEES QUE POUR (RE)ECRIRE DES CHAMPS
(   15) !     codes en GRIB, et les valeurs implicites ne servent
(   16) !     que LORS d'une OUVERTURE de FICHIER.
(   17) !       ( Visualisation (?) Options R (??) Implicites )
(   18) !**
(   19) !     Arguments : KNGRIB ==> Niveau de codage GRIB (-1,0,1,2,3);
(   20) !     (tous de    KNBPDG ==> Nombre de bits par valeur point-de-grille;
(   21) !      SORTIE)    KNBCSP ==> Nombre de bits par partie reelle/imaginaire
(   22) !                            de coeff. spectral;
(   23) !                 KSTRON ==> Sous-troncature non compactee;
(   24) !                 KPUILA ==> Puissance de laplacien;
(   25) !                 KDMOPL ==> Degre de modulation de KPUILA.
(   26) !
(   27) !
(   28) !
(   29) TYPE(FA_COM) :: FA
(   30) INTEGER (KIND=JPLIKB) KNGRIB, KNBPDG, KNBCSP






NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 3

(   31) INTEGER (KIND=JPLIKB) KSTRON, KPUILA, KDMOPL
(   32) !
(   33) INTEGER (KIND=JPLIKB) IREP, INIMES, INUMER
(   34) !
(   35) LOGICAL LLVERG
(   36) !
(   37) !
(   38) !
(   39) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   40) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   41) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   42) 
(   43) !**
(   44) !     1.  -  INITIALISATIONS.
(   45) !-----------------------------------------------------------------------
(   46) !
(   47) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   48) IF (LHOOK) CALL DR_HOOK('FAVORI_MT',0,ZHOOK_HANDLE)
(   49) CLACTI=''
(   50) IF (FA%FAVORI_LLPREA) THEN
(   51) !
(   52) !          A la premiere utilisation, appel au sous-programme "FARINE".
(   53) !
(   54)   CALL FARINE_MT64             &
(   55) &                (FA, 2_JPLIKB )
(   56)   FA%FAVORI_LLPREA=.FALSE.
(   57) ENDIF
(   58) !
(   59) !         Verrouillage global eventuel.
(   60) !
(   61) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(   62) &                              (FA%LFI, FA%VRGLAS,'ON')
(   63) LLVERG=FA%LFAMUL
(   64) !**
(   65) !     2.  -  RECOPIE DES VALEURS EN COMMON DANS LES ARGUMENTS.
(   66) !-----------------------------------------------------------------------
(   67) !
(   68) KNGRIB=FA%NIGRIB
(   69) KNBPDG=FA%NBIPDG
(   70) KNBCSP=FA%NBICSP
(   71) KSTRON=FA%NSTROI
(   72) KPUILA=FA%NPUILA
(   73) KDMOPL=FA%NMIDPL
(   74) !**
(   75) !    10.  -  PHASE TERMINALE : MESSAGERIE VIA LE SOUS-PROGRAMME "FAIPAR"
(   76) !-----------------------------------------------------------------------
(   77) !
(   78) !
(   79) !        Deverrouillage global eventuel.
(   80) !
(   81) IF (LLVERG) CALL LFIVER_MT64                         &
(   82) &                           (FA%LFI, FA%VRGLAS,'OFF')
(   83) !
(   84) IF (FA%NIMSGA.EQ.2) THEN
(   85)   IREP=0
(   86)   INIMES=2
(   87)   CLNSPR='FAVORI'
(   88)   WRITE (UNIT=CLMESS,FMT='(''KNGRIB='',I2,'', KNBPDG='',I3,  &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 4

(   89) &         '', KNBCSP='',I3,'', KSTRON='',I3,'', KPUILA='',I3, &
(   90) &         '', KDMOPL='',I3)')                                 &
(   91) &    KNGRIB,KNBPDG,KNBCSP,KSTRON,KPUILA,KDMOPL
(   92)   INUMER=JPNIIL
(   93)   CALL FAIPAR_MT64                                      &
(   94) &                 (FA, INUMER,INIMES,IREP,.FALSE.,CLMESS, &
(   95) &                  CLNSPR,CLACTI,.FALSE.)
(   96) ENDIF
(   97) !
(   98) IF (LHOOK) CALL DR_HOOK('FAVORI_MT',1,ZHOOK_HANDLE)
(   99) END SUBROUTINE FAVORI_MT64
(  100) 
(  101) 
(  102) 
(  103) ! Oct-2012 P. Marguinaud 64b LFI
(  104) SUBROUTINE FAVORI64                                        &
(  105) &           (KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  106) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  107) &                   FA_COM_DEFAULT_INIT,  &
(  108) &                   NEW_FA_DEFAULT
(  109) USE LFI_PRECISION
(  110) IMPLICIT NONE
(  111) ! Arguments
(  112) INTEGER (KIND=JPLIKB)  KNGRIB                                 !   OUT
(  113) INTEGER (KIND=JPLIKB)  KNBPDG                                 !   OUT
(  114) INTEGER (KIND=JPLIKB)  KNBCSP                                 !   OUT
(  115) INTEGER (KIND=JPLIKB)  KSTRON                                 !   OUT
(  116) INTEGER (KIND=JPLIKB)  KPUILA                                 !   OUT
(  117) INTEGER (KIND=JPLIKB)  KDMOPL                                 !   OUT
(  118) 
(  119) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  120) 
(  121) CALL FAVORI_MT64                                               &
(  122) &           (FA, KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  123) 
(  124) END SUBROUTINE FAVORI64
(  125) 
(  126) SUBROUTINE FAVORI                                          &
(  127) &           (KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  128) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  129) &                   FA_COM_DEFAULT_INIT,  &
(  130) &                   NEW_FA_DEFAULT
(  131) USE LFI_PRECISION
(  132) IMPLICIT NONE
(  133) ! Arguments
(  134) INTEGER (KIND=JPLIKM)  KNGRIB                                 !   OUT
(  135) INTEGER (KIND=JPLIKM)  KNBPDG                                 !   OUT
(  136) INTEGER (KIND=JPLIKM)  KNBCSP                                 !   OUT
(  137) INTEGER (KIND=JPLIKM)  KSTRON                                 !   OUT
(  138) INTEGER (KIND=JPLIKM)  KPUILA                                 !   OUT
(  139) INTEGER (KIND=JPLIKM)  KDMOPL                                 !   OUT
(  140) 
(  141) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  142) 
(  143) CALL FAVORI_MT                                                 &
(  144) &           (FA, KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  145) 
(  146) END SUBROUTINE FAVORI






NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 5

(  147) 
(  148) SUBROUTINE FAVORI_MT                                           &
(  149) &           (FA, KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  150) USE FA_MOD, ONLY : FA_COM
(  151) USE LFI_PRECISION
(  152) IMPLICIT NONE
(  153) ! Arguments
(  154) TYPE (FA_COM)          FA                                     ! INOUT
(  155) INTEGER (KIND=JPLIKM)  KNGRIB                                 !   OUT
(  156) INTEGER (KIND=JPLIKM)  KNBPDG                                 !   OUT
(  157) INTEGER (KIND=JPLIKM)  KNBCSP                                 !   OUT
(  158) INTEGER (KIND=JPLIKM)  KSTRON                                 !   OUT
(  159) INTEGER (KIND=JPLIKM)  KPUILA                                 !   OUT
(  160) INTEGER (KIND=JPLIKM)  KDMOPL                                 !   OUT
(  161) ! Local integers
(  162) INTEGER (KIND=JPLIKB)  INGRIB                                 !   OUT
(  163) INTEGER (KIND=JPLIKB)  INBPDG                                 !   OUT
(  164) INTEGER (KIND=JPLIKB)  INBCSP                                 !   OUT
(  165) INTEGER (KIND=JPLIKB)  ISTRON                                 !   OUT
(  166) INTEGER (KIND=JPLIKB)  IPUILA                                 !   OUT
(  167) INTEGER (KIND=JPLIKB)  IDMOPL                                 !   OUT
(  168) ! Convert arguments
(  169) 
(  170) 
(  171) CALL FAVORI_MT64                                               &
(  172) &           (FA, INGRIB, INBPDG, INBCSP, ISTRON, IPUILA, IDMOPL)
(  173) 
(  174) KNGRIB     = INT (    INGRIB, JPLIKM)
(  175) KNBPDG     = INT (    INBPDG, JPLIKM)
(  176) KNBCSP     = INT (    INBCSP, JPLIKM)
(  177) KSTRON     = INT (    ISTRON, JPLIKM)
(  178) KPUILA     = INT (    IPUILA, JPLIKM)
(  179) KDMOPL     = INT (    IDMOPL, JPLIKM)
(  180) 
(  181) END SUBROUTINE FAVORI_MT
(  182) 
(  183) !INTF KNGRIB          OUT 
(  184) !INTF KNBPDG          OUT 
(  185) !INTF KNBCSP          OUT 
(  186) !INTF KSTRON          OUT 
(  187) !INTF KPUILA          OUT 
(  188) !INTF KDMOPL          OUT 






















NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 6

(    1) # 1 "favori.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAVORI_MT64                                              &
(    4) &                     (FA,  KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, &
(    5) &                      KDMOPL)
(    6) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !        Ce sous-programme permet de connaitre les options implicites
(   13) !     courantes liees au codage GRIB des champs.
(   14) !     CES OPTIONS NE SONT UTILISEES QUE POUR (RE)ECRIRE DES CHAMPS
(   15) !     codes en GRIB, et les valeurs implicites ne servent
(   16) !     que LORS d'une OUVERTURE de FICHIER.
(   17) !       ( Visualisation (?) Options R (??) Implicites )
(   18) !**
(   19) !     Arguments : KNGRIB ==> Niveau de codage GRIB (-1,0,1,2,3);
(   20) !     (tous de    KNBPDG ==> Nombre de bits par valeur point-de-grille;
(   21) !      SORTIE)    KNBCSP ==> Nombre de bits par partie reelle/imaginaire
(   22) !                            de coeff. spectral;
(   23) !                 KSTRON ==> Sous-troncature non compactee;
(   24) !                 KPUILA ==> Puissance de laplacien;
(   25) !                 KDMOPL ==> Degre de modulation de KPUILA.
(   26) !
(   27) !
(   28) !
(   29) TYPE(FA_COM) :: FA
(   30) INTEGER (KIND=JPLIKB) KNGRIB, KNBPDG, KNBCSP
(   31) INTEGER (KIND=JPLIKB) KSTRON, KPUILA, KDMOPL
(   32) !
(   33) INTEGER (KIND=JPLIKB) IREP, INIMES, INUMER
(   34) !
(   35) LOGICAL LLVERG
(   36) !
(   37) !
(   38) !
(   39) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   40) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   41) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   42) # 43 "favori.F90"
(   43) !**
(   44) !     1.  -  INITIALISATIONS.
(   45) !-----------------------------------------------------------------------
(   46) !
(   47) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   48) IF (LHOOK) CALL DR_HOOK('FAVORI_MT',0,ZHOOK_HANDLE)
(   49) CLACTI=''
(   50) IF (FA%FAVORI_LLPREA) THEN
(   51) !
(   52) !          A la premiere utilisation, appel au sous-programme "FARINE".
(   53) !
(   54)   CALL FARINE_MT64             &
(   55) &                (FA, 2_JPLIKB )
(   56)   FA%FAVORI_LLPREA=.FALSE.
(   57) ENDIF






NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 7

(   58) !
(   59) !         Verrouillage global eventuel.
(   60) !
(   61) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(   62) &                              (FA%LFI, FA%VRGLAS,'ON')
(   63) LLVERG=FA%LFAMUL
(   64) !**
(   65) !     2.  -  RECOPIE DES VALEURS EN COMMON DANS LES ARGUMENTS.
(   66) !-----------------------------------------------------------------------
(   67) !
(   68) KNGRIB=FA%NIGRIB
(   69) KNBPDG=FA%NBIPDG
(   70) KNBCSP=FA%NBICSP
(   71) KSTRON=FA%NSTROI
(   72) KPUILA=FA%NPUILA
(   73) KDMOPL=FA%NMIDPL
(   74) !**
(   75) !    10.  -  PHASE TERMINALE : MESSAGERIE VIA LE SOUS-PROGRAMME "FAIPAR"
(   76) !-----------------------------------------------------------------------
(   77) !
(   78) !
(   79) !        Deverrouillage global eventuel.
(   80) !
(   81) IF (LLVERG) CALL LFIVER_MT64                         &
(   82) &                           (FA%LFI, FA%VRGLAS,'OFF')
(   83) !
(   84) IF (FA%NIMSGA.EQ.2) THEN
(   85)   IREP=0
(   86)   INIMES=2
(   87)   CLNSPR='FAVORI'
(   88)   WRITE (UNIT=CLMESS,FMT='(''KNGRIB='',I2,'', KNBPDG='',I3,  &
(   89) &         '', KNBCSP='',I3,'', KSTRON='',I3,'', KPUILA='',I3, &
(   90) &         '', KDMOPL='',I3)')                                 &
(   91) &    KNGRIB,KNBPDG,KNBCSP,KSTRON,KPUILA,KDMOPL
(   92)   INUMER=JPNIIL
(   93)   CALL FAIPAR_MT64                                      &
(   94) &                 (FA, INUMER,INIMES,IREP,.FALSE.,CLMESS, &
(   95) &                  CLNSPR,CLACTI,.FALSE.)
(   96) ENDIF
(   97) !
(   98) IF (LHOOK) CALL DR_HOOK('FAVORI_MT',1,ZHOOK_HANDLE)
(   99) END SUBROUTINE FAVORI_MT64
(  100) # 103 "favori.F90"
(  103) ! Oct-2012 P. Marguinaud 64b LFI
(  104) SUBROUTINE FAVORI64                                        &
(  105) &           (KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  106) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  107) &                   FA_COM_DEFAULT_INIT,  &
(  108) &                   NEW_FA_DEFAULT
(  109) USE LFI_PRECISION
(  110) IMPLICIT NONE
(  111) ! Arguments
(  112) INTEGER (KIND=JPLIKB)  KNGRIB                                 !   OUT
(  113) INTEGER (KIND=JPLIKB)  KNBPDG                                 !   OUT
(  114) INTEGER (KIND=JPLIKB)  KNBCSP                                 !   OUT
(  115) INTEGER (KIND=JPLIKB)  KSTRON                                 !   OUT
(  116) INTEGER (KIND=JPLIKB)  KPUILA                                 !   OUT
(  117) INTEGER (KIND=JPLIKB)  KDMOPL                                 !   OUT






NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 8

(  118) # 119 "favori.F90"
(  119) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  120) # 121 "favori.F90"
(  121) CALL FAVORI_MT64                                               &
(  122) &           (FA, KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  123) # 124 "favori.F90"
(  124) END SUBROUTINE FAVORI64
(  125) # 126 "favori.F90"
(  126) SUBROUTINE FAVORI                                          &
(  127) &           (KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  128) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  129) &                   FA_COM_DEFAULT_INIT,  &
(  130) &                   NEW_FA_DEFAULT
(  131) USE LFI_PRECISION
(  132) IMPLICIT NONE
(  133) ! Arguments
(  134) INTEGER (KIND=JPLIKM)  KNGRIB                                 !   OUT
(  135) INTEGER (KIND=JPLIKM)  KNBPDG                                 !   OUT
(  136) INTEGER (KIND=JPLIKM)  KNBCSP                                 !   OUT
(  137) INTEGER (KIND=JPLIKM)  KSTRON                                 !   OUT
(  138) INTEGER (KIND=JPLIKM)  KPUILA                                 !   OUT
(  139) INTEGER (KIND=JPLIKM)  KDMOPL                                 !   OUT
(  140) # 141 "favori.F90"
(  141) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  142) # 143 "favori.F90"
(  143) CALL FAVORI_MT                                                 &
(  144) &           (FA, KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  145) # 146 "favori.F90"
(  146) END SUBROUTINE FAVORI
(  147) # 148 "favori.F90"
(  148) SUBROUTINE FAVORI_MT                                           &
(  149) &           (FA, KNGRIB, KNBPDG, KNBCSP, KSTRON, KPUILA, KDMOPL)
(  150) USE FA_MOD, ONLY : FA_COM
(  151) USE LFI_PRECISION
(  152) IMPLICIT NONE
(  153) ! Arguments
(  154) TYPE (FA_COM)          FA                                     ! INOUT
(  155) INTEGER (KIND=JPLIKM)  KNGRIB                                 !   OUT
(  156) INTEGER (KIND=JPLIKM)  KNBPDG                                 !   OUT
(  157) INTEGER (KIND=JPLIKM)  KNBCSP                                 !   OUT
(  158) INTEGER (KIND=JPLIKM)  KSTRON                                 !   OUT
(  159) INTEGER (KIND=JPLIKM)  KPUILA                                 !   OUT
(  160) INTEGER (KIND=JPLIKM)  KDMOPL                                 !   OUT
(  161) ! Local integers
(  162) INTEGER (KIND=JPLIKB)  INGRIB                                 !   OUT
(  163) INTEGER (KIND=JPLIKB)  INBPDG                                 !   OUT
(  164) INTEGER (KIND=JPLIKB)  INBCSP                                 !   OUT
(  165) INTEGER (KIND=JPLIKB)  ISTRON                                 !   OUT
(  166) INTEGER (KIND=JPLIKB)  IPUILA                                 !   OUT
(  167) INTEGER (KIND=JPLIKB)  IDMOPL                                 !   OUT
(  168) ! Convert arguments
(  169) # 171 "favori.F90"
(  171) CALL FAVORI_MT64                                               &
(  172) &           (FA, INGRIB, INBPDG, INBCSP, ISTRON, IPUILA, IDMOPL)
(  173) # 174 "favori.F90"
(  174) KNGRIB     = INT (    INGRIB, JPLIKM)
(  175) KNBPDG     = INT (    INBPDG, JPLIKM)
(  176) KNBCSP     = INT (    INBCSP, JPLIKM)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:12      page 9

(  177) KSTRON     = INT (    ISTRON, JPLIKM)
(  178) KPUILA     = INT (    IPUILA, JPLIKM)
(  179) KDMOPL     = INT (    IDMOPL, JPLIKM)
(  180) # 181 "favori.F90"
(  181) END SUBROUTINE FAVORI_MT
(  182) # 183 "favori.F90"
(  183) !INTF KNGRIB          OUT 
(  184) !INTF KNBPDG          OUT 
(  185) !INTF KNBCSP          OUT 
(  186) !INTF KSTRON          OUT 
(  187) !INTF KPUILA          OUT 
(  188) !INTF KDMOPL          OUT 
