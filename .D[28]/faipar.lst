


NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: faipar.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAIPAR_MT64                                            &
(    4) &                     (FA,  KNUMER, KNIMES, KCODE, LDFATA, CDMESS,  &
(    5) &                      CDNSPR, CDACTI, LDRLFI )
(    6) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK, ONLY : LHOOK, DR_HOOK
(    9) USE SDL_MOD, ONLY : SDL_SRLABORT
(   10) USE OML_MOD, ONLY : OML_MY_THREAD, OML_IN_PARALLEL
(   11) USE LFI_PRECISION
(   12) IMPLICIT NONE
(   13) !**** 
(   14) !        Ce sous-programme est charge de FAIre PARt des Messages
(   15) !     emis par le logiciel de Fichiers ARPEGE, en faisant si besoin est
(   16) !     l'"ABORT" du programme .
(   17) !**
(   18) !        Arguments : KNUMER ==> Numero de l'unite logique eventuelle;
(   19) !                               ( JPNIIL ==> pas d'unite logique )
(   20) !                    KNIMES ==> Niveau (0,1,2) du message;
(   21) !                    KCODE  ==> Code correspondant a l'action;
(   22) !                    LDFATA ==> Vrai si on doit avorter le programme;
(   23) !                    CDMESS ==> si KNIMES#0, Message a emettre;
(   24) !                    CDNSPR ==> Nom du Sous-Programme appelant;
(   25) !                    CDACTI ==> Nom de l'action d'Entree/Sortie FORTRAN
(   26) !                               (si KCODE >0), sinon fourre-tout !) .
(   27) !                    LDRLFI ==> Vrai si le code-reponse different de 0
(   28) !                               a ete detecte par le logiciel LFI.
(   29) !*
(   30) !     VALEURS POSSIBLES DES CODES-REPONSES DU LOGICIEL FICHIERS ARPEGE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 3

(   31) !
(   32) !      0 ==> Aucune erreur detectee, message informatif.
(   33) !     >0 ==> Il s'agit du code-reponse d'une erreur detectee lors d'un
(   34) !            OPEN, READ, WRITE, CLOSE, ou INQUIRE FORTRAN; voir manuels.
(   35) ! -(1a50)==> Code-reponse renvoye par le logiciel LFI.
(   36) !    -51 ==> Unite logique non ouverte pour le logiciel,
(   37) !             ou bien cadre non defini .
(   38) !    -52 ==> Valeur d'un "NIVEAU" hors plage [0-2] .
(   39) !    -53 ==> *** code-reponse inutilise pour le moment ***.
(   40) !    -54 ==> Changement explicite de mode Multi-Tasking avec au moins 1
(   41) !            unite logique ouverte-risque de problemes (s/p "FARINE") .
(   42) !    -55 ==> Unite logique deja ouverte ou cadre non redefinissable.
(   43) !    -56 ==> Trop d'unites logiques deja ouvertes ou de cadres definis.
(   44) !    -57 ==> Nouveau fichier, et cadre reference non defini au prealable
(   45) !    -58 ==> Fichier preexistant, et cadre reference non compatible .
(   46) !    -59 ==> Redefinition de cadre avec modification de parametre(s),
(   47) !            impossible car il y a au moins un fichier qui s'y rattache.
(   48) !    -60 ==> Un des articles definissant le cadre est manquant.
(   49) !    -61 ==>  "  "      "        "       "  " a une longueur inattendue.
(   50) !    -62 ==> L'article DATE est manquant.
(   51) !    -63 ==> L'article DATE a une longueur inattendue.
(   52) !    -64 ==> Argument d'appel de type ENTIER incorrect .
(   53) !    -65 ==> Argument d'appel de type CARACTERE incorrect .
(   54) !    -66 ==> INCOHERENCE tables, fichier, appels s/p internes, logiciel;
(   55) !            CE CODE EST LE SEUL QUE *FA%NRFAGA* VALANT 2 NE PEUT MASQUER,
(   56) !            ET PROVOQUE DONC UNE ERREUR FATALE DANS TOUS LES CAS.
(   57) !    -67 ==> Le cadre reference a au moins un fichier associe,
(   58) !            et ne peut donc pas etre supprime.
(   59) !    -68 ==> Nom d'article compose uniquement de BLANCS, non accepte
(   60) !            ( a cause du fonctionnement interne du logiciel LFI ),
(   61) !            ou cadre de nom blanc non accepte (les cadres non definis
(   62) !             sont reperes ainsi dans les tables du logiciel)
(   63) !    -69 ==> La variable CARACTERE donnee en argument est TROP COURTE
(   64) !            pour recevoir le NOM du cadre ou d'identificateur, meme en
(   65) !            supprimant les eventuels caracteres blancs en fin de nom .
(   66) !    -70 ==> Troncature hors plage [1-FA%NXTRON].
(   67) !    -71 ==> Nombre de latitudes de pole a pole hors plage [1-FA%NXLATI].
(   68) !    -72 ==> Nombre de niveaux verticaux hors plage [1-FA%NXNIVV].
(   69) !    -73 ==> Coefficient de dilatation inferieur a 1.
(   70) !    -74 ==> Un des nombres de points par parallele est <= 0 ou depasse
(   71) !            le nombre maximum annonce dans la description du cadre.
(   72) !    -75 ==> Un des nombres de points par parallele est inferieur
(   73) !            a celui qui le precede.
(   74) !    -76 ==> Un des nombres d'onde zonal maxi par parallele depasse
(   75) !            la troncature ou n'est pas positif.
(   76) !    -77 ==> Un des nombres d'onde zonal maxi par parallele est
(   77) !            inferieur a celui qui le precede.
(   78) !    -78 ==> Sur une latitude au moins, le nombre de points est insuffi-
(   79) !            sans vis-a-vis du nombre d'onde zonal maximum.
(   80) !    -79 ==> Inconsistance: le nombre de latitudes (de pole a pole)
(   81) !            est insuffisant vis-a-vis de la troncature.
(   82) !    -80 ==> Une valeur d'une des fonctions de la coordonnee hybride
(   83) !            est en-dehors de l'intervalle [0,1] .
(   84) !    -81 ==> Pour une couche, valeurs inadaptees des fonctions de la
(   85) !            coordonnee hybride.
(   86) !    -82 ==> L'article DATE a un contenu incorrect.
(   87) !    -83 ==> Le nombre maximum de points par parallele est en-dehors de
(   88) !            l'intervalle [1,FA%NXLONG]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 4

(   89) !    -84 ==> Le nombre maximum de points par parallele est insuffisant
(   90) !            vis-a-vis de la troncature.
(   91) !    -85 ==> Fichier en mode creation, donc vide d'articles vis-a-vis
(   92) !            du logiciel (a la description du Cadre pres):
(   93) !            il faut le munir d'une date...
(   94) !    -86 ==> Prefixe et/ou suffixe "blanc" interdit.
(   95) !    -87 ==> Prefixe de champ trop long.
(   96) !    -88 ==> Troncature effective inferieure ou egale a
(   97) !            la sous-troncature "non compactee".
(   98) !    -89 ==> Article de type champ demande inexistant dans le fichier.
(   99) !    -90 ==> L'article de type champ existe, mais est trop long.
(  100) !    -91 ==> En-tete d'article champ incorrect.
(  101) !    -92 ==> L'article demande est en points-de-grille au lieu de
(  102) !            coefficients spectraux, ou vice-versa.
(  103) !    -93 ==> L'article demande est trop COURT sur le fichier.
(  104) !    -94 ==> L'article demande est trop LONG sur le fichier ( si cette
(  105) !            erreur n'est pas fatale, on traite le debut de l'article ).
(  106) !    -95 ==> Incoherence entre entete d'article champ et zone GRIB.
(  107) !    -96 ==> Niveau de codage GRIB trop grand.
(  108) !    -97 ==> Nombre de bits de codage trop grand.
(  109) !    -98 ==> Puissance de laplacien trop grande.
(  110) !    -99 ==> Sous-troncature superieure ou egale a la troncature
(  111) !   -100 ==> Une des lignes trigonometriques definissant le pole de
(  112) !            projection n'est pas dans [-1,1] .
(  113) !   -101 ==> Cosinus et Sinus de la longitude du pole de projection
(  114) !            incoherents.
(  115) !   -102 ==> Le Sinus d'une latitude de la grille n'est pas dans [-1,1].
(  116) !   -103 ==> Le Sinus d'une latitude est superieur ou egal a celui de
(  117) !            la latitude precedente.
(  118) !   -104 ==> Troncature maxi. incompatible avec cadre(s) deja defini(s).
(  119) !   -105 ==> Nombre maxi. de niveaux verticaux "  "       "      "     .
(  120) !   -106 ==> Nombre maxi. de latitudes pole a pole"       "      "     .
(  121) !   -107 ==> Nombre maxi. de longitudes "      "  "       "      "     .
(  122) !   -108 ==> Pression de reference aberrante.
(  123) !   -109 ==> Type de transformation horizontale hors plage [1-FA%NTYPTX]
(  124) !   -110 ==> Pas d'article "identificateur" (apres ceux du cadre)
(  125) !   -111 ==> Article de nom reserve, a ne pas ecrire ou lire ainsi
(  126) !   -112 ==> Caracteristiques des fichiers vraiment incompatibles,
(  127) !            recopie d'article "champ" impossible.
(  128) !   -113 ==> Sous-troncature implicite superieure ou egale a la
(  129) !            limite usager de troncature.
(  130) !   -114 ==> Ratio des troncatures (version LAM) superieur a 3.
(  131) !            Garde-fou, modifiable dans FARCIS, FACSIM et FAPULA.
(  132) !   -115 ==> (LAM) Le nombre maximum de points par parallele est insuffisant
(  133) !            vis-a-vis de la troncature.
(  134) !   -116 ==> (LAM) Le nombre maximum de points par meridien est insuffisant
(  135) !            vis-a-vis de la troncature.
(  136) !   -117 ==> (LAM) L'indicateur NDOMFP a une valeur hors de [-1,1]
(  137) !   -118 ==> (LAM) L'indice de depart (C+I) en longitude est hors plage [1-KNXLON].
(  138) !   -119 ==> (LAM) L'indice de fin (C+I) en longitude est errone.
(  139) !   -120 ==> (LAM) L'indice de depart (C+I) en latitude est hors plage [1-KNLATI].
(  140) !   -121 ==> (LAM) L'indice de fin (C+I) en latitude est errone.
(  141) !   -122 ==> (LAM) La largeur de la zone de relaxation est trop large en longitude.
(  142) !   -123 ==> (LAM) La largeur de la zone de relaxation est trop large en latitude.
(  143) !   -124 ==> Nombre de bits de codage nul alors qu'un codage est demande
(  144) !   -125 ==> Argument ayant une valeur incorrecte
(  145) !   -126 ==> Detection d'une incoherence dans un controle interne
(  146) !   -127 ==> (LAM) Description incoherente de l'ellipse contenant les troncatures






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 5

(  147) !   -128 ==> Message GRIB incorrect dans l'appel a DECF10
(  148) !   -129 ==> Impossible d'encoder ce champ avec ces reglages
(  149) !   -130 ==> Tableau trop court pour encoder ce champ
(  150) ! <-1000 ==> Erreur rapportee par GRIBEX
(  151) !
(  152) 
(  153) 
(  154) !
(  155) !
(  156) TYPE(FA_COM) :: FA
(  157) INTEGER (KIND=JPLIKB) KNUMER, KNIMES, KCODE
(  158) !
(  159) INTEGER (KIND=JPLIKB) ILNSPR, ILACTI, ILACT2
(  160) INTEGER (KIND=JPLIKB) ILMESU, ILMESA, INUME1, INUME2
(  161) !
(  162) LOGICAL LDFATA, LDRLFI
(  163) !
(  164) CHARACTER(LEN=*)  CDNSPR
(  165) CHARACTER(LEN=6)  CLJOLI
(  166) CHARACTER(LEN=6)  CLITID
(  167) CHARACTER(LEN=*)  CDMESS
(  168) CHARACTER(LEN=80) CLMESA
(  169) CHARACTER(LEN=*)  CDACTI
(  170) CHARACTER(LEN=FA%JPLMES) CLMESS 
(  171) 
(  172) !
(  173) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(  174) IF (LHOOK) CALL DR_HOOK('FAIPAR_MT',0,ZHOOK_HANDLE)
(  175) ILNSPR=MIN (INT (LEN (CDNSPR), JPLIKB),6_JPLIKB )
(  176) ILACTI=MIN (INT (LEN (CDACTI), JPLIKB),8_JPLIKB )
(  177) ILACT2=MIN (INT (LEN (CDACTI), JPLIKB),FA%NCPCAD)
(  178) !
(  179) IF (LDFATA) THEN
(  180)   CLJOLI=' *****'
(  181) ELSEIF (KNIMES.EQ.0.OR.KCODE.NE.0) THEN
(  182)   CLJOLI=' */*/*'
(  183) ELSE
(  184)   CLJOLI=' /////'
(  185) ENDIF
(  186) IF (OML_IN_PARALLEL ()) THEN
(  187)   WRITE (CLITID, '(" @",I4.4)') OML_MY_THREAD ()
(  188) ELSE
(  189)   CLITID=''
(  190) ENDIF
(  191) !
(  192) IF (KNIMES.NE.0) THEN
(  193)   ILMESU=MIN (INT (LEN (CLMESS), JPLIKB)-          &
(  194) &              INT (LEN (CLJOLI), JPLIKB)-ILNSPR-4, &
(  195) &              INT (LEN (CDMESS), JPLIKB))
(  196)   CLMESS=CLJOLI//' '//CDNSPR(1:ILNSPR)//' - '//TRIM (CDMESS(1:ILMESU))//CLITID
(  197)   WRITE (UNIT=FA%NULOUT,FMT='(A)') TRIM (CLMESS)
(  198) ENDIF
(  199) !
(  200) IF (KNIMES.EQ.0.OR.LDFATA) THEN
(  201) !
(  202) !        CONSTITUTION D'UN MESSAGE D'ERREUR AD HOC, EN FONCTION DE KCODE
(  203) !
(  204)   IF (LDRLFI) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 6

(  205)     WRITE (UNIT=CLMESS,FMT='(''CODE-REPONSE DE *'',A6,''* ='',  &
(  206) &           I4,'', UNITE ='',I3)') CDACTI(1:ILACTI),KCODE,KNUMER
(  207) !
(  208)   ELSEIF (KCODE.GT.0) THEN
(  209)     WRITE (UNIT=CLMESS,                                         &
(  210) &           FMT='(''ERREUR "'',A,''" FORTRAN, CODE ='',          &
(  211) &           I4,'', UNITE ='',I3)') CDACTI(1:ILACTI),KCODE,KNUMER
(  212) !
(  213)   ELSEIF (KCODE.EQ.-51) THEN
(  214) !
(  215)     IF (KNUMER.EQ.JPNIIL) THEN
(  216)       CLMESS='CADRE "'//CDACTI(1:ILACT2)//'" NON DEFINI'
(  217)     ELSE
(  218)       WRITE (UNIT=CLMESS,FMT='(''UNITE LOGIQUE'',I3, &
(  219) &             '' NON OUVERTE'')') KNUMER
(  220)     ENDIF
(  221) !
(  222)   ELSEIF (KCODE.EQ.-52) THEN
(  223) !
(  224)     IF (KNUMER.EQ.JPNIIL) THEN
(  225)       CLMESS='PARAMETRE DE NIVEAU "KNIVAU" HORS PLAGE [0-2]'
(  226)     ELSE
(  227)       WRITE (UNIT=CLMESS,FMT=                                      &
(  228) &   '(''NIVEAU DE MESSAGERIE HORS PLAGE [0-2], UNITE'',I3)') KNUMER
(  229)     ENDIF
(  230) !
(  231)   ELSEIF (KCODE.EQ.-53) THEN
(  232)     CLMESS='CADRE "'//CDACTI(1:ILACT2)//  &
(  233) &           '", PARAMETRE(S) INCORRECT(S)'
(  234) !
(  235)   ELSEIF (KCODE.EQ.-54) THEN
(  236)     CLMESS=                                                  &
(  237) &      'CHANGEMENT EXPLICITE MODE MULTI AVEC UNITES OUVERTES'
(  238) !
(  239)   ELSEIF (KCODE.EQ.-55) THEN
(  240) !
(  241)     IF (KNUMER.EQ.JPNIIL) THEN
(  242)       CLMESS='CADRE "'//CDACTI(1:ILACT2)// &
(  243) &                '" NON REDEFINISSABLE'
(  244)     ELSE
(  245)       WRITE (UNIT=CLMESS,FMT='(''UNITE LOGIQUE'',I3, &
(  246) &             '' DEJA OUVERTE'')') KNUMER
(  247)     ENDIF
(  248) !
(  249)   ELSEIF (KCODE.EQ.-56) THEN
(  250) !
(  251)     IF (KNUMER.EQ.JPNIIL) THEN
(  252)       WRITE (UNIT=CLMESS,FMT=                                     &
(  253) &         '(I2,'' CADRES DEFINIS, PAS DE PLACE POUR "'',A,''"'')') &
(  254) &      FA%JPNXCA,CDACTI(1:ILACT2)
(  255)     ELSE
(  256)       WRITE (UNIT=CLMESS,FMT='(I2,                                &
(  257) &           '' UNITES LOGIQUES OUVERTES, PAS DE PLACE POUR'',I3)') &
(  258) &      FA%JPNXFA,KNUMER
(  259)     ENDIF
(  260) !
(  261)   ELSEIF (KCODE.EQ.-57) THEN
(  262)     WRITE (UNIT=CLMESS,                                &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 7

(  263) &           FMT='(''UNITE'',I3,'' A CREER, CADRE "'',A, &
(  264) &           ''" NON DEFINI'')') KNUMER,CDACTI(1:ILACT2)
(  265) !
(  266)   ELSEIF (KCODE.EQ.-58) THEN
(  267)     WRITE (UNIT=CLMESS,                                     &
(  268) &           FMT='(''UNITE'',I3,'' /CADRE PREDEFINI "'',      &
(  269) &           A,''" INCOMPATIBLES'')') KNUMER,CDACTI(1:ILACT2)
(  270) !
(  271)   ELSEIF (KCODE.EQ.-59) THEN
(  272)     CLMESS='CADRE "'//CDACTI(1:ILACT2)//   &
(  273) &           '"  NON MODIFIABLE CAR UTILISE'
(  274) !
(  275)   ELSEIF (KCODE.EQ.-60) THEN
(  276)     WRITE (UNIT=CLMESS,FMT=                                       &
(  277) &       '(''UN ARTICLE DU CADRE EST MANQUANT, UNITE'',I3)') KNUMER
(  278) !
(  279)   ELSEIF (KCODE.EQ.-61) THEN
(  280) !***** FAZZZZ - un article du cadre a une longueur inattendue, uniteiii *****
(  281)     WRITE (UNIT=CLMESS,FMT=                                        &
(  282) &  '(''UN ARTICLE DU CADRE A UNE LONGUEUR INATTENDUE, UNITE'',I3)') &
(  283) &    KNUMER
(  284) !
(  285)   ELSEIF (KCODE.EQ.-62) THEN
(  286)     WRITE (UNIT=CLMESS,FMT=                                    &
(  287) &       '(''PAS D''''ARTICLE DATE SUR L''''UNITE'',I3)') KNUMER
(  288) !
(  289)   ELSEIF (KCODE.EQ.-63) THEN
(  290)     WRITE (UNIT=CLMESS,FMT=                                        &
(  291) &'(''L''''ARTICLE DATE A UNE LONGUEUR INATTENDUE SUR L'''' UNITE'', &
(  292) &    I3)')  KNUMER
(  293) !
(  294)   ELSEIF (KCODE.EQ.-64) THEN
(  295) !
(  296)     IF (CDNSPR.EQ.'FAIENC') THEN
(  297)       WRITE (UNIT=CLMESS,FMT=                             &
(  298) &   '(''NIVEAU VERTICAL HORS LIMITES, UNITE'',I3)') KNUMER
(  299)     ELSEIF (CDNSPR.EQ.'FAISAN'.OR.CDNSPR.EQ.'FALAIS') THEN
(  300)       WRITE (UNIT=CLMESS,FMT=                          &
(  301) &   '(''LONGUEUR D''''ARTICLE <=0, UNITE'',I3)') KNUMER
(  302)     ELSEIF (KNUMER.EQ.JPNIIL) THEN
(  303)       CLMESS='RANG DANS UNE TABLE GLOBALE INCORRECT'
(  304)     ELSE
(  305)       WRITE (UNIT=CLMESS,FMT=                          &
(  306) &   '(''ARGUMENT ENTIER INCORRECT, UNITE'',I3)') KNUMER
(  307)     ENDIF
(  308) !
(  309)   ELSEIF (KCODE.EQ.-65) THEN
(  310) !
(  311)     IF (CDNSPR.EQ.'FAIENC'.OR.CDNSPR.EQ.'FACILE'.OR.   &
(  312) &        CDNSPR.EQ.'FAISAN'.OR.CDNSPR.EQ.'FALAIS') THEN
(  313)       WRITE (UNIT=CLMESS,                              &
(  314) &             FMT='(''NOM D''''ARTICLE INCORRECT OU '', &
(  315) &           ''TROP LONG, UNITE'',I3)') KNUMER
(  316)     ELSEIF (KNUMER.EQ.JPNIIL) THEN
(  317)       CLMESS='NOM DE CADRE INCORRECT OU TROP LONG: "' &
(  318) &             //CDACTI(1:ILACT2)//'"'
(  319)     ELSE
(  320)       WRITE (UNIT=CLMESS,                              &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 8

(  321) &             FMT='(''CHAINE DE CARACTERES INCORRECT'', &
(  322) &           ''E OU TROP LONGUE, UNITE'',I3)') KNUMER
(  323)     ENDIF
(  324) !
(  325)   ELSEIF (KCODE.EQ.-66) THEN
(  326)     WRITE (UNIT=CLMESS,                                        &
(  327) &           FMT='(''INCOHERENCE (TABLES, FICHIER, '',           &
(  328) &           ''APPELS S/P INT. OU FICHIER), UNITE'',I3)') KNUMER
(  329) !
(  330)   ELSEIF (KCODE.EQ.-67) THEN
(  331)     CLMESS='FICHIER ASSOCIE, CADRE"'//CDACTI(1:ILACT2) &
(  332) &           //'" DEVANT SUBSISTER'
(  333) !
(  334)   ELSEIF (KCODE.EQ.-68) THEN
(  335) !
(  336)     IF (KNUMER.EQ.JPNIIL) THEN
(  337)       CLMESS='CADRE DE NOM BLANC NON ACCEPTE'
(  338)     ELSE
(  339)       WRITE (UNIT=CLMESS,FMT=                                      &
(  340) &        '(''ARTICLE DE NOM BLANC NON ACCEPTE, UNITE'',I3)') KNUMER
(  341)     ENDIF
(  342) !
(  343)   ELSEIF (KCODE.EQ.-69) THEN
(  344)     WRITE (UNIT=CLMESS,FMT='(''VARIABLE CARACT. TROP COURTE '', &
(  345) &    ''POUR "'',A,''", UNITE'',I3)')                             &
(  346) &      CDACTI(1:ILACT2),KNUMER
(  347) !
(  348)   ELSEIF (KCODE.EQ.-70) THEN
(  349) !
(  350)     IF (KNUMER.EQ.JPNIIL) THEN
(  351)       WRITE (UNIT=CLMESS,FMT='(''TRONCATURE HORS PLAGE [1-'', &
(  352) &                               I4,''], CADRE "'',A,''"'')')   &
(  353) &      FA%NXTRON,CDACTI(1:ILACT2)
(  354)     ELSE
(  355)       WRITE (UNIT=CLMESS,FMT='(''TRONCATURE HORS PLAGE [1-'', &
(  356) &                      I4,''], UNITE'',I4)') FA%NXTRON,KNUMER
(  357)     ENDIF
(  358) !
(  359)   ELSEIF (KCODE.EQ.-71) THEN
(  360) !
(  361)     IF (KNUMER.EQ.JPNIIL) THEN
(  362)       WRITE (UNIT=CLMESS,FMT='(''NOMBRE LATITUDES HORS [1-'', &
(  363) &             I4,''], CADRE "'',A,''"'')')                     &
(  364) &             FA%NXLATI,CDACTI(1:ILACT2)
(  365)     ELSE
(  366)       WRITE (UNIT=CLMESS,FMT='(''NOMBRE LATITUDES HORS [1-'', &
(  367) &             I4,''], UNITE'',I3)') FA%NXLATI,KNUMER
(  368)     ENDIF
(  369) !
(  370)   ELSEIF (KCODE.EQ.-72) THEN
(  371) !
(  372)     IF (KNUMER.EQ.JPNIIL) THEN
(  373)       WRITE (UNIT=CLMESS,FMT='(''NB. NIV. VERTICAUX HORS [1-'', &
(  374) &             I3,''], CADRE "'',A,''"'')')                       &
(  375) &             FA%NXNIVV,CDACTI(1:ILACT2)
(  376)     ELSE
(  377)       WRITE (UNIT=CLMESS,FMT='(''NB. NIV. VERTICAUX HORS [1-'', &
(  378) &             I3,''], UNITE'',I3)') FA%NXNIVV,KNUMER






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 9

(  379)     ENDIF
(  380) !
(  381)   ELSEIF (KCODE.EQ.-73) THEN
(  382) !
(  383)     IF (KNUMER.EQ.JPNIIL) THEN
(  384)       CLMESS='COEFF. DILATATION INFERIEUR A 1, CADRE "' &
(  385) &             //CDACTI(1:ILACT2)//'"'
(  386)     ELSE
(  387)       WRITE (UNIT=CLMESS,FMT=                                      &
(  388) &         '(''COEFF. DILATATION INFERIEUR A 1, UNITE'',I3)') KNUMER
(  389)     ENDIF
(  390) !
(  391)   ELSEIF (KCODE.EQ.-74) THEN
(  392) !
(  393)     IF (KNUMER.EQ.JPNIIL) THEN
(  394)       CLMESS='1 NB. POINTS/PARALL. HORS PLAGE, CADRE "' &
(  395) &             //CDACTI(1:ILACT2)//'"'
(  396)     ELSE
(  397)       WRITE (UNIT=CLMESS,FMT=                                      &
(  398) &         '(''1 NB. POINTS/PARALL. HORS PLAGE, UNITE'',I3)') KNUMER
(  399)     ENDIF
(  400) !
(  401)   ELSEIF (KCODE.EQ.-75) THEN
(  402) !
(  403)     IF (KNUMER.EQ.JPNIIL) THEN
(  404)       CLMESS='LISTE POINTS/PARALL. INCORRECTE, CADRE "' &
(  405) &             //CDACTI(1:ILACT2)//'"'
(  406)     ELSE
(  407)       WRITE (UNIT=CLMESS,FMT=                                      &
(  408) &         '(''LISTE POINTS/PARALL. INCORRECTE, UNITE'',I3)') KNUMER
(  409)     ENDIF
(  410) !
(  411)   ELSEIF (KCODE.EQ.-76) THEN
(  412) !
(  413)     IF (KNUMER.EQ.JPNIIL) THEN
(  414)       CLMESS='1 N.O.Z. MAX/PARALL. HORS PLAGE, CADRE "' &
(  415) &             //CDACTI(1:ILACT2)//'"'
(  416)     ELSE
(  417)       WRITE (UNIT=CLMESS,FMT=                                      &
(  418) &         '(''1 N.O.Z. MAX/PARALL. HORS PLAGE, UNITE'',I3)') KNUMER
(  419)     ENDIF
(  420) !
(  421)   ELSEIF (KCODE.EQ.-77) THEN
(  422) !
(  423)     IF (KNUMER.EQ.JPNIIL) THEN
(  424)       CLMESS='LISTE NOZMAX/PARALL. INCORRECTE, CADRE "' &
(  425) &             //CDACTI(1:ILACT2)//'"'
(  426)     ELSE
(  427)       WRITE (UNIT=CLMESS,FMT=                                      &
(  428) &         '(''LISTE NOZMAX/PARALL. INCORRECTE, UNITE'',I3)') KNUMER
(  429)     ENDIF
(  430) !
(  431)   ELSEIF (KCODE.EQ.-78) THEN
(  432) !
(  433)     IF (KNUMER.EQ.JPNIIL) THEN
(  434)       CLMESS='INCONSISTANCE NOZMAX/NB. POINTS, CADRE "' &
(  435) &             //CDACTI(1:ILACT2)//'"'
(  436)     ELSE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 10

(  437)       WRITE (UNIT=CLMESS,FMT=                                      &
(  438) &         '(''INCONSISTANCE NOZMAX/NB. POINTS, UNITE'',I3)') KNUMER
(  439)     ENDIF
(  440) !
(  441)   ELSEIF (KCODE.EQ.-79) THEN
(  442) !
(  443)     IF (KNUMER.EQ.JPNIIL) THEN
(  444)       CLMESS='INCONSISTANCE NB.LAT/TRONCATURE, CADRE "' &
(  445) &             //CDACTI(1:ILACT2)//'"'
(  446)     ELSE
(  447)       WRITE (UNIT=CLMESS,FMT=                                      &
(  448) &         '(''INCONSISTANCE NB.LAT/TRONCATURE, UNITE'',I3)') KNUMER
(  449)     ENDIF
(  450) !
(  451)   ELSEIF (KCODE.EQ.-80) THEN
(  452) !
(  453)     IF (KNUMER.EQ.JPNIIL) THEN
(  454)       CLMESS='FONC. COORD. HYBRIDE HORS [0,1], CADRE "' &
(  455) &             //CDACTI(1:ILACT2)//'"'
(  456)     ELSE
(  457)       WRITE (UNIT=CLMESS,FMT=                                      &
(  458) &         '(''FONC. COORD. HYBRIDE HORS [0,1], UNITE'',I3)') KNUMER
(  459)     ENDIF
(  460) !
(  461)   ELSEIF (KCODE.EQ.-81) THEN
(  462) !
(  463)     IF (KNUMER.EQ.JPNIIL) THEN
(  464) !***** FAZZZZ - fonc. coord. hybride inadaptees, CADRE "0123456789ABCDEF" *****
(  465)       CLMESS='FONC. COORD. HYBRIDE INADAPTEES, CADRE "' &
(  466) &             //CDACTI(1:ILACT2)//'"'
(  467)     ELSE
(  468)       WRITE (UNIT=CLMESS,FMT=                                      &
(  469) &         '(''FONC. COORD. HYBRIDE INADAPTEES, UNITE'',I3)') KNUMER
(  470)     ENDIF
(  471) !
(  472)   ELSEIF (KCODE.EQ.-82) THEN
(  473) !
(  474)     IF (CDNSPR.EQ.'FANDAR') THEN
(  475) !***** FAZZZZ - La DATE proposee a un contenu incorrect, UNITEiii *****
(  476)       WRITE (UNIT=CLMESS,FMT=                                     &
(  477) &       '(''LA DATE PROPOSEE A UN CONTENU INCORRECT, UNITE'',I3)') &
(  478) &      KNUMER
(  479)     ELSE
(  480)       WRITE (UNIT=CLMESS,FMT=                                      &
(  481) &       '(''L''''ARTICLE DATE A UN CONTENU INCORRECT, UNITE'',I3)') &
(  482) &      KNUMER
(  483)     ENDIF
(  484) !
(  485)   ELSEIF (KCODE.EQ.-83) THEN
(  486) !
(  487)     IF (KNUMER.EQ.JPNIIL) THEN
(  488) !***** FAZZZZ - Nb. Max. longitu. hors [1-iiii], CADRE "0123456789abcdef" *****
(  489)       WRITE (UNIT=CLMESS,FMT='(''NB. MAX. LONGITU. HORS [1-'', &
(  490) &             I4,''], CADRE "'',A,''"'')')                      &
(  491) &             FA%NXLONG,CDACTI(1:ILACT2)
(  492)     ELSE
(  493)       WRITE (UNIT=CLMESS,FMT='(''NB. MAX. LONGITU. HORS [1-'', &
(  494) &             I4,''], UNITE'',I3)') FA%NXLONG,KNUMER






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 11

(  495)     ENDIF
(  496) !
(  497)   ELSEIF (KCODE.EQ.-84) THEN
(  498) !
(  499)     IF (KNUMER.EQ.JPNIIL) THEN
(  500)       CLMESS='INCONSISTANCE KNXLON/TRONCATURE, CADRE "' &
(  501) &             //CDACTI(1:ILACT2)//'"'
(  502)     ELSE
(  503)       WRITE (UNIT=CLMESS,FMT=                                      &
(  504) &         '(''INCONSISTANCE KNXLON/TRONCATURE, UNITE'',I3)') KNUMER
(  505)     ENDIF
(  506) !
(  507)   ELSEIF (KCODE.EQ.-85) THEN
(  508)     WRITE (UNIT=CLMESS,FMT='(''UNITE'',I3,               &
(  509) &           '' PAS ENCORE MUNIE D''''UNE DATE'')') KNUMER
(  510) !
(  511)   ELSEIF (KCODE.EQ.-86) THEN
(  512)     WRITE (UNIT=CLMESS,FMT=                                       &
(  513) &         '(''PREFIXE/SUFFIXE BLANC INTERDIT, UNITE'',I3)') KNUMER
(  514) !
(  515)   ELSEIF (KCODE.EQ.-87) THEN
(  516)     WRITE (UNIT=CLMESS,FMT=                                   &
(  517) &         '(''PREFIXE DE CHAMP TROP LONG, UNITE'',I3)') KNUMER
(  518) !
(  519)   ELSEIF (KCODE.EQ.-88) THEN
(  520)     WRITE (UNIT=CLMESS,FMT=                                        &
(  521) &  '(''TRONCATURE <= SOUS-TRONCATURE "NON COMPACTEE", UNITE'',I3)') &
(  522) &       KNUMER
(  523) !
(  524)   ELSEIF (KCODE.EQ.-89) THEN
(  525)     WRITE (UNIT=CLMESS,FMT='(''ARTICLE-CHAMP "'',A,              &
(  526) &           ''" INEXISTANT, UNITE'',I3)') CDACTI(1:ILACT2),KNUMER
(  527) !
(  528)   ELSEIF (KCODE.EQ.-90) THEN
(  529)     WRITE (UNIT=CLMESS,FMT='(''ARTICLE-CHAMP "'',A,             &
(  530) &           ''" TROP LONG, UNITE'',I3)') CDACTI(1:ILACT2),KNUMER
(  531) !
(  532)   ELSEIF (KCODE.EQ.-91) THEN
(  533) !***** FAZZZZ - Entete d'article "0123456789abcdef" incorrect, uniteiii *****
(  534)     WRITE (UNIT=CLMESS,FMT='(''ENTETE D''''ARTICLE "'',A,       &
(  535) &           ''" INCORRECT, UNITE'',I3)') CDACTI(1:ILACT2),KNUMER
(  536) !
(  537)   ELSEIF (KCODE.EQ.-92) THEN
(  538) !***** FAZZZZ - Desaccord Csp./pdg., Article "0123456789abcdef", uniteiii *****
(  539)     WRITE (UNIT=CLMESS,                                &
(  540) &           FMT='(''DESACCORD CSP./PDG., ARTICLE "'',A, &
(  541) &           ''" , UNITE'',I3)') CDACTI(1:ILACT2),KNUMER
(  542) !
(  543)   ELSEIF (KCODE.EQ.-93) THEN
(  544)     WRITE (UNIT=CLMESS,FMT='(''ARTICLE "'',A,      &
(  545) &           ''" TROP *COURT* SUR L''''UNITE'',I3)') &
(  546) &        CDACTI(1:ILACT2),KNUMER
(  547) !
(  548)   ELSEIF (KCODE.EQ.-94) THEN
(  549)     WRITE (UNIT=CLMESS,FMT='(''ARTICLE "'',A,     &
(  550) &           ''" TROP *LONG* SUR L''''UNITE'',I3)') &
(  551) &        CDACTI(1:ILACT2),KNUMER
(  552) !






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 12

(  553)   ELSEIF (KCODE.EQ.-95) THEN
(  554) !***** FAZZZZ - inconsis entete/GRIB article "0123456789abcdef", uniteiii *****
(  555)     WRITE (UNIT=CLMESS,                                &
(  556) &           FMT='(''INCONSIS ENTETE/GRIB ARTICLE "'',A, &
(  557) &           ''", UNITE'',I3)')                          &
(  558) &        CDACTI(1:ILACT2),KNUMER
(  559) !
(  560)   ELSEIF (KCODE.EQ.-96) THEN
(  561) !
(  562)     IF (KNUMER.EQ.JPNIIL) THEN
(  563)       CLMESS='NIVEAU IMPLICITE DE CODAGE GRIB TROP GRAND'
(  564)     ELSE
(  565)       WRITE (UNIT=CLMESS,FMT=                                     &
(  566) &       '(''NIVEAU DE CODAGE GRIB TROP GRAND, UNITE'',I3)') KNUMER
(  567)     ENDIF
(  568) !
(  569)   ELSEIF (KCODE.EQ.-97) THEN
(  570) !
(  571)     IF (KNUMER.EQ.JPNIIL) THEN
(  572)       WRITE (UNIT=CLMESS,FMT=                                  &
(  573) &  '(''NOMBRE(S) IMPLICITE(S) DE BITS PAR VALEUR > MAXI ('',I2, &
(  574) &      '')'')')   FA%NBIMAX
(  575)     ELSE
(  576)       WRITE (UNIT=CLMESS,FMT=                                  &
(  577) &  '(''NOMBRE(S) DE BITS PAR VALEUR > MAXI ('',I2,''), UNITE'', &
(  578) &      I3)')   FA%NBIMAX,KNUMER
(  579)     ENDIF
(  580) !
(  581)   ELSEIF (KCODE.EQ.-98) THEN
(  582) !
(  583)     IF (KNUMER.EQ.JPNIIL) THEN
(  584)       CLMESS=                                         &
(  585) &       'PUISSANCE IMPLICITE DE LAPLACIEN TROP GRANDE'
(  586)     ELSE
(  587)       WRITE (UNIT=CLMESS,FMT=                              &
(  588) &     '(''PUISSANCE DE LAPLACIEN TROP GRANDE, UNITE'',I3)') &
(  589) &         KNUMER
(  590)     ENDIF
(  591) !
(  592)   ELSEIF (KCODE.EQ.-99) THEN
(  593) !
(  594)     IF (CDNSPR.EQ.'FARFLU') THEN
(  595)       CLMESS=                                                     &
(  596) &       'TRONCATURE MAX INFERIEURE OU = SOUS-TRONCATURE IMPLICITE'
(  597)     ELSEIF (KNUMER.EQ.JPNIIL) THEN
(  598)       CLMESS=                                                     &
(  599) &       'SS-TRONCATURE IMPLICITE SUPERIEURE OU = A UNE TRONCATURE'
(  600)     ELSE
(  601)       WRITE (UNIT=CLMESS,FMT=                                      &
(  602) &     '(''SOUS-TRONCATURE SUPERIEURE OU = A LA TRONCATURE, UNITE'', &
(  603) &       I3)')  KNUMER
(  604)     ENDIF
(  605) !
(  606)   ELSEIF (KCODE.EQ.-100) THEN
(  607) !
(  608)     IF (KNUMER.EQ.JPNIIL) THEN
(  609)       CLMESS='SIN/COS POLE PROJEC. HORS [-1,1], CADRE "' &
(  610) &             //CDACTI(1:ILACT2)//'"'






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 13

(  611)     ELSE
(  612)       WRITE (UNIT=CLMESS,FMT=                                      &
(  613) &     '(''SINUS/COSINUS DU POLE DE PROJECTION HORS [-1,1], UNITE'', &
(  614) &       I3)')  KNUMER
(  615)     ENDIF
(  616) !
(  617)   ELSEIF (KCODE.EQ.-101) THEN
(  618) !
(  619)     IF (KNUMER.EQ.JPNIIL) THEN
(  620)       CLMESS='INCOHERENCE COS/SIN LONGIT. POLE, CADRE "' &
(  621) &             //CDACTI(1:ILACT2)//'"'
(  622)     ELSE
(  623)       WRITE (UNIT=CLMESS,FMT=                                    &
(  624) &     '(''INCOHERENCE COS/SIN LONGITUDE POLE PROJECTION, UNITE'', &
(  625) &       I3)')  KNUMER
(  626)     ENDIF
(  627) !
(  628)   ELSEIF (KCODE.EQ.-102) THEN
(  629) !
(  630)     IF (KNUMER.EQ.JPNIIL) THEN
(  631)       CLMESS='SINUS D''UNE LATITUDE HORS [-1,1], CADRE "' &
(  632) &             //CDACTI(1:ILACT2)//'"'
(  633)     ELSE
(  634)       WRITE (UNIT=CLMESS,FMT=                                      &
(  635) &    '(''SINUS D''''UNE LATITUDE DE LA GRILLE HORS [-1,1], UNITE'', &
(  636) &       I3)')  KNUMER
(  637)     ENDIF
(  638) !
(  639)   ELSEIF (KCODE.EQ.-103) THEN
(  640) !
(  641)     IF (KNUMER.EQ.JPNIIL) THEN
(  642) !***** FAZZZZ - sinus latitudes non decroissants, cadre '0123456789abcdef" *****
(  643)       CLMESS='SINUS LATITUDES NON DECROISSANTS, CADRE "' &
(  644) &             //CDACTI(1:ILACT2)//'"'
(  645)     ELSE
(  646)       WRITE (UNIT=CLMESS,FMT=                          &
(  647) &    '(''SINUS DES LATITUDES NON DECROISSANTS, UNITE'', &
(  648) &       I3)')  KNUMER
(  649)     ENDIF
(  650) !
(  651)   ELSEIF (KCODE.EQ.-104) THEN
(  652) !
(  653)     CLMESS=                                                      &
(  654) &     'TRONCATURE MAXI INCOMPATIBLE AVEC CADRE(S) DEJA DEFINI(S)'
(  655) !
(  656)   ELSEIF (KCODE.EQ.-105) THEN
(  657) !
(  658)     CLMESS=                                                      &
(  659) &     'NB MAX NIVEAUX VERTICAUX/CADRE(S) DEFINI(S) INCOMPATIBLES'
(  660) !
(  661)   ELSEIF (KCODE.EQ.-106) THEN
(  662) !
(  663)     CLMESS=                                                      &
(  664) &     'NOMBRE MAXI DE LATITUDES/CADRE(S) DEFINI(S) INCOMPATIBLES'
(  665) !
(  666)   ELSEIF (KCODE.EQ.-107) THEN
(  667) !
(  668)     CLMESS=                                                      &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 14

(  669) &     'NOMBRE MAX DE LONGITUDES/CADRE(S) DEFINI(S) INCOMPATIBLES'
(  670) !
(  671)   ELSEIF (KCODE.EQ.-108) THEN
(  672) !
(  673) !***** FAZZZZ - Pression de reference aberrante, cadre "0123456789abcdef" *****
(  674)     IF (KNUMER.EQ.JPNIIL) THEN
(  675)       CLMESS='PRESSION DE REFERENCE ABERRANTE, CADRE "' &
(  676) &             //CDACTI(1:ILACT2)//'"'
(  677)     ELSE
(  678)       WRITE (UNIT=CLMESS,FMT=                                   &
(  679) &             '(''PRESSION DE REFERENCE ABERRANTE, UNITE'',I3)') &
(  680) &          KNUMER
(  681)     ENDIF
(  682) !
(  683)   ELSEIF (KCODE.EQ.-109) THEN
(  684) !
(  685)     IF (KNUMER.EQ.JPNIIL) THEN
(  686)       WRITE (UNIT=CLMESS,                            &
(  687) &             FMT='(''TYPE TRANSFO HORIZ. HORS [1-'', &
(  688) &             I2,''], CADRE "'',A,''"'')')            &
(  689) &             FA%NTYPTX,CDACTI(1:ILACT2)
(  690)     ELSE
(  691)       WRITE (UNIT=CLMESS,                            &
(  692) &             FMT='(''TYPE TRANSFO HORIZ. HORS [1-'', &
(  693) &             I2,''], UNITE'',I3)') FA%NTYPTX,KNUMER
(  694)     ENDIF
(  695) !
(  696)   ELSEIF (KCODE.EQ.-110) THEN
(  697)     WRITE (UNIT=CLMESS,FMT=                                    &
(  698) &    '(''PAS D''''ARTICLE DERRIERE CEUX DU CADRE, UNITE'',I3)') &
(  699) &           KNUMER
(  700) !
(  701)   ELSEIF (KCODE.EQ.-111) THEN
(  702)     WRITE (UNIT=CLMESS,FMT=                                    &
(  703) &    '(''NOM RESERVE, NE PEUT ETRE UTILISE AINSI, UNITE'',I3)') &
(  704) &           KNUMER
(  705) !
(  706)   ELSEIF (KCODE.EQ.-112) THEN
(  707)     INUME1=KNUMER/1000
(  708)     INUME2=MOD (KNUMER,1000_JPLIKB )
(  709)     WRITE (UNIT=CLMESS,                                          &
(  710) &           FMT='(''COPIE DE '''''',A,'''''': UNITES'',           &
(  711) &           I3,'' ET'',I3,'' INCOMPATIBLES'')') CDACTI(1:ILACT2), &
(  712) &      INUME1,INUME2
(  713) !
(  714)   ELSEIF (KCODE.EQ.-113) THEN
(  715)     CLMESS=                                                        &
(  716) &       'SS-TRONCATURE IMPLICITE SUPERIEURE OU = A TRONCATURE MAXI'
(  717) !
(  718)   ELSEIF (KCODE.EQ.-114) THEN
(  719)     CLMESS=                                                       &
(  720) &       'RATIO DES TRONCATURES HORIZ. (VERSION LAM) SUPERIEUR A 3: &
(  721) &        GARDE-FOU, MODIFIABLE DANS FARCIS+FACSIM'
(  722) !
(  723)   ELSEIF (KCODE.EQ.-115) THEN
(  724)     IF (KNUMER.EQ.JPNIIL) THEN
(  725)       CLMESS='KNXLON<(-2*KTYPTR+1), CADRE "' &
(  726) &             //CDACTI(1:ILACT2)//'"'






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 15

(  727)     ELSE
(  728)       WRITE (UNIT=CLMESS,FMT=                           &
(  729) &         '(''KNXLON<(-2*KTYPTR+1), UNITE'',I3)') KNUMER
(  730)     ENDIF
(  731) !
(  732)   ELSEIF (KCODE.EQ.-116) THEN
(  733)     IF (KNUMER.EQ.JPNIIL) THEN
(  734)       CLMESS='KNXLON<(2*KTRONC+1), CADRE "' &
(  735) &             //CDACTI(1:ILACT2)//'"'
(  736)     ELSE
(  737)       WRITE (UNIT=CLMESS,FMT=                          &
(  738) &         '(''KNXLON<(2*KTRONC+1), UNITE'',I3)') KNUMER
(  739)     ENDIF
(  740) !
(  741)   ELSEIF (KCODE.EQ.-117) THEN
(  742) !
(  743)     IF (KNUMER.EQ.JPNIIL) THEN
(  744)       CLMESS='INDICATEUR DE DOMAINE HORS [-1,1], CADRE "' &
(  745) &             //CDACTI(1:ILACT2)//'"'
(  746)     ELSE
(  747)       WRITE (UNIT=CLMESS,FMT=                       &
(  748) &    '(''INDICATEUR DE DOMAINE HORS [-1,1], UNITE'', &
(  749) &       I3)')  KNUMER
(  750)     ENDIF
(  751) !
(  752)   ELSEIF (KCODE.EQ.-118) THEN
(  753) !
(  754)     IF (KNUMER.EQ.JPNIIL) THEN
(  755)       CLMESS=                                                    &
(  756) &       'INDICE DE DEPART EN LONGITUDE HORS [1,KNXLON], CADRE "'  &
(  757) &             //CDACTI(1:ILACT2)//'"'
(  758)     ELSE
(  759)       WRITE (UNIT=CLMESS,FMT=                                   &
(  760) &    '(''INDICE DE DEPART EN LONGITUDE HORS [1,KNXLON], UNITE'', &
(  761) &       I3)')  KNUMER
(  762)     ENDIF
(  763) !
(  764)   ELSEIF (KCODE.EQ.-119) THEN
(  765) !
(  766)     IF (KNUMER.EQ.JPNIIL) THEN
(  767)       CLMESS='INDICE DE FIN EN LONGITUDE ERRONE, CADRE "' &
(  768) &             //CDACTI(1:ILACT2)//'"'
(  769)     ELSE
(  770)       WRITE (UNIT=CLMESS,FMT=                       &
(  771) &    '(''INDICE DE FIN EN LONGITUDE ERRONE, UNITE'', &
(  772) &       I3)')  KNUMER
(  773)     ENDIF
(  774) !
(  775)   ELSEIF (KCODE.EQ.-120) THEN
(  776) !
(  777)     IF (KNUMER.EQ.JPNIIL) THEN
(  778)       CLMESS=                                                  &
(  779) &       'INDICE DE DEPART EN LATITUDE HORS [1,KNLATI], CADRE "' &
(  780) &             //CDACTI(1:ILACT2)//'"'
(  781)     ELSE
(  782)       WRITE (UNIT=CLMESS,FMT=                                  &
(  783) &    '(''INDICE DE DEPART EN LATITUDE HORS [1,KNLATI], UNITE'', &
(  784) &       I3)')  KNUMER






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 16

(  785)     ENDIF
(  786) !
(  787)   ELSEIF (KCODE.EQ.-121) THEN
(  788) !
(  789)     IF (KNUMER.EQ.JPNIIL) THEN
(  790)       CLMESS='INDICE DE FIN EN LATITUDE ERRONE, CADRE "' &
(  791) &             //CDACTI(1:ILACT2)//'"'
(  792)     ELSE
(  793)       WRITE (UNIT=CLMESS,FMT=                      &
(  794) &    '(''INDICE DE FIN EN LATITUDE ERRONE, UNITE'', &
(  795) &       I3)')  KNUMER
(  796)     ENDIF
(  797) !
(  798)   ELSEIF (KCODE.EQ.-122) THEN
(  799) !
(  800)     IF (KNUMER.EQ.JPNIIL) THEN
(  801)       CLMESS='ZONE DE RELAXATION TROP LARGE '// &
(  802) &                'EN LONGITUDE, CADRE "'         &
(  803) &                //CDACTI(1:ILACT2)//'"'
(  804)     ELSE
(  805)       WRITE (UNIT=CLMESS,FMT=                                &
(  806) &    '(''ZONE DE RELAXATION TROP LARGE EN LONGITUDE, UNITE'', &
(  807) &       I3)')  KNUMER
(  808)     ENDIF
(  809) !
(  810)   ELSEIF (KCODE.EQ.-123) THEN
(  811) !
(  812)     IF (KNUMER.EQ.JPNIIL) THEN
(  813)       CLMESS='ZONE DE RELAXATION TROP LARGE '// &
(  814) &                'EN LATITUDE, CADRE "'          &
(  815) &                //CDACTI(1:ILACT2)//'"'
(  816)     ELSE
(  817)       WRITE (UNIT=CLMESS,FMT=                               &
(  818) &    '(''ZONE DE RELAXATION TROP LARGE EN LATITUDE, UNITE'', &
(  819) &       I3)')  KNUMER
(  820)     ENDIF
(  821) !
(  822)   ELSEIF (KCODE.EQ.-124) THEN
(  823)     CLMESS=                        &
(  824) &       'NB DE BITS POUR CODER NUL'
(  825) !
(  826)   ELSEIF (KCODE.EQ.-125) THEN
(  827)     CLMESS=                                   &
(  828) &       'ARGUMENT AYANT UNE VALEUR INCORRECTE'
(  829) !
(  830)   ELSEIF (KCODE.EQ.-126) THEN
(  831)     CLMESS=                                   &
(  832) &       'INCOHERENCE DANS UN CONTROLE INTERNE'
(  833) !
(  834)   ELSEIF (KCODE.EQ.-127) THEN
(  835)     CLMESS=                                         &
(  836) &       'INCOHERENCE DANS LE CONTROLE DE L''ELLIPSE'
(  837) !
(  838)   ELSEIF (KCODE.EQ.-128) THEN
(  839)     CLMESS=                                 &
(  840) &       'MESSAGE GRIB INCORRECT POUR DECF10'
(  841) !
(  842)   ELSEIF (KCODE.EQ.-129) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 17

(  843)     CLMESS=                                 &
(  844) &       'IMPOSSIBLE D''ENCODER CE CHAMP AVEC CES REGLAGES'
(  845) !
(  846)   ELSEIF (KCODE.EQ.-130) THEN
(  847)     CLMESS=                                 &
(  848) &       'TABLEAU TROP COURT POUR ENCODER CE CHAMP'
(  849) !
(  850)   ELSEIF (KCODE.LT.-1000) THEN
(  851)     CLMESS=                                                       &
(  852) &  'ERREUR RAPPORTEE PAR GRIBEX (cf manuel, avec kret=-krep-1000)'
(  853) !
(  854)   ELSEIF (KNUMER.EQ.JPNIIL) THEN
(  855)     WRITE (UNIT=CLMESS,FMT='(''ERREUR GLOBALE NUMERO'',I6)')  &
(  856) &            KCODE
(  857) !
(  858)   ELSE
(  859)     WRITE (UNIT=CLMESS,FMT='(''ERREUR GRIB'',I6,         &
(  860) &           '' SUR UNITE LOGIQUE'',I3)') 200+KCODE,KNUMER
(  861)   ENDIF
(  862) !
(  863)   ILMESA=INT (LEN (CLMESA), JPLIKB)
(  864)   ILMESU=ILMESA-1-2*INT (LEN (CLJOLI), JPLIKB)-ILNSPR-4
(  865)   CLMESA=CLJOLI//' '//CDNSPR(1:ILNSPR)//' - '//CLMESS(1:ILMESU) &
(  866) &         //CLJOLI
(  867)   CLMESA=TRIM (CLMESA)//CLITID
(  868)   WRITE (UNIT=FA%NULOUT,FMT='(A)') CLMESA
(  869) !
(  870)   WRITE (UNIT=FA%NULOUT,FMT=*) CLMESA
(  871)   IF (LDFATA.AND.KCODE.NE.0) THEN
(  872)     CALL FLUSH(INT (FA%NULOUT))
(  873)     CALL SDL_SRLABORT
(  874)   ENDIF
(  875) !
(  876) ENDIF
(  877) !
(  878) IF (LHOOK) CALL DR_HOOK('FAIPAR_MT',1,ZHOOK_HANDLE)
(  879) END SUBROUTINE FAIPAR_MT64
(  880) 
(  881) 
(  882) 
(  883) ! Oct-2012 P. Marguinaud 64b LFI
(  884) SUBROUTINE FAIPAR64                                       &
(  885) &           (KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  886) &           CDACTI, LDRLFI)
(  887) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  888) &                   FA_COM_DEFAULT_INIT,  &
(  889) &                   NEW_FA_DEFAULT
(  890) USE LFI_PRECISION
(  891) IMPLICIT NONE
(  892) ! Arguments
(  893) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(  894) INTEGER (KIND=JPLIKB)  KNIMES                                 ! IN   
(  895) INTEGER (KIND=JPLIKB)  KCODE                                  ! IN   
(  896) LOGICAL                LDFATA                                 ! IN   
(  897) CHARACTER (LEN=*)      CDMESS                                 ! IN   
(  898) CHARACTER (LEN=*)      CDNSPR                                 ! IN   
(  899) CHARACTER (LEN=*)      CDACTI                                 ! IN   
(  900) LOGICAL                LDRLFI                                 ! IN   






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 18

(  901) 
(  902) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  903) 
(  904) CALL FAIPAR_MT64                                              &
(  905) &           (FA, KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  906) &           CDACTI, LDRLFI)
(  907) 
(  908) END SUBROUTINE FAIPAR64
(  909) 
(  910) SUBROUTINE FAIPAR                                         &
(  911) &           (KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  912) &           CDACTI, LDRLFI)
(  913) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  914) &                   FA_COM_DEFAULT_INIT,  &
(  915) &                   NEW_FA_DEFAULT
(  916) USE LFI_PRECISION
(  917) IMPLICIT NONE
(  918) ! Arguments
(  919) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  920) INTEGER (KIND=JPLIKM)  KNIMES                                 ! IN   
(  921) INTEGER (KIND=JPLIKM)  KCODE                                  ! IN   
(  922) LOGICAL                LDFATA                                 ! IN   
(  923) CHARACTER (LEN=*)      CDMESS                                 ! IN   
(  924) CHARACTER (LEN=*)      CDNSPR                                 ! IN   
(  925) CHARACTER (LEN=*)      CDACTI                                 ! IN   
(  926) LOGICAL                LDRLFI                                 ! IN   
(  927) 
(  928) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  929) 
(  930) CALL FAIPAR_MT                                                &
(  931) &           (FA, KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  932) &           CDACTI, LDRLFI)
(  933) 
(  934) END SUBROUTINE FAIPAR
(  935) 
(  936) SUBROUTINE FAIPAR_MT                                          &
(  937) &           (FA, KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  938) &           CDACTI, LDRLFI)
(  939) USE FA_MOD, ONLY : FA_COM
(  940) USE LFI_PRECISION
(  941) IMPLICIT NONE
(  942) ! Arguments
(  943) TYPE (FA_COM)          FA                                     ! INOUT
(  944) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  945) INTEGER (KIND=JPLIKM)  KNIMES                                 ! IN   
(  946) INTEGER (KIND=JPLIKM)  KCODE                                  ! IN   
(  947) LOGICAL                LDFATA                                 ! IN   
(  948) CHARACTER (LEN=*)      CDMESS                                 ! IN   
(  949) CHARACTER (LEN=*)      CDNSPR                                 ! IN   
(  950) CHARACTER (LEN=*)      CDACTI                                 ! IN   
(  951) LOGICAL                LDRLFI                                 ! IN   
(  952) ! Local integers
(  953) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  954) INTEGER (KIND=JPLIKB)  INIMES                                 ! IN   
(  955) INTEGER (KIND=JPLIKB)  ICODE                                  ! IN   
(  956) ! Convert arguments
(  957) 
(  958) INUMER     = INT (    KNUMER, JPLIKB)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 19

(  959) INIMES     = INT (    KNIMES, JPLIKB)
(  960) ICODE      = INT (     KCODE, JPLIKB)
(  961) 
(  962) CALL FAIPAR_MT64                                              &
(  963) &           (FA, INUMER, INIMES, ICODE, LDFATA, CDMESS, CDNSPR, &
(  964) &           CDACTI, LDRLFI)
(  965) 
(  966) 
(  967) END SUBROUTINE FAIPAR_MT
(  968) 
(  969) !INTF KNUMER        IN    
(  970) !INTF KNIMES        IN    
(  971) !INTF KCODE         IN    
(  972) !INTF LDFATA        IN    
(  973) !INTF CDMESS        IN    
(  974) !INTF CDNSPR        IN    
(  975) !INTF CDACTI        IN    
(  976) !INTF LDRLFI        IN    














































NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 20

(    1) # 1 "faipar.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAIPAR_MT64                                            &
(    4) &                     (FA,  KNUMER, KNIMES, KCODE, LDFATA, CDMESS,  &
(    5) &                      CDNSPR, CDACTI, LDRLFI )
(    6) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK, ONLY : LHOOK, DR_HOOK
(    9) USE SDL_MOD, ONLY : SDL_SRLABORT
(   10) USE OML_MOD, ONLY : OML_MY_THREAD, OML_IN_PARALLEL
(   11) USE LFI_PRECISION
(   12) IMPLICIT NONE
(   13) !**** 
(   14) !        Ce sous-programme est charge de FAIre PARt des Messages
(   15) !     emis par le logiciel de Fichiers ARPEGE, en faisant si besoin est
(   16) !     l'"ABORT" du programme .
(   17) !**
(   18) !        Arguments : KNUMER ==> Numero de l'unite logique eventuelle;
(   19) !                               ( JPNIIL ==> pas d'unite logique )
(   20) !                    KNIMES ==> Niveau (0,1,2) du message;
(   21) !                    KCODE  ==> Code correspondant a l'action;
(   22) !                    LDFATA ==> Vrai si on doit avorter le programme;
(   23) !                    CDMESS ==> si KNIMES#0, Message a emettre;
(   24) !                    CDNSPR ==> Nom du Sous-Programme appelant;
(   25) !                    CDACTI ==> Nom de l'action d'Entree/Sortie FORTRAN
(   26) !                               (si KCODE >0), sinon fourre-tout !) .
(   27) !                    LDRLFI ==> Vrai si le code-reponse different de 0
(   28) !                               a ete detecte par le logiciel LFI.
(   29) !*
(   30) !     VALEURS POSSIBLES DES CODES-REPONSES DU LOGICIEL FICHIERS ARPEGE
(   31) !
(   32) !      0 ==> Aucune erreur detectee, message informatif.
(   33) !     >0 ==> Il s'agit du code-reponse d'une erreur detectee lors d'un
(   34) !            OPEN, READ, WRITE, CLOSE, ou INQUIRE FORTRAN; voir manuels.
(   35) ! -(1a50)==> Code-reponse renvoye par le logiciel LFI.
(   36) !    -51 ==> Unite logique non ouverte pour le logiciel,
(   37) !             ou bien cadre non defini .
(   38) !    -52 ==> Valeur d'un "NIVEAU" hors plage [0-2] .
(   39) !    -53 ==> *** code-reponse inutilise pour le moment ***.
(   40) !    -54 ==> Changement explicite de mode Multi-Tasking avec au moins 1
(   41) !            unite logique ouverte-risque de problemes (s/p "FARINE") .
(   42) !    -55 ==> Unite logique deja ouverte ou cadre non redefinissable.
(   43) !    -56 ==> Trop d'unites logiques deja ouvertes ou de cadres definis.
(   44) !    -57 ==> Nouveau fichier, et cadre reference non defini au prealable
(   45) !    -58 ==> Fichier preexistant, et cadre reference non compatible .
(   46) !    -59 ==> Redefinition de cadre avec modification de parametre(s),
(   47) !            impossible car il y a au moins un fichier qui s'y rattache.
(   48) !    -60 ==> Un des articles definissant le cadre est manquant.
(   49) !    -61 ==>  "  "      "        "       "  " a une longueur inattendue.
(   50) !    -62 ==> L'article DATE est manquant.
(   51) !    -63 ==> L'article DATE a une longueur inattendue.
(   52) !    -64 ==> Argument d'appel de type ENTIER incorrect .
(   53) !    -65 ==> Argument d'appel de type CARACTERE incorrect .
(   54) !    -66 ==> INCOHERENCE tables, fichier, appels s/p internes, logiciel;
(   55) !            CE CODE EST LE SEUL QUE *FA%NRFAGA* VALANT 2 NE PEUT MASQUER,
(   56) !            ET PROVOQUE DONC UNE ERREUR FATALE DANS TOUS LES CAS.
(   57) !    -67 ==> Le cadre reference a au moins un fichier associe,






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 21

(   58) !            et ne peut donc pas etre supprime.
(   59) !    -68 ==> Nom d'article compose uniquement de BLANCS, non accepte
(   60) !            ( a cause du fonctionnement interne du logiciel LFI ),
(   61) !            ou cadre de nom blanc non accepte (les cadres non definis
(   62) !             sont reperes ainsi dans les tables du logiciel)
(   63) !    -69 ==> La variable CARACTERE donnee en argument est TROP COURTE
(   64) !            pour recevoir le NOM du cadre ou d'identificateur, meme en
(   65) !            supprimant les eventuels caracteres blancs en fin de nom .
(   66) !    -70 ==> Troncature hors plage [1-FA%NXTRON].
(   67) !    -71 ==> Nombre de latitudes de pole a pole hors plage [1-FA%NXLATI].
(   68) !    -72 ==> Nombre de niveaux verticaux hors plage [1-FA%NXNIVV].
(   69) !    -73 ==> Coefficient de dilatation inferieur a 1.
(   70) !    -74 ==> Un des nombres de points par parallele est <= 0 ou depasse
(   71) !            le nombre maximum annonce dans la description du cadre.
(   72) !    -75 ==> Un des nombres de points par parallele est inferieur
(   73) !            a celui qui le precede.
(   74) !    -76 ==> Un des nombres d'onde zonal maxi par parallele depasse
(   75) !            la troncature ou n'est pas positif.
(   76) !    -77 ==> Un des nombres d'onde zonal maxi par parallele est
(   77) !            inferieur a celui qui le precede.
(   78) !    -78 ==> Sur une latitude au moins, le nombre de points est insuffi-
(   79) !            sans vis-a-vis du nombre d'onde zonal maximum.
(   80) !    -79 ==> Inconsistance: le nombre de latitudes (de pole a pole)
(   81) !            est insuffisant vis-a-vis de la troncature.
(   82) !    -80 ==> Une valeur d'une des fonctions de la coordonnee hybride
(   83) !            est en-dehors de l'intervalle [0,1] .
(   84) !    -81 ==> Pour une couche, valeurs inadaptees des fonctions de la
(   85) !            coordonnee hybride.
(   86) !    -82 ==> L'article DATE a un contenu incorrect.
(   87) !    -83 ==> Le nombre maximum de points par parallele est en-dehors de
(   88) !            l'intervalle [1,FA%NXLONG]
(   89) !    -84 ==> Le nombre maximum de points par parallele est insuffisant
(   90) !            vis-a-vis de la troncature.
(   91) !    -85 ==> Fichier en mode creation, donc vide d'articles vis-a-vis
(   92) !            du logiciel (a la description du Cadre pres):
(   93) !            il faut le munir d'une date...
(   94) !    -86 ==> Prefixe et/ou suffixe "blanc" interdit.
(   95) !    -87 ==> Prefixe de champ trop long.
(   96) !    -88 ==> Troncature effective inferieure ou egale a
(   97) !            la sous-troncature "non compactee".
(   98) !    -89 ==> Article de type champ demande inexistant dans le fichier.
(   99) !    -90 ==> L'article de type champ existe, mais est trop long.
(  100) !    -91 ==> En-tete d'article champ incorrect.
(  101) !    -92 ==> L'article demande est en points-de-grille au lieu de
(  102) !            coefficients spectraux, ou vice-versa.
(  103) !    -93 ==> L'article demande est trop COURT sur le fichier.
(  104) !    -94 ==> L'article demande est trop LONG sur le fichier ( si cette
(  105) !            erreur n'est pas fatale, on traite le debut de l'article ).
(  106) !    -95 ==> Incoherence entre entete d'article champ et zone GRIB.
(  107) !    -96 ==> Niveau de codage GRIB trop grand.
(  108) !    -97 ==> Nombre de bits de codage trop grand.
(  109) !    -98 ==> Puissance de laplacien trop grande.
(  110) !    -99 ==> Sous-troncature superieure ou egale a la troncature
(  111) !   -100 ==> Une des lignes trigonometriques definissant le pole de
(  112) !            projection n'est pas dans [-1,1] .
(  113) !   -101 ==> Cosinus et Sinus de la longitude du pole de projection
(  114) !            incoherents.
(  115) !   -102 ==> Le Sinus d'une latitude de la grille n'est pas dans [-1,1].






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 22

(  116) !   -103 ==> Le Sinus d'une latitude est superieur ou egal a celui de
(  117) !            la latitude precedente.
(  118) !   -104 ==> Troncature maxi. incompatible avec cadre(s) deja defini(s).
(  119) !   -105 ==> Nombre maxi. de niveaux verticaux "  "       "      "     .
(  120) !   -106 ==> Nombre maxi. de latitudes pole a pole"       "      "     .
(  121) !   -107 ==> Nombre maxi. de longitudes "      "  "       "      "     .
(  122) !   -108 ==> Pression de reference aberrante.
(  123) !   -109 ==> Type de transformation horizontale hors plage [1-FA%NTYPTX]
(  124) !   -110 ==> Pas d'article "identificateur" (apres ceux du cadre)
(  125) !   -111 ==> Article de nom reserve, a ne pas ecrire ou lire ainsi
(  126) !   -112 ==> Caracteristiques des fichiers vraiment incompatibles,
(  127) !            recopie d'article "champ" impossible.
(  128) !   -113 ==> Sous-troncature implicite superieure ou egale a la
(  129) !            limite usager de troncature.
(  130) !   -114 ==> Ratio des troncatures (version LAM) superieur a 3.
(  131) !            Garde-fou, modifiable dans FARCIS, FACSIM et FAPULA.
(  132) !   -115 ==> (LAM) Le nombre maximum de points par parallele est insuffisant
(  133) !            vis-a-vis de la troncature.
(  134) !   -116 ==> (LAM) Le nombre maximum de points par meridien est insuffisant
(  135) !            vis-a-vis de la troncature.
(  136) !   -117 ==> (LAM) L'indicateur NDOMFP a une valeur hors de [-1,1]
(  137) !   -118 ==> (LAM) L'indice de depart (C+I) en longitude est hors plage [1-KNXLON].
(  138) !   -119 ==> (LAM) L'indice de fin (C+I) en longitude est errone.
(  139) !   -120 ==> (LAM) L'indice de depart (C+I) en latitude est hors plage [1-KNLATI].
(  140) !   -121 ==> (LAM) L'indice de fin (C+I) en latitude est errone.
(  141) !   -122 ==> (LAM) La largeur de la zone de relaxation est trop large en longitude.
(  142) !   -123 ==> (LAM) La largeur de la zone de relaxation est trop large en latitude.
(  143) !   -124 ==> Nombre de bits de codage nul alors qu'un codage est demande
(  144) !   -125 ==> Argument ayant une valeur incorrecte
(  145) !   -126 ==> Detection d'une incoherence dans un controle interne
(  146) !   -127 ==> (LAM) Description incoherente de l'ellipse contenant les troncatures
(  147) !   -128 ==> Message GRIB incorrect dans l'appel a DECF10
(  148) !   -129 ==> Impossible d'encoder ce champ avec ces reglages
(  149) !   -130 ==> Tableau trop court pour encoder ce champ
(  150) ! <-1000 ==> Erreur rapportee par GRIBEX
(  151) !
(  152) # 154 "faipar.F90"
(  154) !
(  155) !
(  156) TYPE(FA_COM) :: FA
(  157) INTEGER (KIND=JPLIKB) KNUMER, KNIMES, KCODE
(  158) !
(  159) INTEGER (KIND=JPLIKB) ILNSPR, ILACTI, ILACT2
(  160) INTEGER (KIND=JPLIKB) ILMESU, ILMESA, INUME1, INUME2
(  161) !
(  162) LOGICAL LDFATA, LDRLFI
(  163) !
(  164) CHARACTER(LEN=*)  CDNSPR
(  165) CHARACTER(LEN=6)  CLJOLI
(  166) CHARACTER(LEN=6)  CLITID
(  167) CHARACTER(LEN=*)  CDMESS
(  168) CHARACTER(LEN=80) CLMESA
(  169) CHARACTER(LEN=*)  CDACTI
(  170) CHARACTER(LEN=FA%JPLMES) CLMESS 
(  171) # 172 "faipar.F90"
(  172) !
(  173) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(  174) IF (LHOOK) CALL DR_HOOK('FAIPAR_MT',0,ZHOOK_HANDLE)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 23

(  175) ILNSPR=MIN (INT (LEN (CDNSPR), JPLIKB),6_JPLIKB )
(  176) ILACTI=MIN (INT (LEN (CDACTI), JPLIKB),8_JPLIKB )
(  177) ILACT2=MIN (INT (LEN (CDACTI), JPLIKB),FA%NCPCAD)
(  178) !
(  179) IF (LDFATA) THEN
(  180)   CLJOLI=' *****'
(  181) ELSEIF (KNIMES.EQ.0.OR.KCODE.NE.0) THEN
(  182)   CLJOLI=' */*/*'
(  183) ELSE
(  184)   CLJOLI=' /////'
(  185) ENDIF
(  186) IF (OML_IN_PARALLEL ()) THEN
(  187)   WRITE (CLITID, '(" @",I4.4)') OML_MY_THREAD ()
(  188) ELSE
(  189)   CLITID=''
(  190) ENDIF
(  191) !
(  192) IF (KNIMES.NE.0) THEN
(  193)   ILMESU=MIN (INT (LEN (CLMESS), JPLIKB)-          &
(  194) &              INT (LEN (CLJOLI), JPLIKB)-ILNSPR-4, &
(  195) &              INT (LEN (CDMESS), JPLIKB))
(  196)   CLMESS=CLJOLI//' '//CDNSPR(1:ILNSPR)//' - '//TRIM (CDMESS(1:ILMESU))//CLITID
(  197)   WRITE (UNIT=FA%NULOUT,FMT='(A)') TRIM (CLMESS)
(  198) ENDIF
(  199) !
(  200) IF (KNIMES.EQ.0.OR.LDFATA) THEN
(  201) !
(  202) !        CONSTITUTION D'UN MESSAGE D'ERREUR AD HOC, EN FONCTION DE KCODE
(  203) !
(  204)   IF (LDRLFI) THEN
(  205)     WRITE (UNIT=CLMESS,FMT='(''CODE-REPONSE DE *'',A6,''* ='',  &
(  206) &           I4,'', UNITE ='',I3)') CDACTI(1:ILACTI),KCODE,KNUMER
(  207) !
(  208)   ELSEIF (KCODE.GT.0) THEN
(  209)     WRITE (UNIT=CLMESS,                                         &
(  210) &           FMT='(''ERREUR "'',A,''" FORTRAN, CODE ='',          &
(  211) &           I4,'', UNITE ='',I3)') CDACTI(1:ILACTI),KCODE,KNUMER
(  212) !
(  213)   ELSEIF (KCODE.EQ.-51) THEN
(  214) !
(  215)     IF (KNUMER.EQ.JPNIIL) THEN
(  216)       CLMESS='CADRE "'//CDACTI(1:ILACT2)//'" NON DEFINI'
(  217)     ELSE
(  218)       WRITE (UNIT=CLMESS,FMT='(''UNITE LOGIQUE'',I3, &
(  219) &             '' NON OUVERTE'')') KNUMER
(  220)     ENDIF
(  221) !
(  222)   ELSEIF (KCODE.EQ.-52) THEN
(  223) !
(  224)     IF (KNUMER.EQ.JPNIIL) THEN
(  225)       CLMESS='PARAMETRE DE NIVEAU "KNIVAU" HORS PLAGE [0-2]'
(  226)     ELSE
(  227)       WRITE (UNIT=CLMESS,FMT=                                      &
(  228) &   '(''NIVEAU DE MESSAGERIE HORS PLAGE [0-2], UNITE'',I3)') KNUMER
(  229)     ENDIF
(  230) !
(  231)   ELSEIF (KCODE.EQ.-53) THEN
(  232)     CLMESS='CADRE "'//CDACTI(1:ILACT2)//  &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 24

(  233) &           '", PARAMETRE(S) INCORRECT(S)'
(  234) !
(  235)   ELSEIF (KCODE.EQ.-54) THEN
(  236)     CLMESS=                                                  &
(  237) &      'CHANGEMENT EXPLICITE MODE MULTI AVEC UNITES OUVERTES'
(  238) !
(  239)   ELSEIF (KCODE.EQ.-55) THEN
(  240) !
(  241)     IF (KNUMER.EQ.JPNIIL) THEN
(  242)       CLMESS='CADRE "'//CDACTI(1:ILACT2)// &
(  243) &                '" NON REDEFINISSABLE'
(  244)     ELSE
(  245)       WRITE (UNIT=CLMESS,FMT='(''UNITE LOGIQUE'',I3, &
(  246) &             '' DEJA OUVERTE'')') KNUMER
(  247)     ENDIF
(  248) !
(  249)   ELSEIF (KCODE.EQ.-56) THEN
(  250) !
(  251)     IF (KNUMER.EQ.JPNIIL) THEN
(  252)       WRITE (UNIT=CLMESS,FMT=                                     &
(  253) &         '(I2,'' CADRES DEFINIS, PAS DE PLACE POUR "'',A,''"'')') &
(  254) &      FA%JPNXCA,CDACTI(1:ILACT2)
(  255)     ELSE
(  256)       WRITE (UNIT=CLMESS,FMT='(I2,                                &
(  257) &           '' UNITES LOGIQUES OUVERTES, PAS DE PLACE POUR'',I3)') &
(  258) &      FA%JPNXFA,KNUMER
(  259)     ENDIF
(  260) !
(  261)   ELSEIF (KCODE.EQ.-57) THEN
(  262)     WRITE (UNIT=CLMESS,                                &
(  263) &           FMT='(''UNITE'',I3,'' A CREER, CADRE "'',A, &
(  264) &           ''" NON DEFINI'')') KNUMER,CDACTI(1:ILACT2)
(  265) !
(  266)   ELSEIF (KCODE.EQ.-58) THEN
(  267)     WRITE (UNIT=CLMESS,                                     &
(  268) &           FMT='(''UNITE'',I3,'' /CADRE PREDEFINI "'',      &
(  269) &           A,''" INCOMPATIBLES'')') KNUMER,CDACTI(1:ILACT2)
(  270) !
(  271)   ELSEIF (KCODE.EQ.-59) THEN
(  272)     CLMESS='CADRE "'//CDACTI(1:ILACT2)//   &
(  273) &           '"  NON MODIFIABLE CAR UTILISE'
(  274) !
(  275)   ELSEIF (KCODE.EQ.-60) THEN
(  276)     WRITE (UNIT=CLMESS,FMT=                                       &
(  277) &       '(''UN ARTICLE DU CADRE EST MANQUANT, UNITE'',I3)') KNUMER
(  278) !
(  279)   ELSEIF (KCODE.EQ.-61) THEN
(  280) !***** FAZZZZ - un article du cadre a une longueur inattendue, uniteiii *****
(  281)     WRITE (UNIT=CLMESS,FMT=                                        &
(  282) &  '(''UN ARTICLE DU CADRE A UNE LONGUEUR INATTENDUE, UNITE'',I3)') &
(  283) &    KNUMER
(  284) !
(  285)   ELSEIF (KCODE.EQ.-62) THEN
(  286)     WRITE (UNIT=CLMESS,FMT=                                    &
(  287) &       '(''PAS D''''ARTICLE DATE SUR L''''UNITE'',I3)') KNUMER
(  288) !
(  289)   ELSEIF (KCODE.EQ.-63) THEN
(  290)     WRITE (UNIT=CLMESS,FMT=                                        &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 25

(  291) &'(''L''''ARTICLE DATE A UNE LONGUEUR INATTENDUE SUR L'''' UNITE'', &
(  292) &    I3)')  KNUMER
(  293) !
(  294)   ELSEIF (KCODE.EQ.-64) THEN
(  295) !
(  296)     IF (CDNSPR.EQ.'FAIENC') THEN
(  297)       WRITE (UNIT=CLMESS,FMT=                             &
(  298) &   '(''NIVEAU VERTICAL HORS LIMITES, UNITE'',I3)') KNUMER
(  299)     ELSEIF (CDNSPR.EQ.'FAISAN'.OR.CDNSPR.EQ.'FALAIS') THEN
(  300)       WRITE (UNIT=CLMESS,FMT=                          &
(  301) &   '(''LONGUEUR D''''ARTICLE <=0, UNITE'',I3)') KNUMER
(  302)     ELSEIF (KNUMER.EQ.JPNIIL) THEN
(  303)       CLMESS='RANG DANS UNE TABLE GLOBALE INCORRECT'
(  304)     ELSE
(  305)       WRITE (UNIT=CLMESS,FMT=                          &
(  306) &   '(''ARGUMENT ENTIER INCORRECT, UNITE'',I3)') KNUMER
(  307)     ENDIF
(  308) !
(  309)   ELSEIF (KCODE.EQ.-65) THEN
(  310) !
(  311)     IF (CDNSPR.EQ.'FAIENC'.OR.CDNSPR.EQ.'FACILE'.OR.   &
(  312) &        CDNSPR.EQ.'FAISAN'.OR.CDNSPR.EQ.'FALAIS') THEN
(  313)       WRITE (UNIT=CLMESS,                              &
(  314) &             FMT='(''NOM D''''ARTICLE INCORRECT OU '', &
(  315) &           ''TROP LONG, UNITE'',I3)') KNUMER
(  316)     ELSEIF (KNUMER.EQ.JPNIIL) THEN
(  317)       CLMESS='NOM DE CADRE INCORRECT OU TROP LONG: "' &
(  318) &             //CDACTI(1:ILACT2)//'"'
(  319)     ELSE
(  320)       WRITE (UNIT=CLMESS,                              &
(  321) &             FMT='(''CHAINE DE CARACTERES INCORRECT'', &
(  322) &           ''E OU TROP LONGUE, UNITE'',I3)') KNUMER
(  323)     ENDIF
(  324) !
(  325)   ELSEIF (KCODE.EQ.-66) THEN
(  326)     WRITE (UNIT=CLMESS,                                        &
(  327) &           FMT='(''INCOHERENCE (TABLES, FICHIER, '',           &
(  328) &           ''APPELS S/P INT. OU FICHIER), UNITE'',I3)') KNUMER
(  329) !
(  330)   ELSEIF (KCODE.EQ.-67) THEN
(  331)     CLMESS='FICHIER ASSOCIE, CADRE"'//CDACTI(1:ILACT2) &
(  332) &           //'" DEVANT SUBSISTER'
(  333) !
(  334)   ELSEIF (KCODE.EQ.-68) THEN
(  335) !
(  336)     IF (KNUMER.EQ.JPNIIL) THEN
(  337)       CLMESS='CADRE DE NOM BLANC NON ACCEPTE'
(  338)     ELSE
(  339)       WRITE (UNIT=CLMESS,FMT=                                      &
(  340) &        '(''ARTICLE DE NOM BLANC NON ACCEPTE, UNITE'',I3)') KNUMER
(  341)     ENDIF
(  342) !
(  343)   ELSEIF (KCODE.EQ.-69) THEN
(  344)     WRITE (UNIT=CLMESS,FMT='(''VARIABLE CARACT. TROP COURTE '', &
(  345) &    ''POUR "'',A,''", UNITE'',I3)')                             &
(  346) &      CDACTI(1:ILACT2),KNUMER
(  347) !
(  348)   ELSEIF (KCODE.EQ.-70) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 26

(  349) !
(  350)     IF (KNUMER.EQ.JPNIIL) THEN
(  351)       WRITE (UNIT=CLMESS,FMT='(''TRONCATURE HORS PLAGE [1-'', &
(  352) &                               I4,''], CADRE "'',A,''"'')')   &
(  353) &      FA%NXTRON,CDACTI(1:ILACT2)
(  354)     ELSE
(  355)       WRITE (UNIT=CLMESS,FMT='(''TRONCATURE HORS PLAGE [1-'', &
(  356) &                      I4,''], UNITE'',I4)') FA%NXTRON,KNUMER
(  357)     ENDIF
(  358) !
(  359)   ELSEIF (KCODE.EQ.-71) THEN
(  360) !
(  361)     IF (KNUMER.EQ.JPNIIL) THEN
(  362)       WRITE (UNIT=CLMESS,FMT='(''NOMBRE LATITUDES HORS [1-'', &
(  363) &             I4,''], CADRE "'',A,''"'')')                     &
(  364) &             FA%NXLATI,CDACTI(1:ILACT2)
(  365)     ELSE
(  366)       WRITE (UNIT=CLMESS,FMT='(''NOMBRE LATITUDES HORS [1-'', &
(  367) &             I4,''], UNITE'',I3)') FA%NXLATI,KNUMER
(  368)     ENDIF
(  369) !
(  370)   ELSEIF (KCODE.EQ.-72) THEN
(  371) !
(  372)     IF (KNUMER.EQ.JPNIIL) THEN
(  373)       WRITE (UNIT=CLMESS,FMT='(''NB. NIV. VERTICAUX HORS [1-'', &
(  374) &             I3,''], CADRE "'',A,''"'')')                       &
(  375) &             FA%NXNIVV,CDACTI(1:ILACT2)
(  376)     ELSE
(  377)       WRITE (UNIT=CLMESS,FMT='(''NB. NIV. VERTICAUX HORS [1-'', &
(  378) &             I3,''], UNITE'',I3)') FA%NXNIVV,KNUMER
(  379)     ENDIF
(  380) !
(  381)   ELSEIF (KCODE.EQ.-73) THEN
(  382) !
(  383)     IF (KNUMER.EQ.JPNIIL) THEN
(  384)       CLMESS='COEFF. DILATATION INFERIEUR A 1, CADRE "' &
(  385) &             //CDACTI(1:ILACT2)//'"'
(  386)     ELSE
(  387)       WRITE (UNIT=CLMESS,FMT=                                      &
(  388) &         '(''COEFF. DILATATION INFERIEUR A 1, UNITE'',I3)') KNUMER
(  389)     ENDIF
(  390) !
(  391)   ELSEIF (KCODE.EQ.-74) THEN
(  392) !
(  393)     IF (KNUMER.EQ.JPNIIL) THEN
(  394)       CLMESS='1 NB. POINTS/PARALL. HORS PLAGE, CADRE "' &
(  395) &             //CDACTI(1:ILACT2)//'"'
(  396)     ELSE
(  397)       WRITE (UNIT=CLMESS,FMT=                                      &
(  398) &         '(''1 NB. POINTS/PARALL. HORS PLAGE, UNITE'',I3)') KNUMER
(  399)     ENDIF
(  400) !
(  401)   ELSEIF (KCODE.EQ.-75) THEN
(  402) !
(  403)     IF (KNUMER.EQ.JPNIIL) THEN
(  404)       CLMESS='LISTE POINTS/PARALL. INCORRECTE, CADRE "' &
(  405) &             //CDACTI(1:ILACT2)//'"'
(  406)     ELSE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 27

(  407)       WRITE (UNIT=CLMESS,FMT=                                      &
(  408) &         '(''LISTE POINTS/PARALL. INCORRECTE, UNITE'',I3)') KNUMER
(  409)     ENDIF
(  410) !
(  411)   ELSEIF (KCODE.EQ.-76) THEN
(  412) !
(  413)     IF (KNUMER.EQ.JPNIIL) THEN
(  414)       CLMESS='1 N.O.Z. MAX/PARALL. HORS PLAGE, CADRE "' &
(  415) &             //CDACTI(1:ILACT2)//'"'
(  416)     ELSE
(  417)       WRITE (UNIT=CLMESS,FMT=                                      &
(  418) &         '(''1 N.O.Z. MAX/PARALL. HORS PLAGE, UNITE'',I3)') KNUMER
(  419)     ENDIF
(  420) !
(  421)   ELSEIF (KCODE.EQ.-77) THEN
(  422) !
(  423)     IF (KNUMER.EQ.JPNIIL) THEN
(  424)       CLMESS='LISTE NOZMAX/PARALL. INCORRECTE, CADRE "' &
(  425) &             //CDACTI(1:ILACT2)//'"'
(  426)     ELSE
(  427)       WRITE (UNIT=CLMESS,FMT=                                      &
(  428) &         '(''LISTE NOZMAX/PARALL. INCORRECTE, UNITE'',I3)') KNUMER
(  429)     ENDIF
(  430) !
(  431)   ELSEIF (KCODE.EQ.-78) THEN
(  432) !
(  433)     IF (KNUMER.EQ.JPNIIL) THEN
(  434)       CLMESS='INCONSISTANCE NOZMAX/NB. POINTS, CADRE "' &
(  435) &             //CDACTI(1:ILACT2)//'"'
(  436)     ELSE
(  437)       WRITE (UNIT=CLMESS,FMT=                                      &
(  438) &         '(''INCONSISTANCE NOZMAX/NB. POINTS, UNITE'',I3)') KNUMER
(  439)     ENDIF
(  440) !
(  441)   ELSEIF (KCODE.EQ.-79) THEN
(  442) !
(  443)     IF (KNUMER.EQ.JPNIIL) THEN
(  444)       CLMESS='INCONSISTANCE NB.LAT/TRONCATURE, CADRE "' &
(  445) &             //CDACTI(1:ILACT2)//'"'
(  446)     ELSE
(  447)       WRITE (UNIT=CLMESS,FMT=                                      &
(  448) &         '(''INCONSISTANCE NB.LAT/TRONCATURE, UNITE'',I3)') KNUMER
(  449)     ENDIF
(  450) !
(  451)   ELSEIF (KCODE.EQ.-80) THEN
(  452) !
(  453)     IF (KNUMER.EQ.JPNIIL) THEN
(  454)       CLMESS='FONC. COORD. HYBRIDE HORS [0,1], CADRE "' &
(  455) &             //CDACTI(1:ILACT2)//'"'
(  456)     ELSE
(  457)       WRITE (UNIT=CLMESS,FMT=                                      &
(  458) &         '(''FONC. COORD. HYBRIDE HORS [0,1], UNITE'',I3)') KNUMER
(  459)     ENDIF
(  460) !
(  461)   ELSEIF (KCODE.EQ.-81) THEN
(  462) !
(  463)     IF (KNUMER.EQ.JPNIIL) THEN
(  464) !***** FAZZZZ - fonc. coord. hybride inadaptees, CADRE "0123456789ABCDEF" *****






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 28

(  465)       CLMESS='FONC. COORD. HYBRIDE INADAPTEES, CADRE "' &
(  466) &             //CDACTI(1:ILACT2)//'"'
(  467)     ELSE
(  468)       WRITE (UNIT=CLMESS,FMT=                                      &
(  469) &         '(''FONC. COORD. HYBRIDE INADAPTEES, UNITE'',I3)') KNUMER
(  470)     ENDIF
(  471) !
(  472)   ELSEIF (KCODE.EQ.-82) THEN
(  473) !
(  474)     IF (CDNSPR.EQ.'FANDAR') THEN
(  475) !***** FAZZZZ - La DATE proposee a un contenu incorrect, UNITEiii *****
(  476)       WRITE (UNIT=CLMESS,FMT=                                     &
(  477) &       '(''LA DATE PROPOSEE A UN CONTENU INCORRECT, UNITE'',I3)') &
(  478) &      KNUMER
(  479)     ELSE
(  480)       WRITE (UNIT=CLMESS,FMT=                                      &
(  481) &       '(''L''''ARTICLE DATE A UN CONTENU INCORRECT, UNITE'',I3)') &
(  482) &      KNUMER
(  483)     ENDIF
(  484) !
(  485)   ELSEIF (KCODE.EQ.-83) THEN
(  486) !
(  487)     IF (KNUMER.EQ.JPNIIL) THEN
(  488) !***** FAZZZZ - Nb. Max. longitu. hors [1-iiii], CADRE "0123456789abcdef" *****
(  489)       WRITE (UNIT=CLMESS,FMT='(''NB. MAX. LONGITU. HORS [1-'', &
(  490) &             I4,''], CADRE "'',A,''"'')')                      &
(  491) &             FA%NXLONG,CDACTI(1:ILACT2)
(  492)     ELSE
(  493)       WRITE (UNIT=CLMESS,FMT='(''NB. MAX. LONGITU. HORS [1-'', &
(  494) &             I4,''], UNITE'',I3)') FA%NXLONG,KNUMER
(  495)     ENDIF
(  496) !
(  497)   ELSEIF (KCODE.EQ.-84) THEN
(  498) !
(  499)     IF (KNUMER.EQ.JPNIIL) THEN
(  500)       CLMESS='INCONSISTANCE KNXLON/TRONCATURE, CADRE "' &
(  501) &             //CDACTI(1:ILACT2)//'"'
(  502)     ELSE
(  503)       WRITE (UNIT=CLMESS,FMT=                                      &
(  504) &         '(''INCONSISTANCE KNXLON/TRONCATURE, UNITE'',I3)') KNUMER
(  505)     ENDIF
(  506) !
(  507)   ELSEIF (KCODE.EQ.-85) THEN
(  508)     WRITE (UNIT=CLMESS,FMT='(''UNITE'',I3,               &
(  509) &           '' PAS ENCORE MUNIE D''''UNE DATE'')') KNUMER
(  510) !
(  511)   ELSEIF (KCODE.EQ.-86) THEN
(  512)     WRITE (UNIT=CLMESS,FMT=                                       &
(  513) &         '(''PREFIXE/SUFFIXE BLANC INTERDIT, UNITE'',I3)') KNUMER
(  514) !
(  515)   ELSEIF (KCODE.EQ.-87) THEN
(  516)     WRITE (UNIT=CLMESS,FMT=                                   &
(  517) &         '(''PREFIXE DE CHAMP TROP LONG, UNITE'',I3)') KNUMER
(  518) !
(  519)   ELSEIF (KCODE.EQ.-88) THEN
(  520)     WRITE (UNIT=CLMESS,FMT=                                        &
(  521) &  '(''TRONCATURE <= SOUS-TRONCATURE "NON COMPACTEE", UNITE'',I3)') &
(  522) &       KNUMER






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 29

(  523) !
(  524)   ELSEIF (KCODE.EQ.-89) THEN
(  525)     WRITE (UNIT=CLMESS,FMT='(''ARTICLE-CHAMP "'',A,              &
(  526) &           ''" INEXISTANT, UNITE'',I3)') CDACTI(1:ILACT2),KNUMER
(  527) !
(  528)   ELSEIF (KCODE.EQ.-90) THEN
(  529)     WRITE (UNIT=CLMESS,FMT='(''ARTICLE-CHAMP "'',A,             &
(  530) &           ''" TROP LONG, UNITE'',I3)') CDACTI(1:ILACT2),KNUMER
(  531) !
(  532)   ELSEIF (KCODE.EQ.-91) THEN
(  533) !***** FAZZZZ - Entete d'article "0123456789abcdef" incorrect, uniteiii *****
(  534)     WRITE (UNIT=CLMESS,FMT='(''ENTETE D''''ARTICLE "'',A,       &
(  535) &           ''" INCORRECT, UNITE'',I3)') CDACTI(1:ILACT2),KNUMER
(  536) !
(  537)   ELSEIF (KCODE.EQ.-92) THEN
(  538) !***** FAZZZZ - Desaccord Csp./pdg., Article "0123456789abcdef", uniteiii *****
(  539)     WRITE (UNIT=CLMESS,                                &
(  540) &           FMT='(''DESACCORD CSP./PDG., ARTICLE "'',A, &
(  541) &           ''" , UNITE'',I3)') CDACTI(1:ILACT2),KNUMER
(  542) !
(  543)   ELSEIF (KCODE.EQ.-93) THEN
(  544)     WRITE (UNIT=CLMESS,FMT='(''ARTICLE "'',A,      &
(  545) &           ''" TROP *COURT* SUR L''''UNITE'',I3)') &
(  546) &        CDACTI(1:ILACT2),KNUMER
(  547) !
(  548)   ELSEIF (KCODE.EQ.-94) THEN
(  549)     WRITE (UNIT=CLMESS,FMT='(''ARTICLE "'',A,     &
(  550) &           ''" TROP *LONG* SUR L''''UNITE'',I3)') &
(  551) &        CDACTI(1:ILACT2),KNUMER
(  552) !
(  553)   ELSEIF (KCODE.EQ.-95) THEN
(  554) !***** FAZZZZ - inconsis entete/GRIB article "0123456789abcdef", uniteiii *****
(  555)     WRITE (UNIT=CLMESS,                                &
(  556) &           FMT='(''INCONSIS ENTETE/GRIB ARTICLE "'',A, &
(  557) &           ''", UNITE'',I3)')                          &
(  558) &        CDACTI(1:ILACT2),KNUMER
(  559) !
(  560)   ELSEIF (KCODE.EQ.-96) THEN
(  561) !
(  562)     IF (KNUMER.EQ.JPNIIL) THEN
(  563)       CLMESS='NIVEAU IMPLICITE DE CODAGE GRIB TROP GRAND'
(  564)     ELSE
(  565)       WRITE (UNIT=CLMESS,FMT=                                     &
(  566) &       '(''NIVEAU DE CODAGE GRIB TROP GRAND, UNITE'',I3)') KNUMER
(  567)     ENDIF
(  568) !
(  569)   ELSEIF (KCODE.EQ.-97) THEN
(  570) !
(  571)     IF (KNUMER.EQ.JPNIIL) THEN
(  572)       WRITE (UNIT=CLMESS,FMT=                                  &
(  573) &  '(''NOMBRE(S) IMPLICITE(S) DE BITS PAR VALEUR > MAXI ('',I2, &
(  574) &      '')'')')   FA%NBIMAX
(  575)     ELSE
(  576)       WRITE (UNIT=CLMESS,FMT=                                  &
(  577) &  '(''NOMBRE(S) DE BITS PAR VALEUR > MAXI ('',I2,''), UNITE'', &
(  578) &      I3)')   FA%NBIMAX,KNUMER
(  579)     ENDIF
(  580) !






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 30

(  581)   ELSEIF (KCODE.EQ.-98) THEN
(  582) !
(  583)     IF (KNUMER.EQ.JPNIIL) THEN
(  584)       CLMESS=                                         &
(  585) &       'PUISSANCE IMPLICITE DE LAPLACIEN TROP GRANDE'
(  586)     ELSE
(  587)       WRITE (UNIT=CLMESS,FMT=                              &
(  588) &     '(''PUISSANCE DE LAPLACIEN TROP GRANDE, UNITE'',I3)') &
(  589) &         KNUMER
(  590)     ENDIF
(  591) !
(  592)   ELSEIF (KCODE.EQ.-99) THEN
(  593) !
(  594)     IF (CDNSPR.EQ.'FARFLU') THEN
(  595)       CLMESS=                                                     &
(  596) &       'TRONCATURE MAX INFERIEURE OU = SOUS-TRONCATURE IMPLICITE'
(  597)     ELSEIF (KNUMER.EQ.JPNIIL) THEN
(  598)       CLMESS=                                                     &
(  599) &       'SS-TRONCATURE IMPLICITE SUPERIEURE OU = A UNE TRONCATURE'
(  600)     ELSE
(  601)       WRITE (UNIT=CLMESS,FMT=                                      &
(  602) &     '(''SOUS-TRONCATURE SUPERIEURE OU = A LA TRONCATURE, UNITE'', &
(  603) &       I3)')  KNUMER
(  604)     ENDIF
(  605) !
(  606)   ELSEIF (KCODE.EQ.-100) THEN
(  607) !
(  608)     IF (KNUMER.EQ.JPNIIL) THEN
(  609)       CLMESS='SIN/COS POLE PROJEC. HORS [-1,1], CADRE "' &
(  610) &             //CDACTI(1:ILACT2)//'"'
(  611)     ELSE
(  612)       WRITE (UNIT=CLMESS,FMT=                                      &
(  613) &     '(''SINUS/COSINUS DU POLE DE PROJECTION HORS [-1,1], UNITE'', &
(  614) &       I3)')  KNUMER
(  615)     ENDIF
(  616) !
(  617)   ELSEIF (KCODE.EQ.-101) THEN
(  618) !
(  619)     IF (KNUMER.EQ.JPNIIL) THEN
(  620)       CLMESS='INCOHERENCE COS/SIN LONGIT. POLE, CADRE "' &
(  621) &             //CDACTI(1:ILACT2)//'"'
(  622)     ELSE
(  623)       WRITE (UNIT=CLMESS,FMT=                                    &
(  624) &     '(''INCOHERENCE COS/SIN LONGITUDE POLE PROJECTION, UNITE'', &
(  625) &       I3)')  KNUMER
(  626)     ENDIF
(  627) !
(  628)   ELSEIF (KCODE.EQ.-102) THEN
(  629) !
(  630)     IF (KNUMER.EQ.JPNIIL) THEN
(  631)       CLMESS='SINUS D''UNE LATITUDE HORS [-1,1], CADRE "' &
(  632) &             //CDACTI(1:ILACT2)//'"'
(  633)     ELSE
(  634)       WRITE (UNIT=CLMESS,FMT=                                      &
(  635) &    '(''SINUS D''''UNE LATITUDE DE LA GRILLE HORS [-1,1], UNITE'', &
(  636) &       I3)')  KNUMER
(  637)     ENDIF
(  638) !






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 31

(  639)   ELSEIF (KCODE.EQ.-103) THEN
(  640) !
(  641)     IF (KNUMER.EQ.JPNIIL) THEN
(  642) !***** FAZZZZ - sinus latitudes non decroissants, cadre '0123456789abcdef" *****
(  643)       CLMESS='SINUS LATITUDES NON DECROISSANTS, CADRE "' &
(  644) &             //CDACTI(1:ILACT2)//'"'
(  645)     ELSE
(  646)       WRITE (UNIT=CLMESS,FMT=                          &
(  647) &    '(''SINUS DES LATITUDES NON DECROISSANTS, UNITE'', &
(  648) &       I3)')  KNUMER
(  649)     ENDIF
(  650) !
(  651)   ELSEIF (KCODE.EQ.-104) THEN
(  652) !
(  653)     CLMESS=                                                      &
(  654) &     'TRONCATURE MAXI INCOMPATIBLE AVEC CADRE(S) DEJA DEFINI(S)'
(  655) !
(  656)   ELSEIF (KCODE.EQ.-105) THEN
(  657) !
(  658)     CLMESS=                                                      &
(  659) &     'NB MAX NIVEAUX VERTICAUX/CADRE(S) DEFINI(S) INCOMPATIBLES'
(  660) !
(  661)   ELSEIF (KCODE.EQ.-106) THEN
(  662) !
(  663)     CLMESS=                                                      &
(  664) &     'NOMBRE MAXI DE LATITUDES/CADRE(S) DEFINI(S) INCOMPATIBLES'
(  665) !
(  666)   ELSEIF (KCODE.EQ.-107) THEN
(  667) !
(  668)     CLMESS=                                                      &
(  669) &     'NOMBRE MAX DE LONGITUDES/CADRE(S) DEFINI(S) INCOMPATIBLES'
(  670) !
(  671)   ELSEIF (KCODE.EQ.-108) THEN
(  672) !
(  673) !***** FAZZZZ - Pression de reference aberrante, cadre "0123456789abcdef" *****
(  674)     IF (KNUMER.EQ.JPNIIL) THEN
(  675)       CLMESS='PRESSION DE REFERENCE ABERRANTE, CADRE "' &
(  676) &             //CDACTI(1:ILACT2)//'"'
(  677)     ELSE
(  678)       WRITE (UNIT=CLMESS,FMT=                                   &
(  679) &             '(''PRESSION DE REFERENCE ABERRANTE, UNITE'',I3)') &
(  680) &          KNUMER
(  681)     ENDIF
(  682) !
(  683)   ELSEIF (KCODE.EQ.-109) THEN
(  684) !
(  685)     IF (KNUMER.EQ.JPNIIL) THEN
(  686)       WRITE (UNIT=CLMESS,                            &
(  687) &             FMT='(''TYPE TRANSFO HORIZ. HORS [1-'', &
(  688) &             I2,''], CADRE "'',A,''"'')')            &
(  689) &             FA%NTYPTX,CDACTI(1:ILACT2)
(  690)     ELSE
(  691)       WRITE (UNIT=CLMESS,                            &
(  692) &             FMT='(''TYPE TRANSFO HORIZ. HORS [1-'', &
(  693) &             I2,''], UNITE'',I3)') FA%NTYPTX,KNUMER
(  694)     ENDIF
(  695) !
(  696)   ELSEIF (KCODE.EQ.-110) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 32

(  697)     WRITE (UNIT=CLMESS,FMT=                                    &
(  698) &    '(''PAS D''''ARTICLE DERRIERE CEUX DU CADRE, UNITE'',I3)') &
(  699) &           KNUMER
(  700) !
(  701)   ELSEIF (KCODE.EQ.-111) THEN
(  702)     WRITE (UNIT=CLMESS,FMT=                                    &
(  703) &    '(''NOM RESERVE, NE PEUT ETRE UTILISE AINSI, UNITE'',I3)') &
(  704) &           KNUMER
(  705) !
(  706)   ELSEIF (KCODE.EQ.-112) THEN
(  707)     INUME1=KNUMER/1000
(  708)     INUME2=MOD (KNUMER,1000_JPLIKB )
(  709)     WRITE (UNIT=CLMESS,                                          &
(  710) &           FMT='(''COPIE DE '''''',A,'''''': UNITES'',           &
(  711) &           I3,'' ET'',I3,'' INCOMPATIBLES'')') CDACTI(1:ILACT2), &
(  712) &      INUME1,INUME2
(  713) !
(  714)   ELSEIF (KCODE.EQ.-113) THEN
(  715)     CLMESS=                                                        &
(  716) &       'SS-TRONCATURE IMPLICITE SUPERIEURE OU = A TRONCATURE MAXI'
(  717) !
(  718)   ELSEIF (KCODE.EQ.-114) THEN
(  719)     CLMESS=                                                       &
(  720) &       'RATIO DES TRONCATURES HORIZ. (VERSION LAM) SUPERIEUR A 3: &
(  721) &        GARDE-FOU, MODIFIABLE DANS FARCIS+FACSIM'
(  722) !
(  723)   ELSEIF (KCODE.EQ.-115) THEN
(  724)     IF (KNUMER.EQ.JPNIIL) THEN
(  725)       CLMESS='KNXLON<(-2*KTYPTR+1), CADRE "' &
(  726) &             //CDACTI(1:ILACT2)//'"'
(  727)     ELSE
(  728)       WRITE (UNIT=CLMESS,FMT=                           &
(  729) &         '(''KNXLON<(-2*KTYPTR+1), UNITE'',I3)') KNUMER
(  730)     ENDIF
(  731) !
(  732)   ELSEIF (KCODE.EQ.-116) THEN
(  733)     IF (KNUMER.EQ.JPNIIL) THEN
(  734)       CLMESS='KNXLON<(2*KTRONC+1), CADRE "' &
(  735) &             //CDACTI(1:ILACT2)//'"'
(  736)     ELSE
(  737)       WRITE (UNIT=CLMESS,FMT=                          &
(  738) &         '(''KNXLON<(2*KTRONC+1), UNITE'',I3)') KNUMER
(  739)     ENDIF
(  740) !
(  741)   ELSEIF (KCODE.EQ.-117) THEN
(  742) !
(  743)     IF (KNUMER.EQ.JPNIIL) THEN
(  744)       CLMESS='INDICATEUR DE DOMAINE HORS [-1,1], CADRE "' &
(  745) &             //CDACTI(1:ILACT2)//'"'
(  746)     ELSE
(  747)       WRITE (UNIT=CLMESS,FMT=                       &
(  748) &    '(''INDICATEUR DE DOMAINE HORS [-1,1], UNITE'', &
(  749) &       I3)')  KNUMER
(  750)     ENDIF
(  751) !
(  752)   ELSEIF (KCODE.EQ.-118) THEN
(  753) !
(  754)     IF (KNUMER.EQ.JPNIIL) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 33

(  755)       CLMESS=                                                    &
(  756) &       'INDICE DE DEPART EN LONGITUDE HORS [1,KNXLON], CADRE "'  &
(  757) &             //CDACTI(1:ILACT2)//'"'
(  758)     ELSE
(  759)       WRITE (UNIT=CLMESS,FMT=                                   &
(  760) &    '(''INDICE DE DEPART EN LONGITUDE HORS [1,KNXLON], UNITE'', &
(  761) &       I3)')  KNUMER
(  762)     ENDIF
(  763) !
(  764)   ELSEIF (KCODE.EQ.-119) THEN
(  765) !
(  766)     IF (KNUMER.EQ.JPNIIL) THEN
(  767)       CLMESS='INDICE DE FIN EN LONGITUDE ERRONE, CADRE "' &
(  768) &             //CDACTI(1:ILACT2)//'"'
(  769)     ELSE
(  770)       WRITE (UNIT=CLMESS,FMT=                       &
(  771) &    '(''INDICE DE FIN EN LONGITUDE ERRONE, UNITE'', &
(  772) &       I3)')  KNUMER
(  773)     ENDIF
(  774) !
(  775)   ELSEIF (KCODE.EQ.-120) THEN
(  776) !
(  777)     IF (KNUMER.EQ.JPNIIL) THEN
(  778)       CLMESS=                                                  &
(  779) &       'INDICE DE DEPART EN LATITUDE HORS [1,KNLATI], CADRE "' &
(  780) &             //CDACTI(1:ILACT2)//'"'
(  781)     ELSE
(  782)       WRITE (UNIT=CLMESS,FMT=                                  &
(  783) &    '(''INDICE DE DEPART EN LATITUDE HORS [1,KNLATI], UNITE'', &
(  784) &       I3)')  KNUMER
(  785)     ENDIF
(  786) !
(  787)   ELSEIF (KCODE.EQ.-121) THEN
(  788) !
(  789)     IF (KNUMER.EQ.JPNIIL) THEN
(  790)       CLMESS='INDICE DE FIN EN LATITUDE ERRONE, CADRE "' &
(  791) &             //CDACTI(1:ILACT2)//'"'
(  792)     ELSE
(  793)       WRITE (UNIT=CLMESS,FMT=                      &
(  794) &    '(''INDICE DE FIN EN LATITUDE ERRONE, UNITE'', &
(  795) &       I3)')  KNUMER
(  796)     ENDIF
(  797) !
(  798)   ELSEIF (KCODE.EQ.-122) THEN
(  799) !
(  800)     IF (KNUMER.EQ.JPNIIL) THEN
(  801)       CLMESS='ZONE DE RELAXATION TROP LARGE '// &
(  802) &                'EN LONGITUDE, CADRE "'         &
(  803) &                //CDACTI(1:ILACT2)//'"'
(  804)     ELSE
(  805)       WRITE (UNIT=CLMESS,FMT=                                &
(  806) &    '(''ZONE DE RELAXATION TROP LARGE EN LONGITUDE, UNITE'', &
(  807) &       I3)')  KNUMER
(  808)     ENDIF
(  809) !
(  810)   ELSEIF (KCODE.EQ.-123) THEN
(  811) !
(  812)     IF (KNUMER.EQ.JPNIIL) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 34

(  813)       CLMESS='ZONE DE RELAXATION TROP LARGE '// &
(  814) &                'EN LATITUDE, CADRE "'          &
(  815) &                //CDACTI(1:ILACT2)//'"'
(  816)     ELSE
(  817)       WRITE (UNIT=CLMESS,FMT=                               &
(  818) &    '(''ZONE DE RELAXATION TROP LARGE EN LATITUDE, UNITE'', &
(  819) &       I3)')  KNUMER
(  820)     ENDIF
(  821) !
(  822)   ELSEIF (KCODE.EQ.-124) THEN
(  823)     CLMESS=                        &
(  824) &       'NB DE BITS POUR CODER NUL'
(  825) !
(  826)   ELSEIF (KCODE.EQ.-125) THEN
(  827)     CLMESS=                                   &
(  828) &       'ARGUMENT AYANT UNE VALEUR INCORRECTE'
(  829) !
(  830)   ELSEIF (KCODE.EQ.-126) THEN
(  831)     CLMESS=                                   &
(  832) &       'INCOHERENCE DANS UN CONTROLE INTERNE'
(  833) !
(  834)   ELSEIF (KCODE.EQ.-127) THEN
(  835)     CLMESS=                                         &
(  836) &       'INCOHERENCE DANS LE CONTROLE DE L''ELLIPSE'
(  837) !
(  838)   ELSEIF (KCODE.EQ.-128) THEN
(  839)     CLMESS=                                 &
(  840) &       'MESSAGE GRIB INCORRECT POUR DECF10'
(  841) !
(  842)   ELSEIF (KCODE.EQ.-129) THEN
(  843)     CLMESS=                                 &
(  844) &       'IMPOSSIBLE D''ENCODER CE CHAMP AVEC CES REGLAGES'
(  845) !
(  846)   ELSEIF (KCODE.EQ.-130) THEN
(  847)     CLMESS=                                 &
(  848) &       'TABLEAU TROP COURT POUR ENCODER CE CHAMP'
(  849) !
(  850)   ELSEIF (KCODE.LT.-1000) THEN
(  851)     CLMESS=                                                       &
(  852) &  'ERREUR RAPPORTEE PAR GRIBEX (cf manuel, avec kret=-krep-1000)'
(  853) !
(  854)   ELSEIF (KNUMER.EQ.JPNIIL) THEN
(  855)     WRITE (UNIT=CLMESS,FMT='(''ERREUR GLOBALE NUMERO'',I6)')  &
(  856) &            KCODE
(  857) !
(  858)   ELSE
(  859)     WRITE (UNIT=CLMESS,FMT='(''ERREUR GRIB'',I6,         &
(  860) &           '' SUR UNITE LOGIQUE'',I3)') 200+KCODE,KNUMER
(  861)   ENDIF
(  862) !
(  863)   ILMESA=INT (LEN (CLMESA), JPLIKB)
(  864)   ILMESU=ILMESA-1-2*INT (LEN (CLJOLI), JPLIKB)-ILNSPR-4
(  865)   CLMESA=CLJOLI//' '//CDNSPR(1:ILNSPR)//' - '//CLMESS(1:ILMESU) &
(  866) &         //CLJOLI
(  867)   CLMESA=TRIM (CLMESA)//CLITID
(  868)   WRITE (UNIT=FA%NULOUT,FMT='(A)') CLMESA
(  869) !
(  870)   WRITE (UNIT=FA%NULOUT,FMT=*) CLMESA






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 35

(  871)   IF (LDFATA.AND.KCODE.NE.0) THEN
(  872)     CALL FLUSH(INT (FA%NULOUT))
(  873)     CALL SDL_SRLABORT
(  874)   ENDIF
(  875) !
(  876) ENDIF
(  877) !
(  878) IF (LHOOK) CALL DR_HOOK('FAIPAR_MT',1,ZHOOK_HANDLE)
(  879) END SUBROUTINE FAIPAR_MT64
(  880) # 883 "faipar.F90"
(  883) ! Oct-2012 P. Marguinaud 64b LFI
(  884) SUBROUTINE FAIPAR64                                       &
(  885) &           (KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  886) &           CDACTI, LDRLFI)
(  887) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  888) &                   FA_COM_DEFAULT_INIT,  &
(  889) &                   NEW_FA_DEFAULT
(  890) USE LFI_PRECISION
(  891) IMPLICIT NONE
(  892) ! Arguments
(  893) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(  894) INTEGER (KIND=JPLIKB)  KNIMES                                 ! IN   
(  895) INTEGER (KIND=JPLIKB)  KCODE                                  ! IN   
(  896) LOGICAL                LDFATA                                 ! IN   
(  897) CHARACTER (LEN=*)      CDMESS                                 ! IN   
(  898) CHARACTER (LEN=*)      CDNSPR                                 ! IN   
(  899) CHARACTER (LEN=*)      CDACTI                                 ! IN   
(  900) LOGICAL                LDRLFI                                 ! IN   
(  901) # 902 "faipar.F90"
(  902) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  903) # 904 "faipar.F90"
(  904) CALL FAIPAR_MT64                                              &
(  905) &           (FA, KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  906) &           CDACTI, LDRLFI)
(  907) # 908 "faipar.F90"
(  908) END SUBROUTINE FAIPAR64
(  909) # 910 "faipar.F90"
(  910) SUBROUTINE FAIPAR                                         &
(  911) &           (KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  912) &           CDACTI, LDRLFI)
(  913) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  914) &                   FA_COM_DEFAULT_INIT,  &
(  915) &                   NEW_FA_DEFAULT
(  916) USE LFI_PRECISION
(  917) IMPLICIT NONE
(  918) ! Arguments
(  919) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  920) INTEGER (KIND=JPLIKM)  KNIMES                                 ! IN   
(  921) INTEGER (KIND=JPLIKM)  KCODE                                  ! IN   
(  922) LOGICAL                LDFATA                                 ! IN   
(  923) CHARACTER (LEN=*)      CDMESS                                 ! IN   
(  924) CHARACTER (LEN=*)      CDNSPR                                 ! IN   
(  925) CHARACTER (LEN=*)      CDACTI                                 ! IN   
(  926) LOGICAL                LDRLFI                                 ! IN   
(  927) # 928 "faipar.F90"
(  928) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  929) # 930 "faipar.F90"
(  930) CALL FAIPAR_MT                                                &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:26      page 36

(  931) &           (FA, KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  932) &           CDACTI, LDRLFI)
(  933) # 934 "faipar.F90"
(  934) END SUBROUTINE FAIPAR
(  935) # 936 "faipar.F90"
(  936) SUBROUTINE FAIPAR_MT                                          &
(  937) &           (FA, KNUMER, KNIMES, KCODE, LDFATA, CDMESS, CDNSPR, &
(  938) &           CDACTI, LDRLFI)
(  939) USE FA_MOD, ONLY : FA_COM
(  940) USE LFI_PRECISION
(  941) IMPLICIT NONE
(  942) ! Arguments
(  943) TYPE (FA_COM)          FA                                     ! INOUT
(  944) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  945) INTEGER (KIND=JPLIKM)  KNIMES                                 ! IN   
(  946) INTEGER (KIND=JPLIKM)  KCODE                                  ! IN   
(  947) LOGICAL                LDFATA                                 ! IN   
(  948) CHARACTER (LEN=*)      CDMESS                                 ! IN   
(  949) CHARACTER (LEN=*)      CDNSPR                                 ! IN   
(  950) CHARACTER (LEN=*)      CDACTI                                 ! IN   
(  951) LOGICAL                LDRLFI                                 ! IN   
(  952) ! Local integers
(  953) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  954) INTEGER (KIND=JPLIKB)  INIMES                                 ! IN   
(  955) INTEGER (KIND=JPLIKB)  ICODE                                  ! IN   
(  956) ! Convert arguments
(  957) # 958 "faipar.F90"
(  958) INUMER     = INT (    KNUMER, JPLIKB)
(  959) INIMES     = INT (    KNIMES, JPLIKB)
(  960) ICODE      = INT (     KCODE, JPLIKB)
(  961) # 962 "faipar.F90"
(  962) CALL FAIPAR_MT64                                              &
(  963) &           (FA, INUMER, INIMES, ICODE, LDFATA, CDMESS, CDNSPR, &
(  964) &           CDACTI, LDRLFI)
(  965) # 967 "faipar.F90"
(  967) END SUBROUTINE FAIPAR_MT
(  968) # 969 "faipar.F90"
(  969) !INTF KNUMER        IN    
(  970) !INTF KNIMES        IN    
(  971) !INTF KCODE         IN    
(  972) !INTF LDFATA        IN    
(  973) !INTF CDMESS        IN    
(  974) !INTF CDNSPR        IN    
(  975) !INTF CDACTI        IN    
(  976) !INTF LDRLFI        IN    
