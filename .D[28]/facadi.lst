


NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: facadi.F90

(    1) ! Feb-2013 P. Marguinaud Use JNGEOM & JNEXPL parameters
(    2) !                        Reallocate cadre when redefinition happens
(    3) ! Oct-2012 P. Marguinaud 64b LFI
(    4) ! Jan-2011 P. Marguinaud Thread-safe FA
(    5) SUBROUTINE FACADI_MT64                                           &
(    6) &                   (FA, KREP, CDNOMC, KTYPTR, PSLAPO, PCLOPO,   &
(    7) &                    PSLOPO,                                     &
(    8) &                    PCODIL, KTRONC, KNLATI, KNXLON, KNLOPA,     &
(    9) &                    KNOZPA, PSINLA, KNIVER, PREFER, PAHYBR,     &
(   10) &                    PBHYBR, LDMODC, LDREDF, KPHASE, KRANGC,     &
(   11) &                    KLNOMC, KGARDE)
(   12) USE FA_MOD, ONLY : FA_COM, NEW_CADRE, FREE_CADRE, JPNIIL, JNGEOM, JNEXPL, NUNDEF
(   13) USE PARKIND1, ONLY : JPRB
(   14) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(   15) USE LFI_PRECISION
(   16) IMPLICIT NONE
(   17) !****
(   18) !        Sous-programme A USAGE INTERNE AU LOGICIEL. Fait la plupart
(   19) !     des controles en vue de Definir un CADre, voire le redefinir.
(   20) !        En mode multi-taches, il doit y avoir verrouillage global
(   21) !     de la zone d'appel au sous-programme.
(   22) !**
(   23) !        Arguments : KREP   ==> Code-reponse du sous-programme;
(   24) !                    CDNOMC ==> Nom symbolique du cadre;
(   25) !  (tous d'Entree)   KTYPTR ==> Type de transformation horizontale;
(   26) !   sauf KRANGC      PSLAPO ==> Sinus de la latitude du pole d'interet;
(   27) !     et KLNOMC)     PCLOPO ==> Cosinus " " longitude "   "       "   ;
(   28) !                    PSLOPO ==> Sinus   " " longitude "   "       "   ;
(   29) !                    PCODIL ==> Coefficient de dilatation;
(   30) !                    KTRONC ==> Troncature;






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 3

(   31) !                    KNLATI ==> Nombre de latitudes (de pole a pole);
(   32) !                    KNXLON ==> Nombre maxi de longitudes par parallele;
(   33) !         (Tableau)  KNLOPA ==> Nombre de longitudes par parallele;
(   34) !                               (du pole nord vers l'equateur seulement)
(   35) !         (Tableau)  KNOZPA ==> Nombre d'onde zonal maxi par parallele;
(   36) !                               (du pole nord vers l'equateur seulement)
(   37) !         (Tableau)  PSINLA ==> Sinus des latitudes de l'hemisphere nord
(   38) !                               (du pole nord vers l'equateur seulement)
(   39) !                    KNIVER ==> Nombre de niveaux verticaux;
(   40) !                    PREFER ==> Pression de reference (facteur multipli-
(   41) !                               catif de la premiere fonction de la
(   42) !                               coordonnee hybride)
(   43) !         (Tableau)  PAHYBR ==> Valeurs de la fonction "A" de la coordo-
(   44) !                               nnee hybride AUX LIMITES DE COUCHES;
(   45) !         (Tableau)  PBHYBR ==> Valeurs de la fonction "B" de la coordo-
(   46) !                               nnee hybride AUX LIMITES DE COUCHES;
(   47) !                    LDMODC ==> Vrai s'il y a modification d'un cadre
(   48) !                               deja defini au prealable;
(   49) !                    LDREDF ==> Vrai s'il y a redefinition d'un cadre
(   50) !                               au sens large du terme (avec ou sans
(   51) !                               modification).
(   52) !                    KPHASE ==> Indique quelle(s) phase(s) du sous-prog.
(   53) !                               on doit executer:
(   54) !                               0 ==> Toutes,
(   55) !                               1 ==> Controle des variables simples,
(   56) !                               2 ==> Controle des tableaux,
(   57) !                               3 ==> Definition du cadre seule.
(   58) !        (Sortie)    KRANGC ==> Rang du cadre dans les tables.
(   59) ! (Sortie si phase 1,KLNOMC ==> Longueur en caracteres du nom de cadre.
(   60) !  Entree sinon ! )
(   61) !                    KGARDE ==> Option de conservation du cadre
(   62) !                               apres la fermeture du dernier fichier
(   63) !                               qui s'y rattache. A noter que lors dans
(   64) !                               le cas d'une definition dynamique de
(   65) !                               cadre (appel par FAITOU, avec KGARDE=1),
(   66) !                               une redefinition de cadre n'est toleree
(   67) !                               qu'a l'identique.
(   68) !
(   69) !     N.B. :    En mode multi-taches, si l'on appelle le sous-programme
(   70) !            avec KPHASE=0 ou KPHASE=3, on doit verrouiller dans le
(   71) !            programme appelant l'appel au sous-programme.
(   72) !               Par ailleurs, LDMODC et LDREDF ne sont definis que si
(   73) !            KPHASE=0 ou KPHASE=3.
(   74) !*
(   75) !        La "redefinition" d'un cadre est possible a l'une de ces
(   76) !     conditions:
(   77) !
(   78) !     - le cadre a ete defini, mais n'a aucun fichier qui s'y rattache;
(   79) !     - le cadre defini a au moins un fichier qui s'y rattache, et les
(   80) !       nouveaux parametres de definition sont identiques a ceux deja
(   81) !       definis (a l'exception de l'option de conservation).
(   82) !
(   83) !
(   84) !
(   85) TYPE(FA_COM) :: FA
(   86) INTEGER (KIND=JPLIKB) KTYPTR, KTRONC, KNLATI
(   87) INTEGER (KIND=JPLIKB) KNXLON, KNIVER, KREP, KPHASE
(   88) INTEGER (KIND=JPLIKB) KRANGC, KLNOMC, KGARDE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 4

(   89) !
(   90) INTEGER (KIND=JPLIKB) KNLOPA (FA%JPXPAH), KNOZPA (FA%JPXIND)
(   91) !
(   92) REAL (KIND=JPDBLR) PSLAPO, PCLOPO, PSLOPO, PCODIL, PREFER
(   93) !
(   94) REAL (KIND=JPDBLR) PSINLA (FA%JPXGEO), PAHYBR (0:KNIVER)
(   95) REAL (KIND=JPDBLR) PBHYBR (0:KNIVER)
(   96) REAL (KIND=JPDBLR) :: ZEPS
(   97) !
(   98) CHARACTER CDNOMC*(*)
(   99) !
(  100) LOGICAL LDREDF, LDMODC
(  101) !
(  102) INTEGER (KIND=JPLIKB) INPAHE
(  103) INTEGER (KIND=JPLIKB) ILCDNO, J, IPREC, ICOMPT, IMSMAX
(  104) INTEGER (KIND=JPLIKB) ISFLAM, JL, IK, INIMES, INUMER, ILNOMC
(  105) !
(  106) INTEGER (KIND=JPLIKB) IESN0 (0:FA%JPXTRO)
(  107) INTEGER (KIND=JPLIKB) IKNTMP(0:FA%JPXTRO)
(  108) INTEGER (KIND=JPLIKB) IKMTMP(0:FA%JPXTRO)
(  109) INTEGER (KIND=JPLIKB) ICPL4N(0:FA%JPXTRO)
(  110) !
(  111) REAL (KIND=JPDBLR) ZMIN, ZPMIN, ZPMAX, ZPMINP, ZPMAXP
(  112) !
(  113) LOGICAL LLMLAM
(  114) LOGICAL LLSURF
(  115) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(  116) CHARACTER(LEN=FA%JPLMES) CLMESS 
(  117) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(  118) LOGICAL                  LLFATA
(  119) 
(  120) !**
(  121) !     0.  -  AIGUILLAGE EN FONCTION DE *KPHASE*.
(  122) !-----------------------------------------------------------------------
(  123) !
(  124) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(  125) IF (LHOOK) CALL DR_HOOK('FACADI_MT',0,ZHOOK_HANDLE)
(  126) 
(  127) 
(  128) CLACTI=''
(  129) KREP=0
(  130) LDREDF=.FALSE.
(  131) LDMODC=.FALSE.
(  132) LLSURF=FA%NCODGRI (13) /= 0
(  133) ZEPS = 10._JPDBLR * EPSILON (1._JPDBLR)
(  134) 
(  135) IF ((FA%NCODGRI (14) /= NUNDEF) .AND. (FA%NCODGRI (14) /= 0)) THEN
(  136)   ZEPS = 10._JPDBLR**FA%NCODGRI (14)
(  137) ENDIF
(  138) !
(  139) IF (KTYPTR .LE. 0 ) THEN
(  140)    LLMLAM = .TRUE.
(  141) ELSE
(  142)    LLMLAM = .FALSE.
(  143) ENDIF
(  144) !
(  145) INPAHE=(1+KNLATI)/2
(  146) !






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 5

(  147) IF (KPHASE.EQ.2) THEN
(  148)   GOTO 200
(  149) ELSEIF (KPHASE.EQ.3) THEN
(  150)   GOTO 300
(  151) ELSEIF (KPHASE.LT.0.OR.KPHASE.GT.3) THEN
(  152)   KREP=-66
(  153)   GOTO 1001
(  154) ENDIF
(  155) !**
(  156) !     1.  -  CONTROLE DES VARIABLES SIMPLES (SYNTAXE ET COHERENCE).
(  157) !            (sauf pression de reference)
(  158) !-----------------------------------------------------------------------
(  159) !
(  160) ILCDNO=INT (LEN (CDNOMC), JPLIKB)
(  161) KLNOMC=1
(  162) !
(  163) IF (ILCDNO.LE.0) THEN
(  164)   KREP=-65
(  165)   GOTO 1001
(  166) ELSEIF (CDNOMC.EQ.' ') THEN
(  167)   KREP=-68
(  168)   GOTO 1001
(  169) ELSEIF (KGARDE.LT.0.OR.KGARDE.GT.2) THEN
(  170)   KREP=-66
(  171)   GOTO 1001
(  172) ENDIF
(  173) !
(  174) DO J=ILCDNO,1,-1
(  175) !
(  176) IF (CDNOMC(J:J).NE.' ') THEN
(  177)   KLNOMC=J
(  178)   GOTO 102
(  179) ENDIF
(  180) !
(  181) ENDDO
(  182) !
(  183) 102 CONTINUE
(  184) !
(  185) IF (KLNOMC.GT.FA%NCPCAD) THEN
(  186)   KREP=-65
(  187)   GOTO 1001
(  188) ENDIF
(  189) !
(  190) IF (KTRONC.LE.0.OR.KTRONC.GT.FA%NXTRON) THEN
(  191)   KREP=-70
(  192)   GOTO 1001
(  193) ELSEIF (KNLATI.LE.0.OR.KNLATI.GT.FA%NXLATI) THEN
(  194)   KREP=-71
(  195)   GOTO 1001
(  196) ELSEIF (KNIVER.LE.0.OR.KNIVER.GT.FA%NXNIVV) THEN
(  197)   KREP=-72
(  198)   GOTO 1001
(  199) ELSEIF (KNXLON.LE.0.OR.KNXLON.GT.FA%NXLONG) THEN
(  200)   KREP=-83
(  201)   GOTO 1001
(  202) ENDIF
(  203) 
(  204) IF (LLMLAM) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 6

(  205) !        IF (-2*KTYPTR+1.GT.KNXLON) THEN
(  206) !          KREP=-115
(  207) !          GOTO 1001
(  208) !        ELSEIF (2*KTRONC+1.GT.KNLATI) THEN
(  209) !          KREP=-116
(  210) !          GOTO 1001
(  211) !        ENDIF
(  212) ELSE
(  213)   IF (PCODIL.LT.1._JPDBLR) THEN
(  214)     KREP=-73
(  215)     GOTO 1001
(  216)   ELSEIF (KTYPTR.LE.0.OR.KTYPTR.GT.FA%NTYPTX) THEN
(  217)     KREP=-109
(  218)     GOTO 1001
(  219)   ELSEIF (MAX(ABS(PSLAPO),ABS(PCLOPO),ABS(PSLOPO)) &
(  220) &          .GT.1._JPDBLR) THEN
(  221)     KREP=-100
(  222)     GOTO 1001
(  223)   ELSEIF (ABS (1._JPDBLR-(PCLOPO**2+PSLOPO**2)) &
(  224) &          .GT.1.E-5_JPDBLR) THEN
(  225)     KREP=-101
(  226)     GOTO 1001
(  227)   ELSEIF (2*KTRONC+1.GT.KNXLON) THEN
(  228)     KREP=-84
(  229)     GOTO 1001
(  230)   ELSEIF (2*KTRONC+1.GT.4*(KNLATI/2)) THEN
(  231) !
(  232) !       Le test ci-dessus est "dur" car il fait l'hypothese que,
(  233) !     dans le cas ou KNLATI est impair, la grille comporte les poles.
(  234) !
(  235)     KREP=-79
(  236)     GOTO 1001
(  237)   ENDIF
(  238) ENDIF
(  239) !
(  240) IF (KPHASE.EQ.1) THEN
(  241)   GOTO 1001
(  242) ENDIF
(  243) !**
(  244) !     2.  -  CONTROLE DES TABLEAUX (SYNTAXE ET COHERENCE).
(  245) !            (et de la pression de reference)
(  246) !-----------------------------------------------------------------------
(  247) !
(  248) 200 CONTINUE
(  249) !
(  250) !
(  251) IF (PREFER.LT.0._JPDBLR.OR.                     &
(  252) &    PREFER.GT.REAL (10*FA%MPRESX, JPDBLR)) THEN
(  253)   KREP=-108
(  254)   GOTO 1001
(  255) ENDIF
(  256) !
(  257) !     No Mount Everest test
(  258) !
(  259) IF (.FALSE. .AND. .NOT. LLSURF) THEN
(  260)   DO J=0,KNIVER
(  261)     IPREC=MAX (0_JPLIKB ,J-1)
(  262)     ZMIN=MIN (PAHYBR(J),PBHYBR(J))






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 7

(  263)     ZPMIN=PREFER*PAHYBR(J)+FA%SPSMIN*PBHYBR(J)
(  264)     ZPMAX=PREFER*PAHYBR(J)+FA%SPSMAX*PBHYBR(J)
(  265)     ZPMINP=PREFER*PAHYBR(IPREC)+FA%SPSMIN*PBHYBR(IPREC)
(  266)     ZPMAXP=PREFER*PAHYBR(IPREC)+FA%SPSMAX*PBHYBR(IPREC)
(  267) !   
(  268)     IF (ZMIN.LT.0._JPDBLR.OR.PBHYBR(J).GT.1._JPDBLR) THEN
(  269)       KREP=-80
(  270)       GOTO 1001
(  271)     ELSEIF (J.NE.0.AND.(PBHYBR(J).LT.PBHYBR(IPREC).OR.         &
(  272)     &                 ZPMIN.LE.ZPMINP.OR.ZPMAX.LE.ZPMAXP)) THEN
(  273)       KREP=-81
(  274)       GOTO 1001
(  275)     ENDIF
(  276) !   
(  277)   ENDDO
(  278) ENDIF ! No Mount Everest test
(  279) !
(  280) IF (.NOT.LLMLAM) THEN
(  281) !
(  282)    DO J=1,INPAHE
(  283)    IPREC=MAX (1_JPLIKB ,J-1)
(  284) !
(  285)    IF (KNLOPA(J).LE.0.OR.KNLOPA(J).GT.KNXLON) THEN
(  286)      KREP=-74
(  287)      GOTO 1001
(  288)    ELSEIF (KNLOPA(J).LT.KNLOPA(IPREC)) THEN
(  289)      KREP=-75
(  290)      GOTO 1001
(  291)    ELSEIF (KNOZPA(J).LT.0.OR.KNOZPA(J).GT.KTRONC) THEN
(  292)      KREP=-76
(  293)      GOTO 1001
(  294)    ELSEIF (KNOZPA(J).LT.KNOZPA(IPREC)) THEN
(  295)      KREP=-77
(  296)      GOTO 1001
(  297)    ELSEIF ((2*KNOZPA(J)+1).GT.KNLOPA(J)) THEN
(  298)      KREP=-78
(  299)      GOTO 1001
(  300)    ELSEIF (ABS (PSINLA(J)).GT.1._JPDBLR) THEN
(  301)      KREP=-102
(  302)      GOTO 1001
(  303)    ELSEIF (PSINLA(J).GE.PSINLA(IPREC).AND.J.NE.1) THEN
(  304)      KREP=-103
(  305)      GOTO 1001
(  306)    ENDIF
(  307) !
(  308)    ENDDO
(  309) !
(  310) ELSE
(  311) !
(  312) !        *****  ERROR HANDLING FOR LAM CASE
(  313) !
(  314)    IF (ABS(KNLOPA(2)).GT.1) THEN
(  315)      KREP=-117
(  316)      GOTO 1001
(  317)    ELSEIF (KNLOPA(3).LE.0.OR.KNLOPA(3).GT.KNXLON) THEN
(  318)      KREP=-118
(  319)      GOTO 1001
(  320)    ELSEIF (KNLOPA(4).LT.KNLOPA(3).OR.KNLOPA(4).GT.KNXLON) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 8

(  321)      KREP=-119
(  322)      GOTO 1001
(  323)    ELSEIF (KNLOPA(5).LE.0.OR.KNLOPA(5).GT.KNLATI) THEN
(  324)      KREP=-120
(  325)      GOTO 1001
(  326)    ELSEIF (KNLOPA(6).LE.KNLOPA(5).OR.KNLOPA(6).GT.KNLATI) THEN
(  327)      KREP=-121
(  328)      GOTO 1001
(  329)    ELSEIF (2*KNLOPA(7).GT.(KNLOPA(4)-KNLOPA(3))) THEN
(  330)      KREP=-122
(  331)      GOTO 1001
(  332)    ELSEIF (2*KNLOPA(8).GT.(KNLOPA(6)-KNLOPA(5))) THEN
(  333)      KREP=-123
(  334)      GOTO 1001
(  335)    ENDIF
(  336) !
(  337) ENDIF
(  338) !
(  339) IF (KPHASE.EQ.2) GOTO 1001
(  340) !**
(  341) !     3.  -  CONTROLES LIES A LA DEFINITION DU CADRE PROPREMENT DITE.
(  342) !-----------------------------------------------------------------------
(  343) !
(  344) 300 CONTINUE
(  345) !
(  346) !        Le nom de cadre specifie est-il deja defini ?
(  347) !
(  348) CALL FANUCA_MT64                          &
(  349) &               (FA, CDNOMC,KRANGC,.FALSE.)
(  350) LDREDF=KRANGC.NE.0
(  351) IF (LDREDF) GOTO 500
(  352) !
(  353) !        En arrivant ici, il s'agit donc d'un nouveau cadre.
(  354) !
(  355) IF (FA%NCADEF.GE.FA%JPNXCA) THEN
(  356) !
(  357) !        Trop de cadres deja definis pour en stocker un de plus.
(  358) !
(  359)   KREP=-56
(  360)   GOTO 1001
(  361) ENDIF
(  362) !
(  363) !       Recherche d'un emplacement disponible dans les tables de cadres,
(  364) !     lequel devrait en bonne logique exister...
(  365) !
(  366) DO J=1,FA%JPNXCA
(  367) !
(  368) IF (FA%CADRE(J)%CNOMCA.EQ.' ') THEN
(  369)   KRANGC=J
(  370)   GOTO 303
(  371) ENDIF
(  372) !
(  373) ENDDO
(  374) !
(  375) KREP=-66
(  376) GOTO 1001
(  377) !
(  378) 303 CONTINUE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 9

(  379) !
(  380) !           Nouveau cadre, mise a jour des tables partagees de cadres.
(  381) !
(  382) FA%NCADEF=FA%NCADEF+1
(  383) FA%NCAIND(FA%NCADEF)=KRANGC
(  384) 
(  385) 400 CONTINUE
(  386) 
(  387) CALL NEW_CADRE (FA%CADRE(KRANGC), KTYPTR, KNLATI, KTRONC, KNIVER, LLSURF)
(  388) 
(  389) FA%CADRE(KRANGC)%CNOMCA=CDNOMC
(  390) FA%CADRE(KRANGC)%NLCCAD=KLNOMC
(  391) !**
(  392) !     4.  -  STOCKAGE DES PARAMETRES DU CADRE (NOUVEAU, OU REDEFINI).
(  393) !-----------------------------------------------------------------------
(  394) !
(  395) FA%CADRE(KRANGC)%NULCAD=0
(  396) FA%CADRE(KRANGC)%NTYPTR=KTYPTR
(  397) FA%CADRE(KRANGC)%MTRONC=KTRONC
(  398) IF (LLSURF) THEN
(  399)   FA%CADRE(KRANGC)%NNIVER=1
(  400) ELSE
(  401)   FA%CADRE(KRANGC)%NNIVER=KNIVER
(  402) ENDIF
(  403) FA%CADRE(KRANGC)%NLATIT=KNLATI
(  404) FA%CADRE(KRANGC)%NXLOPA=KNXLON
(  405) FA%CADRE(KRANGC)%SSLAPO=PSLAPO
(  406) FA%CADRE(KRANGC)%SCLOPO=PCLOPO
(  407) FA%CADRE(KRANGC)%SSLOPO=PSLOPO
(  408) FA%CADRE(KRANGC)%SCODIL=PCODIL
(  409) FA%CADRE(KRANGC)%SPREFE=PREFER
(  410) !
(  411) FA%CADRE(KRANGC)%LIMLAM=LLMLAM
(  412) FA%CADRE(KRANGC)%NSFLAM=0
(  413) !
(  414) IF (.NOT.LDREDF.OR.KGARDE.NE.1) FA%CADRE(KRANGC)%NGARDE=KGARDE
(  415) !
(  416) IF (.NOT.LLMLAM) THEN
(  417)    ICOMPT=0
(  418) !
(  419)    DO J=1,INPAHE
(  420)    ICOMPT=ICOMPT+KNLOPA(J)
(  421)    FA%CADRE(KRANGC)%NLOPAR(J)=KNLOPA(J)
(  422)    FA%CADRE(KRANGC)%NOZPAR(J)=KNOZPA(J)
(  423)    FA%CADRE(KRANGC)%SINLAT(J)=PSINLA(J)
(  424)    ENDDO
(  425) !
(  426)    IF (KNLATI.EQ.2*INPAHE) THEN
(  427)      FA%CADRE(KRANGC)%NVAPDG=ICOMPT*2
(  428)    ELSE
(  429)      FA%CADRE(KRANGC)%NVAPDG=ICOMPT*2-KNLOPA(INPAHE)
(  430)    ENDIF
(  431) !
(  432) ELSE
(  433) ! *****  CALCULATION OF KNOZPA(), THEN ALSO SETTING OF FACOM1-TABLES  *****
(  434) !
(  435)    IMSMAX = -KTYPTR
(  436)    ISFLAM = 0






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 10

(  437)    CALL ELLIPS64  (KTRONC,IMSMAX,IKNTMP,IKMTMP)
(  438) !DP      CALL ELLIPS(IMSMAX,KTRONC,IKNTMP,IKMTMP)
(  439) !
(  440) ! Initialisation de FA%NOMPAR (du module FAMODU)
(  441) !
(  442) !NEC$ NOVECTOR
(  443)    FA%CADRE(KRANGC)%NOMPAR(2) = 0
(  444)    DO JL=0,IMSMAX
(  445)      FA%CADRE(KRANGC)%NOMPAR(2*JL+3) = FA%CADRE(KRANGC)%NOMPAR(2*JL+2) + 1
(  446)      FA%CADRE(KRANGC)%NOMPAR(2*JL+4) = FA%CADRE(KRANGC)%NOMPAR(2*JL+3) &
(  447) &                             + 4*(IKNTMP(JL)+1) -1
(  448)    ENDDO
(  449)    FA%CADRE(KRANGC)%NOMPAR(1) = KTRONC
(  450)    FA%CADRE(KRANGC)%NOMPAR(2) = IMSMAX
(  451) !
(  452)    DO JL=0,KTRONC
(  453)       IK=IKMTMP(JL)
(  454) !DP         IK=IKNTMP(JL)
(  455)       ICPL4N(JL)=4*(IK+1)
(  456)       ISFLAM = ISFLAM + 4*(IK+1)
(  457)    ENDDO
(  458) !
(  459)    IESN0(0)=1
(  460) !
(  461)    DO J=1,KTRONC
(  462)       IESN0(J)=IESN0(J-1)+ICPL4N(J-1)
(  463)    ENDDO
(  464) !
(  465) ! -----  NOW SETTING OF TABLES  -----
(  466)    DO J=1,JNEXPL
(  467)       FA%CADRE(KRANGC)%NLOPAR(J)=KNLOPA(J)
(  468)    ENDDO
(  469)    FA%CADRE(KRANGC)%SINLAT = 0._JPDBLR
(  470)    DO J=1,JNGEOM
(  471)       FA%CADRE(KRANGC)%SINLAT(J)=PSINLA(J)
(  472)    ENDDO
(  473)    FA%CADRE(KRANGC)%NOZPAR(1)=KTRONC
(  474)    FA%CADRE(KRANGC)%NOZPAR(2)=IMSMAX
(  475) !
(  476)    DO J=0,KTRONC
(  477)       FA%CADRE(KRANGC)%NOZPAR(2*J+3)=IESN0(J)
(  478)       FA%CADRE(KRANGC)%NOZPAR(2*J+4)=IESN0(J)+ICPL4N(J)-1
(  479)    ENDDO
(  480)   
(  481)    IF (FA%CADRE(KRANGC)%NOZPAR(2*KTRONC+4).NE. &
(  482) &       FA%CADRE(KRANGC)%NOMPAR(2*IMSMAX+4))    &
(  483) &   THEN
(  484)      KREP=-127
(  485)      GOTO 1001
(  486)    ENDIF
(  487) !
(  488)    FA%CADRE(KRANGC)%NSFLAM=ISFLAM
(  489) !
(  490) ! *****  DETERMINATION OF FA%NVAPDG()  *****
(  491) !
(  492)    FA%CADRE(KRANGC)%NVAPDG=KNLATI*KNXLON
(  493) !
(  494) ENDIF






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 11

(  495) !
(  496) IF (LLSURF) THEN
(  497)   FA%CADRE(KRANGC)%SFOHYB = 0._JPDBLR
(  498) ELSE
(  499)   DO J=0,KNIVER
(  500)     FA%CADRE(KRANGC)%SFOHYB(1,J)=PAHYBR(J)
(  501)     FA%CADRE(KRANGC)%SFOHYB(2,J)=PBHYBR(J)
(  502)   ENDDO
(  503) ENDIF
(  504) !
(  505) GOTO 1001
(  506) !**
(  507) !     5.  -  TENTATIVE DE REDEFINITION D'UN CADRE. CONTROLES AD HOC.
(  508) !-----------------------------------------------------------------------
(  509) !
(  510) 500 CONTINUE
(  511) !
(  512) IF (FA%CADRE(KRANGC)%MTRONC.NE.KTRONC)                    GOTO 505
(  513) IF (FA%CADRE(KRANGC)%NNIVER.NE.KNIVER .AND. .NOT. LLSURF) GOTO 505
(  514) IF (FA%CADRE(KRANGC)%NLATIT.NE.KNLATI)                    GOTO 505
(  515) IF (FA%CADRE(KRANGC)%NXLOPA.NE.KNXLON)                    GOTO 505
(  516) IF (FA%CADRE(KRANGC)%NTYPTR.NE.KTYPTR)                    GOTO 505
(  517) IF (ABS(REAL (FA%CADRE(KRANGC)%SSLAPO, JPDBLR)-REAL (PSLAPO, JPDBLR))>ZEPS) GOTO 505
(  518) IF (ABS(REAL (FA%CADRE(KRANGC)%SCLOPO, JPDBLR)-REAL (PCLOPO, JPDBLR))>ZEPS) GOTO 505
(  519) IF (ABS(REAL (FA%CADRE(KRANGC)%SSLOPO, JPDBLR)-REAL (PSLOPO, JPDBLR))>ZEPS) GOTO 505
(  520) IF (ABS(REAL (FA%CADRE(KRANGC)%SCODIL, JPDBLR)-REAL (PCODIL, JPDBLR))>ZEPS) GOTO 505
(  521) IF (ABS(REAL (FA%CADRE(KRANGC)%SPREFE, JPDBLR)-REAL (PREFER, JPDBLR))>ZEPS) GOTO 505
(  522) !
(  523) IF (.NOT.LLMLAM) THEN
(  524)    DO J=1,INPAHE
(  525)      IF (FA%CADRE(KRANGC)%NLOPAR(J).NE.KNLOPA(J))        GOTO 505
(  526)      IF (FA%CADRE(KRANGC)%NOZPAR(J).NE.KNOZPA(J))        GOTO 505
(  527)      IF (ABS(REAL (FA%CADRE(KRANGC)%SINLAT(J), JPDBLR) - REAL (PSINLA(J), JPDBLR))>ZEPS) GOTO 505
(  528)    ENDDO
(  529) ELSE
(  530)    DO J=1,JNEXPL
(  531)       IF (FA%CADRE(KRANGC)%NLOPAR(J).NE.KNLOPA(J))THEN
(  532)          IF (.NOT. LLSURF .AND. J/=2)  GOTO 505
(  533)       ENDIF
(  534)    ENDDO
(  535)    DO J=1,JNGEOM
(  536)    IF (ABS(REAL (FA%CADRE(KRANGC)%SINLAT(J), JPDBLR)-REAL (PSINLA(J), JPDBLR))>ZEPS) GOTO 505
(  537)    ENDDO
(  538) ENDIF
(  539) !
(  540) IF (.NOT. LLSURF) THEN
(  541)   DO J=0,KNIVER
(  542)   IF (ABS(REAL (FA%CADRE(KRANGC)%SFOHYB(1,J), JPDBLR)-REAL (PAHYBR(J), JPDBLR))>ZEPS) GOTO 505
(  543)   IF (ABS(REAL (FA%CADRE(KRANGC)%SFOHYB(2,J), JPDBLR)-REAL (PBHYBR(J), JPDBLR))>ZEPS) GOTO 505
(  544)   ENDDO
(  545) ENDIF
(  546) !
(  547) !        Si on arrive ici, il y a redefinition a l'identique,
(  548) !     du moins pour les parametres numeriques.
(  549) !        L'option de conservation du cadre peut, elle, etre modifiee
(  550) !     dans le cas d'une definition non dynamique.
(  551) !
(  552) IF (KGARDE.NE.1) FA%CADRE(KRANGC)%NGARDE=KGARDE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 12

(  553) GOTO 1001
(  554) !
(  555) 505 CONTINUE
(  556) LDMODC=.TRUE.
(  557) !
(  558) !        Il y a donc redefinition avec changement de parametre(s),
(  559) !     ce qui n'est possible que s'il n'y a pas de fichier rattache,
(  560) !     et s'il ne s'agit pas d'une definition dynamique de cadre
(  561) !     (appel par FAITOU avec KGARDE=1).
(  562) !
(  563) IF (KGARDE.EQ.1) THEN
(  564)   KREP=-58
(  565) ELSEIF (FA%CADRE(KRANGC)%NULCAD.NE.0) THEN
(  566)   KREP=-59
(  567) ELSE
(  568)   CALL FREE_CADRE (FA%CADRE(KRANGC))
(  569)   GOTO 400
(  570) ENDIF
(  571) !**
(  572) !    10.  -  PHASE TERMINALE : MESSAGERIE EVENTUELLE,
(  573) !            VIA LE sous-programme "FAIPAR" .
(  574) !-----------------------------------------------------------------------
(  575) !
(  576) 1001 CONTINUE
(  577) !
(  578) LLFATA=KREP.NE.0.AND.FA%NRFAGA.NE.2
(  579) !
(  580) IF (FA%LFAMOP.OR.LLFATA) THEN
(  581)   INIMES=2
(  582)   CLNSPR='FACADI'
(  583)   INUMER=JPNIIL
(  584) !
(  585)   IF (KREP.EQ.-65.AND.ILCDNO.LE.0) THEN
(  586)     ILNOMC=8
(  587)     CLACTI(1:ILNOMC)=FA%CHAINC(:ILNOMC)
(  588)   ELSE
(  589)     ILNOMC=MIN (KLNOMC,FA%NCPCAD,INT (LEN (CLACTI), JPLIKB))
(  590)     CLACTI(1:ILNOMC)=CDNOMC(1:ILNOMC)
(  591)   ENDIF
(  592) !
(  593)   WRITE (UNIT=CLMESS,FMT='(''ARGUM.SIMPLES='',I4,'','''''',A, &
(  594) &         '''''''',4('','',F7.4),4('','',I4),'','',F10.3,      &
(  595) &         2('','',L1),2('','',I2),'','',I3,'','',I1)')         &
(  596) &  KREP,CLACTI(1:ILNOMC),PSLAPO,PCLOPO,PSLOPO,PCODIL,          &
(  597) &  KTRONC,KNLATI,KNXLON,KNIVER,PREFER,LDMODC,LDREDF,KPHASE,    &
(  598) &  KRANGC,KLNOMC,KGARDE
(  599)   CALL FAIPAR_MT64                                      &
(  600) &                 (FA, INUMER,INIMES,KREP,LLFATA,CLMESS, &
(  601) &                  CLNSPR,CLACTI(1:ILNOMC),.FALSE.)
(  602) ELSEIF (KTRONC.LE.FA%NSTROI.AND.(KPHASE.EQ.0.OR.KPHASE.EQ.1)) THEN
(  603)   INIMES=1
(  604)   CLNSPR='FACADI'
(  605)   INUMER=JPNIIL
(  606)   ILNOMC=MIN (KLNOMC,FA%NCPCAD)
(  607)   WRITE (UNIT=CLMESS,                                              &
(  608) &         FMT='(''TRONCATURE ('',I2,'') INFERIEURE '',              &
(  609) & ''OU EGALE A LA SOUS-TRONCATURE "NON COMPACTEE" IMPLICITE ('',I2, &
(  610) & ''), CADRE '''''',A,'''''''')') KTRONC,FA%NSTROI,CDNOMC(1:ILNOMC)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 13

(  611)   CALL FAIPAR_MT64                                      &
(  612) &                 (FA, INUMER,INIMES,KREP,.FALSE.,CLMESS, &
(  613) &                  CLNSPR,CLACTI,.FALSE.)
(  614) ENDIF
(  615) !
(  616) IF (LHOOK) CALL DR_HOOK('FACADI_MT',1,ZHOOK_HANDLE)
(  617) END SUBROUTINE FACADI_MT64
(  618) 
























































NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 14

(    1) # 1 "facadi.F90"
(    1) ! Feb-2013 P. Marguinaud Use JNGEOM & JNEXPL parameters
(    2) !                        Reallocate cadre when redefinition happens
(    3) ! Oct-2012 P. Marguinaud 64b LFI
(    4) ! Jan-2011 P. Marguinaud Thread-safe FA
(    5) SUBROUTINE FACADI_MT64                                           &
(    6) &                   (FA, KREP, CDNOMC, KTYPTR, PSLAPO, PCLOPO,   &
(    7) &                    PSLOPO,                                     &
(    8) &                    PCODIL, KTRONC, KNLATI, KNXLON, KNLOPA,     &
(    9) &                    KNOZPA, PSINLA, KNIVER, PREFER, PAHYBR,     &
(   10) &                    PBHYBR, LDMODC, LDREDF, KPHASE, KRANGC,     &
(   11) &                    KLNOMC, KGARDE)
(   12) USE FA_MOD, ONLY : FA_COM, NEW_CADRE, FREE_CADRE, JPNIIL, JNGEOM, JNEXPL, NUNDEF
(   13) USE PARKIND1, ONLY : JPRB
(   14) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(   15) USE LFI_PRECISION
(   16) IMPLICIT NONE
(   17) !****
(   18) !        Sous-programme A USAGE INTERNE AU LOGICIEL. Fait la plupart
(   19) !     des controles en vue de Definir un CADre, voire le redefinir.
(   20) !        En mode multi-taches, il doit y avoir verrouillage global
(   21) !     de la zone d'appel au sous-programme.
(   22) !**
(   23) !        Arguments : KREP   ==> Code-reponse du sous-programme;
(   24) !                    CDNOMC ==> Nom symbolique du cadre;
(   25) !  (tous d'Entree)   KTYPTR ==> Type de transformation horizontale;
(   26) !   sauf KRANGC      PSLAPO ==> Sinus de la latitude du pole d'interet;
(   27) !     et KLNOMC)     PCLOPO ==> Cosinus " " longitude "   "       "   ;
(   28) !                    PSLOPO ==> Sinus   " " longitude "   "       "   ;
(   29) !                    PCODIL ==> Coefficient de dilatation;
(   30) !                    KTRONC ==> Troncature;
(   31) !                    KNLATI ==> Nombre de latitudes (de pole a pole);
(   32) !                    KNXLON ==> Nombre maxi de longitudes par parallele;
(   33) !         (Tableau)  KNLOPA ==> Nombre de longitudes par parallele;
(   34) !                               (du pole nord vers l'equateur seulement)
(   35) !         (Tableau)  KNOZPA ==> Nombre d'onde zonal maxi par parallele;
(   36) !                               (du pole nord vers l'equateur seulement)
(   37) !         (Tableau)  PSINLA ==> Sinus des latitudes de l'hemisphere nord
(   38) !                               (du pole nord vers l'equateur seulement)
(   39) !                    KNIVER ==> Nombre de niveaux verticaux;
(   40) !                    PREFER ==> Pression de reference (facteur multipli-
(   41) !                               catif de la premiere fonction de la
(   42) !                               coordonnee hybride)
(   43) !         (Tableau)  PAHYBR ==> Valeurs de la fonction "A" de la coordo-
(   44) !                               nnee hybride AUX LIMITES DE COUCHES;
(   45) !         (Tableau)  PBHYBR ==> Valeurs de la fonction "B" de la coordo-
(   46) !                               nnee hybride AUX LIMITES DE COUCHES;
(   47) !                    LDMODC ==> Vrai s'il y a modification d'un cadre
(   48) !                               deja defini au prealable;
(   49) !                    LDREDF ==> Vrai s'il y a redefinition d'un cadre
(   50) !                               au sens large du terme (avec ou sans
(   51) !                               modification).
(   52) !                    KPHASE ==> Indique quelle(s) phase(s) du sous-prog.
(   53) !                               on doit executer:
(   54) !                               0 ==> Toutes,
(   55) !                               1 ==> Controle des variables simples,
(   56) !                               2 ==> Controle des tableaux,
(   57) !                               3 ==> Definition du cadre seule.






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 15

(   58) !        (Sortie)    KRANGC ==> Rang du cadre dans les tables.
(   59) ! (Sortie si phase 1,KLNOMC ==> Longueur en caracteres du nom de cadre.
(   60) !  Entree sinon ! )
(   61) !                    KGARDE ==> Option de conservation du cadre
(   62) !                               apres la fermeture du dernier fichier
(   63) !                               qui s'y rattache. A noter que lors dans
(   64) !                               le cas d'une definition dynamique de
(   65) !                               cadre (appel par FAITOU, avec KGARDE=1),
(   66) !                               une redefinition de cadre n'est toleree
(   67) !                               qu'a l'identique.
(   68) !
(   69) !     N.B. :    En mode multi-taches, si l'on appelle le sous-programme
(   70) !            avec KPHASE=0 ou KPHASE=3, on doit verrouiller dans le
(   71) !            programme appelant l'appel au sous-programme.
(   72) !               Par ailleurs, LDMODC et LDREDF ne sont definis que si
(   73) !            KPHASE=0 ou KPHASE=3.
(   74) !*
(   75) !        La "redefinition" d'un cadre est possible a l'une de ces
(   76) !     conditions:
(   77) !
(   78) !     - le cadre a ete defini, mais n'a aucun fichier qui s'y rattache;
(   79) !     - le cadre defini a au moins un fichier qui s'y rattache, et les
(   80) !       nouveaux parametres de definition sont identiques a ceux deja
(   81) !       definis (a l'exception de l'option de conservation).
(   82) !
(   83) !
(   84) !
(   85) TYPE(FA_COM) :: FA
(   86) INTEGER (KIND=JPLIKB) KTYPTR, KTRONC, KNLATI
(   87) INTEGER (KIND=JPLIKB) KNXLON, KNIVER, KREP, KPHASE
(   88) INTEGER (KIND=JPLIKB) KRANGC, KLNOMC, KGARDE
(   89) !
(   90) INTEGER (KIND=JPLIKB) KNLOPA (FA%JPXPAH), KNOZPA (FA%JPXIND)
(   91) !
(   92) REAL (KIND=JPDBLR) PSLAPO, PCLOPO, PSLOPO, PCODIL, PREFER
(   93) !
(   94) REAL (KIND=JPDBLR) PSINLA (FA%JPXGEO), PAHYBR (0:KNIVER)
(   95) REAL (KIND=JPDBLR) PBHYBR (0:KNIVER)
(   96) REAL (KIND=JPDBLR) :: ZEPS
(   97) !
(   98) CHARACTER CDNOMC*(*)
(   99) !
(  100) LOGICAL LDREDF, LDMODC
(  101) !
(  102) INTEGER (KIND=JPLIKB) INPAHE
(  103) INTEGER (KIND=JPLIKB) ILCDNO, J, IPREC, ICOMPT, IMSMAX
(  104) INTEGER (KIND=JPLIKB) ISFLAM, JL, IK, INIMES, INUMER, ILNOMC
(  105) !
(  106) INTEGER (KIND=JPLIKB) IESN0 (0:FA%JPXTRO)
(  107) INTEGER (KIND=JPLIKB) IKNTMP(0:FA%JPXTRO)
(  108) INTEGER (KIND=JPLIKB) IKMTMP(0:FA%JPXTRO)
(  109) INTEGER (KIND=JPLIKB) ICPL4N(0:FA%JPXTRO)
(  110) !
(  111) REAL (KIND=JPDBLR) ZMIN, ZPMIN, ZPMAX, ZPMINP, ZPMAXP
(  112) !
(  113) LOGICAL LLMLAM
(  114) LOGICAL LLSURF
(  115) CHARACTER(LEN=FA%JPXNOM) CLACTI 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 16

(  116) CHARACTER(LEN=FA%JPLMES) CLMESS 
(  117) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(  118) LOGICAL                  LLFATA
(  119) # 120 "facadi.F90"
(  120) !**
(  121) !     0.  -  AIGUILLAGE EN FONCTION DE *KPHASE*.
(  122) !-----------------------------------------------------------------------
(  123) !
(  124) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(  125) IF (LHOOK) CALL DR_HOOK('FACADI_MT',0,ZHOOK_HANDLE)
(  126) # 128 "facadi.F90"
(  128) CLACTI=''
(  129) KREP=0
(  130) LDREDF=.FALSE.
(  131) LDMODC=.FALSE.
(  132) LLSURF=FA%NCODGRI (13) /= 0
(  133) ZEPS = 10._JPDBLR * EPSILON (1._JPDBLR)
(  134) # 135 "facadi.F90"
(  135) IF ((FA%NCODGRI (14) /= NUNDEF) .AND. (FA%NCODGRI (14) /= 0)) THEN
(  136)   ZEPS = 10._JPDBLR**FA%NCODGRI (14)
(  137) ENDIF
(  138) !
(  139) IF (KTYPTR .LE. 0 ) THEN
(  140)    LLMLAM = .TRUE.
(  141) ELSE
(  142)    LLMLAM = .FALSE.
(  143) ENDIF
(  144) !
(  145) INPAHE=(1+KNLATI)/2
(  146) !
(  147) IF (KPHASE.EQ.2) THEN
(  148)   GOTO 200
(  149) ELSEIF (KPHASE.EQ.3) THEN
(  150)   GOTO 300
(  151) ELSEIF (KPHASE.LT.0.OR.KPHASE.GT.3) THEN
(  152)   KREP=-66
(  153)   GOTO 1001
(  154) ENDIF
(  155) !**
(  156) !     1.  -  CONTROLE DES VARIABLES SIMPLES (SYNTAXE ET COHERENCE).
(  157) !            (sauf pression de reference)
(  158) !-----------------------------------------------------------------------
(  159) !
(  160) ILCDNO=INT (LEN (CDNOMC), JPLIKB)
(  161) KLNOMC=1
(  162) !
(  163) IF (ILCDNO.LE.0) THEN
(  164)   KREP=-65
(  165)   GOTO 1001
(  166) ELSEIF (CDNOMC.EQ.' ') THEN
(  167)   KREP=-68
(  168)   GOTO 1001
(  169) ELSEIF (KGARDE.LT.0.OR.KGARDE.GT.2) THEN
(  170)   KREP=-66
(  171)   GOTO 1001
(  172) ENDIF
(  173) !
(  174) DO J=ILCDNO,1,-1






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 17

(  175) !
(  176) IF (CDNOMC(J:J).NE.' ') THEN
(  177)   KLNOMC=J
(  178)   GOTO 102
(  179) ENDIF
(  180) !
(  181) ENDDO
(  182) !
(  183) 102 CONTINUE
(  184) !
(  185) IF (KLNOMC.GT.FA%NCPCAD) THEN
(  186)   KREP=-65
(  187)   GOTO 1001
(  188) ENDIF
(  189) !
(  190) IF (KTRONC.LE.0.OR.KTRONC.GT.FA%NXTRON) THEN
(  191)   KREP=-70
(  192)   GOTO 1001
(  193) ELSEIF (KNLATI.LE.0.OR.KNLATI.GT.FA%NXLATI) THEN
(  194)   KREP=-71
(  195)   GOTO 1001
(  196) ELSEIF (KNIVER.LE.0.OR.KNIVER.GT.FA%NXNIVV) THEN
(  197)   KREP=-72
(  198)   GOTO 1001
(  199) ELSEIF (KNXLON.LE.0.OR.KNXLON.GT.FA%NXLONG) THEN
(  200)   KREP=-83
(  201)   GOTO 1001
(  202) ENDIF
(  203) # 204 "facadi.F90"
(  204) IF (LLMLAM) THEN
(  205) !        IF (-2*KTYPTR+1.GT.KNXLON) THEN
(  206) !          KREP=-115
(  207) !          GOTO 1001
(  208) !        ELSEIF (2*KTRONC+1.GT.KNLATI) THEN
(  209) !          KREP=-116
(  210) !          GOTO 1001
(  211) !        ENDIF
(  212) ELSE
(  213)   IF (PCODIL.LT.1._JPDBLR) THEN
(  214)     KREP=-73
(  215)     GOTO 1001
(  216)   ELSEIF (KTYPTR.LE.0.OR.KTYPTR.GT.FA%NTYPTX) THEN
(  217)     KREP=-109
(  218)     GOTO 1001
(  219)   ELSEIF (MAX(ABS(PSLAPO),ABS(PCLOPO),ABS(PSLOPO)) &
(  220) &          .GT.1._JPDBLR) THEN
(  221)     KREP=-100
(  222)     GOTO 1001
(  223)   ELSEIF (ABS (1._JPDBLR-(PCLOPO**2+PSLOPO**2)) &
(  224) &          .GT.1.E-5_JPDBLR) THEN
(  225)     KREP=-101
(  226)     GOTO 1001
(  227)   ELSEIF (2*KTRONC+1.GT.KNXLON) THEN
(  228)     KREP=-84
(  229)     GOTO 1001
(  230)   ELSEIF (2*KTRONC+1.GT.4*(KNLATI/2)) THEN
(  231) !
(  232) !       Le test ci-dessus est "dur" car il fait l'hypothese que,






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 18

(  233) !     dans le cas ou KNLATI est impair, la grille comporte les poles.
(  234) !
(  235)     KREP=-79
(  236)     GOTO 1001
(  237)   ENDIF
(  238) ENDIF
(  239) !
(  240) IF (KPHASE.EQ.1) THEN
(  241)   GOTO 1001
(  242) ENDIF
(  243) !**
(  244) !     2.  -  CONTROLE DES TABLEAUX (SYNTAXE ET COHERENCE).
(  245) !            (et de la pression de reference)
(  246) !-----------------------------------------------------------------------
(  247) !
(  248) 200 CONTINUE
(  249) !
(  250) !
(  251) IF (PREFER.LT.0._JPDBLR.OR.                     &
(  252) &    PREFER.GT.REAL (10*FA%MPRESX, JPDBLR)) THEN
(  253)   KREP=-108
(  254)   GOTO 1001
(  255) ENDIF
(  256) !
(  257) !     No Mount Everest test
(  258) !
(  259) IF (.FALSE. .AND. .NOT. LLSURF) THEN
(  260)   DO J=0,KNIVER
(  261)     IPREC=MAX (0_JPLIKB ,J-1)
(  262)     ZMIN=MIN (PAHYBR(J),PBHYBR(J))
(  263)     ZPMIN=PREFER*PAHYBR(J)+FA%SPSMIN*PBHYBR(J)
(  264)     ZPMAX=PREFER*PAHYBR(J)+FA%SPSMAX*PBHYBR(J)
(  265)     ZPMINP=PREFER*PAHYBR(IPREC)+FA%SPSMIN*PBHYBR(IPREC)
(  266)     ZPMAXP=PREFER*PAHYBR(IPREC)+FA%SPSMAX*PBHYBR(IPREC)
(  267) !   
(  268)     IF (ZMIN.LT.0._JPDBLR.OR.PBHYBR(J).GT.1._JPDBLR) THEN
(  269)       KREP=-80
(  270)       GOTO 1001
(  271)     ELSEIF (J.NE.0.AND.(PBHYBR(J).LT.PBHYBR(IPREC).OR.         &
(  272)     &                 ZPMIN.LE.ZPMINP.OR.ZPMAX.LE.ZPMAXP)) THEN
(  273)       KREP=-81
(  274)       GOTO 1001
(  275)     ENDIF
(  276) !   
(  277)   ENDDO
(  278) ENDIF ! No Mount Everest test
(  279) !
(  280) IF (.NOT.LLMLAM) THEN
(  281) !
(  282)    DO J=1,INPAHE
(  283)    IPREC=MAX (1_JPLIKB ,J-1)
(  284) !
(  285)    IF (KNLOPA(J).LE.0.OR.KNLOPA(J).GT.KNXLON) THEN
(  286)      KREP=-74
(  287)      GOTO 1001
(  288)    ELSEIF (KNLOPA(J).LT.KNLOPA(IPREC)) THEN
(  289)      KREP=-75
(  290)      GOTO 1001






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 19

(  291)    ELSEIF (KNOZPA(J).LT.0.OR.KNOZPA(J).GT.KTRONC) THEN
(  292)      KREP=-76
(  293)      GOTO 1001
(  294)    ELSEIF (KNOZPA(J).LT.KNOZPA(IPREC)) THEN
(  295)      KREP=-77
(  296)      GOTO 1001
(  297)    ELSEIF ((2*KNOZPA(J)+1).GT.KNLOPA(J)) THEN
(  298)      KREP=-78
(  299)      GOTO 1001
(  300)    ELSEIF (ABS (PSINLA(J)).GT.1._JPDBLR) THEN
(  301)      KREP=-102
(  302)      GOTO 1001
(  303)    ELSEIF (PSINLA(J).GE.PSINLA(IPREC).AND.J.NE.1) THEN
(  304)      KREP=-103
(  305)      GOTO 1001
(  306)    ENDIF
(  307) !
(  308)    ENDDO
(  309) !
(  310) ELSE
(  311) !
(  312) !        *****  ERROR HANDLING FOR LAM CASE
(  313) !
(  314)    IF (ABS(KNLOPA(2)).GT.1) THEN
(  315)      KREP=-117
(  316)      GOTO 1001
(  317)    ELSEIF (KNLOPA(3).LE.0.OR.KNLOPA(3).GT.KNXLON) THEN
(  318)      KREP=-118
(  319)      GOTO 1001
(  320)    ELSEIF (KNLOPA(4).LT.KNLOPA(3).OR.KNLOPA(4).GT.KNXLON) THEN
(  321)      KREP=-119
(  322)      GOTO 1001
(  323)    ELSEIF (KNLOPA(5).LE.0.OR.KNLOPA(5).GT.KNLATI) THEN
(  324)      KREP=-120
(  325)      GOTO 1001
(  326)    ELSEIF (KNLOPA(6).LE.KNLOPA(5).OR.KNLOPA(6).GT.KNLATI) THEN
(  327)      KREP=-121
(  328)      GOTO 1001
(  329)    ELSEIF (2*KNLOPA(7).GT.(KNLOPA(4)-KNLOPA(3))) THEN
(  330)      KREP=-122
(  331)      GOTO 1001
(  332)    ELSEIF (2*KNLOPA(8).GT.(KNLOPA(6)-KNLOPA(5))) THEN
(  333)      KREP=-123
(  334)      GOTO 1001
(  335)    ENDIF
(  336) !
(  337) ENDIF
(  338) !
(  339) IF (KPHASE.EQ.2) GOTO 1001
(  340) !**
(  341) !     3.  -  CONTROLES LIES A LA DEFINITION DU CADRE PROPREMENT DITE.
(  342) !-----------------------------------------------------------------------
(  343) !
(  344) 300 CONTINUE
(  345) !
(  346) !        Le nom de cadre specifie est-il deja defini ?
(  347) !
(  348) CALL FANUCA_MT64                          &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 20

(  349) &               (FA, CDNOMC,KRANGC,.FALSE.)
(  350) LDREDF=KRANGC.NE.0
(  351) IF (LDREDF) GOTO 500
(  352) !
(  353) !        En arrivant ici, il s'agit donc d'un nouveau cadre.
(  354) !
(  355) IF (FA%NCADEF.GE.FA%JPNXCA) THEN
(  356) !
(  357) !        Trop de cadres deja definis pour en stocker un de plus.
(  358) !
(  359)   KREP=-56
(  360)   GOTO 1001
(  361) ENDIF
(  362) !
(  363) !       Recherche d'un emplacement disponible dans les tables de cadres,
(  364) !     lequel devrait en bonne logique exister...
(  365) !
(  366) DO J=1,FA%JPNXCA
(  367) !
(  368) IF (FA%CADRE(J)%CNOMCA.EQ.' ') THEN
(  369)   KRANGC=J
(  370)   GOTO 303
(  371) ENDIF
(  372) !
(  373) ENDDO
(  374) !
(  375) KREP=-66
(  376) GOTO 1001
(  377) !
(  378) 303 CONTINUE
(  379) !
(  380) !           Nouveau cadre, mise a jour des tables partagees de cadres.
(  381) !
(  382) FA%NCADEF=FA%NCADEF+1
(  383) FA%NCAIND(FA%NCADEF)=KRANGC
(  384) # 385 "facadi.F90"
(  385) 400 CONTINUE
(  386) # 387 "facadi.F90"
(  387) CALL NEW_CADRE (FA%CADRE(KRANGC), KTYPTR, KNLATI, KTRONC, KNIVER, LLSURF)
(  388) # 389 "facadi.F90"
(  389) FA%CADRE(KRANGC)%CNOMCA=CDNOMC
(  390) FA%CADRE(KRANGC)%NLCCAD=KLNOMC
(  391) !**
(  392) !     4.  -  STOCKAGE DES PARAMETRES DU CADRE (NOUVEAU, OU REDEFINI).
(  393) !-----------------------------------------------------------------------
(  394) !
(  395) FA%CADRE(KRANGC)%NULCAD=0
(  396) FA%CADRE(KRANGC)%NTYPTR=KTYPTR
(  397) FA%CADRE(KRANGC)%MTRONC=KTRONC
(  398) IF (LLSURF) THEN
(  399)   FA%CADRE(KRANGC)%NNIVER=1
(  400) ELSE
(  401)   FA%CADRE(KRANGC)%NNIVER=KNIVER
(  402) ENDIF
(  403) FA%CADRE(KRANGC)%NLATIT=KNLATI
(  404) FA%CADRE(KRANGC)%NXLOPA=KNXLON
(  405) FA%CADRE(KRANGC)%SSLAPO=PSLAPO
(  406) FA%CADRE(KRANGC)%SCLOPO=PCLOPO






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 21

(  407) FA%CADRE(KRANGC)%SSLOPO=PSLOPO
(  408) FA%CADRE(KRANGC)%SCODIL=PCODIL
(  409) FA%CADRE(KRANGC)%SPREFE=PREFER
(  410) !
(  411) FA%CADRE(KRANGC)%LIMLAM=LLMLAM
(  412) FA%CADRE(KRANGC)%NSFLAM=0
(  413) !
(  414) IF (.NOT.LDREDF.OR.KGARDE.NE.1) FA%CADRE(KRANGC)%NGARDE=KGARDE
(  415) !
(  416) IF (.NOT.LLMLAM) THEN
(  417)    ICOMPT=0
(  418) !
(  419)    DO J=1,INPAHE
(  420)    ICOMPT=ICOMPT+KNLOPA(J)
(  421)    FA%CADRE(KRANGC)%NLOPAR(J)=KNLOPA(J)
(  422)    FA%CADRE(KRANGC)%NOZPAR(J)=KNOZPA(J)
(  423)    FA%CADRE(KRANGC)%SINLAT(J)=PSINLA(J)
(  424)    ENDDO
(  425) !
(  426)    IF (KNLATI.EQ.2*INPAHE) THEN
(  427)      FA%CADRE(KRANGC)%NVAPDG=ICOMPT*2
(  428)    ELSE
(  429)      FA%CADRE(KRANGC)%NVAPDG=ICOMPT*2-KNLOPA(INPAHE)
(  430)    ENDIF
(  431) !
(  432) ELSE
(  433) ! *****  CALCULATION OF KNOZPA(), THEN ALSO SETTING OF FACOM1-TABLES  *****
(  434) !
(  435)    IMSMAX = -KTYPTR
(  436)    ISFLAM = 0
(  437)    CALL ELLIPS64  (KTRONC,IMSMAX,IKNTMP,IKMTMP)
(  438) !DP      CALL ELLIPS(IMSMAX,KTRONC,IKNTMP,IKMTMP)
(  439) !
(  440) ! Initialisation de FA%NOMPAR (du module FAMODU)
(  441) !
(  442) !NEC$ NOVECTOR
(  443)    FA%CADRE(KRANGC)%NOMPAR(2) = 0
(  444)    DO JL=0,IMSMAX
(  445)      FA%CADRE(KRANGC)%NOMPAR(2*JL+3) = FA%CADRE(KRANGC)%NOMPAR(2*JL+2) + 1
(  446)      FA%CADRE(KRANGC)%NOMPAR(2*JL+4) = FA%CADRE(KRANGC)%NOMPAR(2*JL+3) &
(  447) &                             + 4*(IKNTMP(JL)+1) -1
(  448)    ENDDO
(  449)    FA%CADRE(KRANGC)%NOMPAR(1) = KTRONC
(  450)    FA%CADRE(KRANGC)%NOMPAR(2) = IMSMAX
(  451) !
(  452)    DO JL=0,KTRONC
(  453)       IK=IKMTMP(JL)
(  454) !DP         IK=IKNTMP(JL)
(  455)       ICPL4N(JL)=4*(IK+1)
(  456)       ISFLAM = ISFLAM + 4*(IK+1)
(  457)    ENDDO
(  458) !
(  459)    IESN0(0)=1
(  460) !
(  461)    DO J=1,KTRONC
(  462)       IESN0(J)=IESN0(J-1)+ICPL4N(J-1)
(  463)    ENDDO
(  464) !






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 22

(  465) ! -----  NOW SETTING OF TABLES  -----
(  466)    DO J=1,JNEXPL
(  467)       FA%CADRE(KRANGC)%NLOPAR(J)=KNLOPA(J)
(  468)    ENDDO
(  469)    FA%CADRE(KRANGC)%SINLAT = 0._JPDBLR
(  470)    DO J=1,JNGEOM
(  471)       FA%CADRE(KRANGC)%SINLAT(J)=PSINLA(J)
(  472)    ENDDO
(  473)    FA%CADRE(KRANGC)%NOZPAR(1)=KTRONC
(  474)    FA%CADRE(KRANGC)%NOZPAR(2)=IMSMAX
(  475) !
(  476)    DO J=0,KTRONC
(  477)       FA%CADRE(KRANGC)%NOZPAR(2*J+3)=IESN0(J)
(  478)       FA%CADRE(KRANGC)%NOZPAR(2*J+4)=IESN0(J)+ICPL4N(J)-1
(  479)    ENDDO
(  480)   
(  481)    IF (FA%CADRE(KRANGC)%NOZPAR(2*KTRONC+4).NE. &
(  482) &       FA%CADRE(KRANGC)%NOMPAR(2*IMSMAX+4))    &
(  483) &   THEN
(  484)      KREP=-127
(  485)      GOTO 1001
(  486)    ENDIF
(  487) !
(  488)    FA%CADRE(KRANGC)%NSFLAM=ISFLAM
(  489) !
(  490) ! *****  DETERMINATION OF FA%NVAPDG()  *****
(  491) !
(  492)    FA%CADRE(KRANGC)%NVAPDG=KNLATI*KNXLON
(  493) !
(  494) ENDIF
(  495) !
(  496) IF (LLSURF) THEN
(  497)   FA%CADRE(KRANGC)%SFOHYB = 0._JPDBLR
(  498) ELSE
(  499)   DO J=0,KNIVER
(  500)     FA%CADRE(KRANGC)%SFOHYB(1,J)=PAHYBR(J)
(  501)     FA%CADRE(KRANGC)%SFOHYB(2,J)=PBHYBR(J)
(  502)   ENDDO
(  503) ENDIF
(  504) !
(  505) GOTO 1001
(  506) !**
(  507) !     5.  -  TENTATIVE DE REDEFINITION D'UN CADRE. CONTROLES AD HOC.
(  508) !-----------------------------------------------------------------------
(  509) !
(  510) 500 CONTINUE
(  511) !
(  512) IF (FA%CADRE(KRANGC)%MTRONC.NE.KTRONC)                    GOTO 505
(  513) IF (FA%CADRE(KRANGC)%NNIVER.NE.KNIVER .AND. .NOT. LLSURF) GOTO 505
(  514) IF (FA%CADRE(KRANGC)%NLATIT.NE.KNLATI)                    GOTO 505
(  515) IF (FA%CADRE(KRANGC)%NXLOPA.NE.KNXLON)                    GOTO 505
(  516) IF (FA%CADRE(KRANGC)%NTYPTR.NE.KTYPTR)                    GOTO 505
(  517) IF (ABS(REAL (FA%CADRE(KRANGC)%SSLAPO, JPDBLR)-REAL (PSLAPO, JPDBLR))>ZEPS) GOTO 505
(  518) IF (ABS(REAL (FA%CADRE(KRANGC)%SCLOPO, JPDBLR)-REAL (PCLOPO, JPDBLR))>ZEPS) GOTO 505
(  519) IF (ABS(REAL (FA%CADRE(KRANGC)%SSLOPO, JPDBLR)-REAL (PSLOPO, JPDBLR))>ZEPS) GOTO 505
(  520) IF (ABS(REAL (FA%CADRE(KRANGC)%SCODIL, JPDBLR)-REAL (PCODIL, JPDBLR))>ZEPS) GOTO 505
(  521) IF (ABS(REAL (FA%CADRE(KRANGC)%SPREFE, JPDBLR)-REAL (PREFER, JPDBLR))>ZEPS) GOTO 505
(  522) !






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 23

(  523) IF (.NOT.LLMLAM) THEN
(  524)    DO J=1,INPAHE
(  525)      IF (FA%CADRE(KRANGC)%NLOPAR(J).NE.KNLOPA(J))        GOTO 505
(  526)      IF (FA%CADRE(KRANGC)%NOZPAR(J).NE.KNOZPA(J))        GOTO 505
(  527)      IF (ABS(REAL (FA%CADRE(KRANGC)%SINLAT(J), JPDBLR) - REAL (PSINLA(J), JPDBLR))>ZEPS) GOTO 505
(  528)    ENDDO
(  529) ELSE
(  530)    DO J=1,JNEXPL
(  531)       IF (FA%CADRE(KRANGC)%NLOPAR(J).NE.KNLOPA(J))THEN
(  532)          IF (.NOT. LLSURF .AND. J/=2)  GOTO 505
(  533)       ENDIF
(  534)    ENDDO
(  535)    DO J=1,JNGEOM
(  536)    IF (ABS(REAL (FA%CADRE(KRANGC)%SINLAT(J), JPDBLR)-REAL (PSINLA(J), JPDBLR))>ZEPS) GOTO 505
(  537)    ENDDO
(  538) ENDIF
(  539) !
(  540) IF (.NOT. LLSURF) THEN
(  541)   DO J=0,KNIVER
(  542)   IF (ABS(REAL (FA%CADRE(KRANGC)%SFOHYB(1,J), JPDBLR)-REAL (PAHYBR(J), JPDBLR))>ZEPS) GOTO 505
(  543)   IF (ABS(REAL (FA%CADRE(KRANGC)%SFOHYB(2,J), JPDBLR)-REAL (PBHYBR(J), JPDBLR))>ZEPS) GOTO 505
(  544)   ENDDO
(  545) ENDIF
(  546) !
(  547) !        Si on arrive ici, il y a redefinition a l'identique,
(  548) !     du moins pour les parametres numeriques.
(  549) !        L'option de conservation du cadre peut, elle, etre modifiee
(  550) !     dans le cas d'une definition non dynamique.
(  551) !
(  552) IF (KGARDE.NE.1) FA%CADRE(KRANGC)%NGARDE=KGARDE
(  553) GOTO 1001
(  554) !
(  555) 505 CONTINUE
(  556) LDMODC=.TRUE.
(  557) !
(  558) !        Il y a donc redefinition avec changement de parametre(s),
(  559) !     ce qui n'est possible que s'il n'y a pas de fichier rattache,
(  560) !     et s'il ne s'agit pas d'une definition dynamique de cadre
(  561) !     (appel par FAITOU avec KGARDE=1).
(  562) !
(  563) IF (KGARDE.EQ.1) THEN
(  564)   KREP=-58
(  565) ELSEIF (FA%CADRE(KRANGC)%NULCAD.NE.0) THEN
(  566)   KREP=-59
(  567) ELSE
(  568)   CALL FREE_CADRE (FA%CADRE(KRANGC))
(  569)   GOTO 400
(  570) ENDIF
(  571) !**
(  572) !    10.  -  PHASE TERMINALE : MESSAGERIE EVENTUELLE,
(  573) !            VIA LE sous-programme "FAIPAR" .
(  574) !-----------------------------------------------------------------------
(  575) !
(  576) 1001 CONTINUE
(  577) !
(  578) LLFATA=KREP.NE.0.AND.FA%NRFAGA.NE.2
(  579) !
(  580) IF (FA%LFAMOP.OR.LLFATA) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:07      page 24

(  581)   INIMES=2
(  582)   CLNSPR='FACADI'
(  583)   INUMER=JPNIIL
(  584) !
(  585)   IF (KREP.EQ.-65.AND.ILCDNO.LE.0) THEN
(  586)     ILNOMC=8
(  587)     CLACTI(1:ILNOMC)=FA%CHAINC(:ILNOMC)
(  588)   ELSE
(  589)     ILNOMC=MIN (KLNOMC,FA%NCPCAD,INT (LEN (CLACTI), JPLIKB))
(  590)     CLACTI(1:ILNOMC)=CDNOMC(1:ILNOMC)
(  591)   ENDIF
(  592) !
(  593)   WRITE (UNIT=CLMESS,FMT='(''ARGUM.SIMPLES='',I4,'','''''',A, &
(  594) &         '''''''',4('','',F7.4),4('','',I4),'','',F10.3,      &
(  595) &         2('','',L1),2('','',I2),'','',I3,'','',I1)')         &
(  596) &  KREP,CLACTI(1:ILNOMC),PSLAPO,PCLOPO,PSLOPO,PCODIL,          &
(  597) &  KTRONC,KNLATI,KNXLON,KNIVER,PREFER,LDMODC,LDREDF,KPHASE,    &
(  598) &  KRANGC,KLNOMC,KGARDE
(  599)   CALL FAIPAR_MT64                                      &
(  600) &                 (FA, INUMER,INIMES,KREP,LLFATA,CLMESS, &
(  601) &                  CLNSPR,CLACTI(1:ILNOMC),.FALSE.)
(  602) ELSEIF (KTRONC.LE.FA%NSTROI.AND.(KPHASE.EQ.0.OR.KPHASE.EQ.1)) THEN
(  603)   INIMES=1
(  604)   CLNSPR='FACADI'
(  605)   INUMER=JPNIIL
(  606)   ILNOMC=MIN (KLNOMC,FA%NCPCAD)
(  607)   WRITE (UNIT=CLMESS,                                              &
(  608) &         FMT='(''TRONCATURE ('',I2,'') INFERIEURE '',              &
(  609) & ''OU EGALE A LA SOUS-TRONCATURE "NON COMPACTEE" IMPLICITE ('',I2, &
(  610) & ''), CADRE '''''',A,'''''''')') KTRONC,FA%NSTROI,CDNOMC(1:ILNOMC)
(  611)   CALL FAIPAR_MT64                                      &
(  612) &                 (FA, INUMER,INIMES,KREP,.FALSE.,CLMESS, &
(  613) &                  CLNSPR,CLACTI,.FALSE.)
(  614) ENDIF
(  615) !
(  616) IF (LHOOK) CALL DR_HOOK('FACADI_MT',1,ZHOOK_HANDLE)
(  617) END SUBROUTINE FACADI_MT64
