


NVFORTRAN (Version     23.1)          02/24/2023  13:54:18      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:18      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: facile.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FACILE_MT64                                             &
(    4) &                     (FA,  KREP, KNUMER, CDPREF, KNIVAU, CDSUFF,  &
(    5) &                      KCHAMP, LDCOSP)
(    6) USE FA_MOD, ONLY : FA_COM, FAGR1TAB
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !      Sous-programme de LECTURE d'un CHAMP HORIZONTAL sur un fichier
(   13) !     ARPEGE.
(   14) !       ( Champ d'Interet en LEcture )
(   15) !**
(   16) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   17) !                KNUMER (Entree) ==> Numero de l'unite logique;
(   18) !                CDPREF (Entree) ==> Prefixe eventuel du nom d'article;
(   19) !                KNIVAU (Entree) ==> Niveau vertical eventuel;
(   20) !                CDSUFF (Entree) ==> Suffixe eventuel du nom d'article;
(   21) !    ( Tableau ) KCHAMP (Sortie) ==> Valeurs REELLES du champ lu;
(   22) !                LDCOSP (Entree) ==> Vrai si le champ est represente
(   23) !                                    par des coefficients spectraux.
(   24) !     MODIF:
(   25) !     JM AUDOIN GMAP/EXT 10/05/95 intro de IVALC3 pour eviter ecrasement
(   26) !     D  PARADIS TTI/DEV 12/10/98 partie controle et decodage de l'article
(   27) !                                 demenagee dans un ss-prg a usage interne
(   28) !                                 du logiciel (FADECI).
(   29) !     D  PARADIS DSI/DEV 15/04/04 nettoyage code + declaration IVALCO en
(   30) !                                 ALLOCATABLE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:18      page 3

(   31) !
(   32) !
(   33) TYPE(FA_COM) :: FA
(   34) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIVAU
(   35) !
(   36) CHARACTER CDPREF*(*), CDSUFF*(*)
(   37) !
(   38) INTEGER (KIND=JPLIKB) IUNDF
(   39) !
(   40) INTEGER (KIND=JPLIKB) KCHAMP (*)
(   41) !
(   42) TYPE (FAGR1TAB) YLGR1TAB
(   43) !
(   44) LOGICAL LDCOSP, LLUNDF
(   45) 
(   46) !**
(   47) !     1.  -  CONTROLES ET INITIALISATIONS.
(   48) !-----------------------------------------------------------------------
(   49) !
(   50) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   51) IF (LHOOK) CALL DR_HOOK('FACILE_MT',0,ZHOOK_HANDLE)
(   52) 
(   53) CALL FACIL1_MT64 (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, LDCOSP, &
(   54)                 & LLUNDF, IUNDF, YLGR1TAB)
(   55) 
(   56) 
(   57) IF (LHOOK) CALL DR_HOOK('FACILE_MT',1,ZHOOK_HANDLE)
(   58) 
(   59) END SUBROUTINE FACILE_MT64
(   60) 
(   61) ! Oct-2012 P. Marguinaud 64b LFI
(   62) SUBROUTINE FACILE64                                        &
(   63) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(   64) &            LDCOSP)
(   65) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   66) &                  FA_COM_DEFAULT_INIT,  &
(   67) &                  NEW_FA_DEFAULT
(   68) USE LFI_PRECISION
(   69) IMPLICIT NONE
(   70) ! Arguments
(   71) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   72) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   73) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(   74) INTEGER (KIND=JPLIKB)  KNIVAU                                 ! IN   
(   75) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(   76) INTEGER (KIND=JPLIKB)  KCHAMP     (*)                         !   OUT
(   77) LOGICAL                LDCOSP                                 ! IN   
(   78) 
(   79) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   80) 
(   81) CALL FACILE_MT64                                               &
(   82) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(   83) &            LDCOSP)
(   84) 
(   85) END SUBROUTINE FACILE64
(   86) 
(   87) SUBROUTINE FACILE                                          &
(   88) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:18      page 4

(   89) &            LDCOSP)
(   90) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   91) &                  FA_COM_DEFAULT_INIT,  &
(   92) &                  NEW_FA_DEFAULT
(   93) USE LFI_PRECISION
(   94) IMPLICIT NONE
(   95) ! Arguments
(   96) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(   97) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(   98) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(   99) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  100) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  101) INTEGER (KIND=JPLIKB)  KCHAMP     (*)                         !   OUT
(  102) LOGICAL                LDCOSP                                 ! IN   
(  103) 
(  104) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  105) 
(  106) CALL FACILE_MT                                                 &
(  107) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(  108) &            LDCOSP)
(  109) 
(  110) END SUBROUTINE FACILE
(  111) 
(  112) SUBROUTINE FACILE_MT                                           &
(  113) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(  114) &            LDCOSP)
(  115) USE FA_MOD, ONLY : FA_COM
(  116) USE LFI_PRECISION
(  117) IMPLICIT NONE
(  118) ! Arguments
(  119) TYPE (FA_COM)          FA                                     ! INOUT
(  120) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  121) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  122) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  123) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  124) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  125) INTEGER (KIND=JPLIKB)  KCHAMP     (*)                         !   OUT
(  126) LOGICAL                LDCOSP                                 ! IN   
(  127) ! Local integers
(  128) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  129) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  130) INTEGER (KIND=JPLIKB)  INIVAU                                 ! IN   
(  131) ! Convert arguments
(  132) 
(  133) INUMER     = INT (    KNUMER, JPLIKB)
(  134) INIVAU     = INT (    KNIVAU, JPLIKB)
(  135) 
(  136) CALL FACILE_MT64                                               &
(  137) &           (FA, IREP, INUMER, CDPREF, INIVAU, CDSUFF, KCHAMP, &
(  138) &            LDCOSP)
(  139) 
(  140) KREP       = INT (      IREP, JPLIKM)
(  141) 
(  142) END SUBROUTINE FACILE_MT
(  143) 
(  144) !INTF KREP            OUT                                                              
(  145) !INTF KNUMER        IN                                                                 
(  146) !INTF CDPREF        IN                                                                 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:18      page 5

(  147) !INTF KNIVAU        IN                                                                 
(  148) !INTF CDSUFF        IN                                                                 
(  149) !INTF KCHAMP          OUT DIMS=*                         KIND=JPLIKB                   
(  150) !INTF LDCOSP        IN                                                                 
(  151) 



























































NVFORTRAN (Version     23.1)          02/24/2023  13:54:18      page 6

(    1) # 1 "facile.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FACILE_MT64                                             &
(    4) &                     (FA,  KREP, KNUMER, CDPREF, KNIVAU, CDSUFF,  &
(    5) &                      KCHAMP, LDCOSP)
(    6) USE FA_MOD, ONLY : FA_COM, FAGR1TAB
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !      Sous-programme de LECTURE d'un CHAMP HORIZONTAL sur un fichier
(   13) !     ARPEGE.
(   14) !       ( Champ d'Interet en LEcture )
(   15) !**
(   16) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   17) !                KNUMER (Entree) ==> Numero de l'unite logique;
(   18) !                CDPREF (Entree) ==> Prefixe eventuel du nom d'article;
(   19) !                KNIVAU (Entree) ==> Niveau vertical eventuel;
(   20) !                CDSUFF (Entree) ==> Suffixe eventuel du nom d'article;
(   21) !    ( Tableau ) KCHAMP (Sortie) ==> Valeurs REELLES du champ lu;
(   22) !                LDCOSP (Entree) ==> Vrai si le champ est represente
(   23) !                                    par des coefficients spectraux.
(   24) !     MODIF:
(   25) !     JM AUDOIN GMAP/EXT 10/05/95 intro de IVALC3 pour eviter ecrasement
(   26) !     D  PARADIS TTI/DEV 12/10/98 partie controle et decodage de l'article
(   27) !                                 demenagee dans un ss-prg a usage interne
(   28) !                                 du logiciel (FADECI).
(   29) !     D  PARADIS DSI/DEV 15/04/04 nettoyage code + declaration IVALCO en
(   30) !                                 ALLOCATABLE
(   31) !
(   32) !
(   33) TYPE(FA_COM) :: FA
(   34) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIVAU
(   35) !
(   36) CHARACTER CDPREF*(*), CDSUFF*(*)
(   37) !
(   38) INTEGER (KIND=JPLIKB) IUNDF
(   39) !
(   40) INTEGER (KIND=JPLIKB) KCHAMP (*)
(   41) !
(   42) TYPE (FAGR1TAB) YLGR1TAB
(   43) !
(   44) LOGICAL LDCOSP, LLUNDF
(   45) # 46 "facile.F90"
(   46) !**
(   47) !     1.  -  CONTROLES ET INITIALISATIONS.
(   48) !-----------------------------------------------------------------------
(   49) !
(   50) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   51) IF (LHOOK) CALL DR_HOOK('FACILE_MT',0,ZHOOK_HANDLE)
(   52) # 53 "facile.F90"
(   53) CALL FACIL1_MT64 (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, LDCOSP, &
(   54)                 & LLUNDF, IUNDF, YLGR1TAB)
(   55) # 57 "facile.F90"
(   57) IF (LHOOK) CALL DR_HOOK('FACILE_MT',1,ZHOOK_HANDLE)
(   58) # 59 "facile.F90"






NVFORTRAN (Version     23.1)          02/24/2023  13:54:18      page 7

(   59) END SUBROUTINE FACILE_MT64
(   60) # 61 "facile.F90"
(   61) ! Oct-2012 P. Marguinaud 64b LFI
(   62) SUBROUTINE FACILE64                                        &
(   63) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(   64) &            LDCOSP)
(   65) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   66) &                  FA_COM_DEFAULT_INIT,  &
(   67) &                  NEW_FA_DEFAULT
(   68) USE LFI_PRECISION
(   69) IMPLICIT NONE
(   70) ! Arguments
(   71) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   72) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   73) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(   74) INTEGER (KIND=JPLIKB)  KNIVAU                                 ! IN   
(   75) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(   76) INTEGER (KIND=JPLIKB)  KCHAMP     (*)                         !   OUT
(   77) LOGICAL                LDCOSP                                 ! IN   
(   78) # 79 "facile.F90"
(   79) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   80) # 81 "facile.F90"
(   81) CALL FACILE_MT64                                               &
(   82) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(   83) &            LDCOSP)
(   84) # 85 "facile.F90"
(   85) END SUBROUTINE FACILE64
(   86) # 87 "facile.F90"
(   87) SUBROUTINE FACILE                                          &
(   88) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(   89) &            LDCOSP)
(   90) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   91) &                  FA_COM_DEFAULT_INIT,  &
(   92) &                  NEW_FA_DEFAULT
(   93) USE LFI_PRECISION
(   94) IMPLICIT NONE
(   95) ! Arguments
(   96) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(   97) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(   98) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(   99) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  100) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  101) INTEGER (KIND=JPLIKB)  KCHAMP     (*)                         !   OUT
(  102) LOGICAL                LDCOSP                                 ! IN   
(  103) # 104 "facile.F90"
(  104) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  105) # 106 "facile.F90"
(  106) CALL FACILE_MT                                                 &
(  107) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(  108) &            LDCOSP)
(  109) # 110 "facile.F90"
(  110) END SUBROUTINE FACILE
(  111) # 112 "facile.F90"
(  112) SUBROUTINE FACILE_MT                                           &
(  113) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, KCHAMP, &
(  114) &            LDCOSP)
(  115) USE FA_MOD, ONLY : FA_COM
(  116) USE LFI_PRECISION






NVFORTRAN (Version     23.1)          02/24/2023  13:54:18      page 8

(  117) IMPLICIT NONE
(  118) ! Arguments
(  119) TYPE (FA_COM)          FA                                     ! INOUT
(  120) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  121) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  122) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  123) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  124) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  125) INTEGER (KIND=JPLIKB)  KCHAMP     (*)                         !   OUT
(  126) LOGICAL                LDCOSP                                 ! IN   
(  127) ! Local integers
(  128) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  129) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  130) INTEGER (KIND=JPLIKB)  INIVAU                                 ! IN   
(  131) ! Convert arguments
(  132) # 133 "facile.F90"
(  133) INUMER     = INT (    KNUMER, JPLIKB)
(  134) INIVAU     = INT (    KNIVAU, JPLIKB)
(  135) # 136 "facile.F90"
(  136) CALL FACILE_MT64                                               &
(  137) &           (FA, IREP, INUMER, CDPREF, INIVAU, CDSUFF, KCHAMP, &
(  138) &            LDCOSP)
(  139) # 140 "facile.F90"
(  140) KREP       = INT (      IREP, JPLIKM)
(  141) # 142 "facile.F90"
(  142) END SUBROUTINE FACILE_MT
(  143) # 144 "facile.F90"
(  144) !INTF KREP            OUT                                                              
(  145) !INTF KNUMER        IN                                                                 
(  146) !INTF CDPREF        IN                                                                 
(  147) !INTF KNIVAU        IN                                                                 
(  148) !INTF CDSUFF        IN                                                                 
(  149) !INTF KCHAMP          OUT DIMS=*                         KIND=JPLIKB                   
(  150) !INTF LDCOSP        IN                                                                 
