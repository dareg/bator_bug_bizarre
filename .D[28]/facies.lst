


NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: facies.F90

(    1) ! Jan-2013 P. Marguinaud Use JNGEOM & JNEXPL parameters
(    2) ! Oct-2012 P. Marguinaud 64b LFI
(    3) ! Jan-2011 P. Marguinaud Thread-safe FA
(    4) SUBROUTINE FACIES_MT64                                            &
(    5) &                   (FA,  CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, &
(    6) &                    PCODIL, KTRONC, KNLATI, KNXLON, KNLOPA,      &
(    7) &                    KNOZPA, PSINLA, KNIVER, PREFER, PAHYBR,      &
(    8) &                    PBHYBR, LDGARD )
(    9) USE FA_MOD, ONLY : FA_COM, JPNIIL, JNGEOM, JNEXPL
(   10) USE PARKIND1, ONLY : JPRB
(   11) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(   12) USE LFI_PRECISION
(   13) IMPLICIT NONE
(   14) !****
(   15) !        Sous-programme servant a obtenir le contenu d'un Cadre.
(   16) !     ( FACIES... par analogie avec FADIES, avec "C" pour Cadre... )
(   17) !**
(   18) !        Arguments : CDNOMC ==> Nom symbolique du cadre;
(   19) !  (tous de Sortie,  KTYPTR ==> Type de transformation horizontale
(   20) !   sauf CDNOMC)     PSLAPO ==> Sinus de la latitude du pole d'interet;
(   21) !                    PCLOPO ==> Cosinus " " longitude "   "       "   ;
(   22) !                    PSLOPO ==> Sinus   " " longitude "   "       "   ;
(   23) !                    PCODIL ==> Coefficient de dilatation;
(   24) !                    KTRONC ==> Troncature;
(   25) !                    KNLATI ==> Nombre de latitudes (de pole a pole);
(   26) !                    KNXLON ==> Nombre maxi de longitudes par parallele;
(   27) !         (Tableau)  KNLOPA ==> Nombre de longitudes par parallele;
(   28) !                               (du pole nord vers l'equateur seulement)
(   29) !         (Tableau)  KNOZPA ==> Nombre d'onde zonal maxi par parallele;
(   30) !                               (du pole nord vers l'equateur seulement)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 3

(   31) !         (Tableau)  PSINLA ==> Sinus des latitudes de l'hemisphere nord
(   32) !                               (du pole nord vers l'equateur seulement)
(   33) !                    KNIVER ==> Nombre de niveaux verticaux;
(   34) !                    PREFER ==> Pression de reference (facteur multipli-
(   35) !                               catif de la premiere fonction de la
(   36) !                               coordonnee hybride)
(   37) !         (Tableau)  PAHYBR ==> Valeurs de la fonction "A" de la coordo-
(   38) !                               nnee hybride AUX LIMITES DE COUCHES;
(   39) !         (Tableau)  PBHYBR ==> Valeurs de la fonction "B" de la coordo-
(   40) !                               nnee hybride AUX LIMITES DE COUCHES;
(   41) !                    LDGARD ==> Vrai si le cadre doit etre conserve meme
(   42) !                               apres la fermeture du dernier fichier
(   43) !                               qui s'y rattache.
(   44) !
(   45) !
(   46) !
(   47) TYPE(FA_COM) :: FA
(   48) INTEGER (KIND=JPLIKB) KTYPTR, KTRONC, KNLATI, KNXLON, KNIVER
(   49) !
(   50) INTEGER (KIND=JPLIKB) KNLOPA (FA%JPXPAH), KNOZPA (FA%JPXIND)
(   51) !
(   52) REAL (KIND=JPDBLR) PSLAPO, PCLOPO, PSLOPO, PCODIL, PREFER
(   53) REAL (KIND=JPDBLR) PSINLA (FA%JPXGEO), PAHYBR (0:FA%JPXNIV)
(   54) REAL (KIND=JPDBLR) PBHYBR (0:FA%JPXNIV)
(   55) !
(   56) CHARACTER CDNOMC*(*)
(   57) !
(   58) LOGICAL LDGARD
(   59) !
(   60) INTEGER (KIND=JPLIKB) IREP, IRANGC, ILNOMC
(   61) INTEGER (KIND=JPLIKB) INIMES, INUMER, ILCDNO, J
(   62) INTEGER (KIND=JPLIKB) INPAHE, ISULEI, INPIND
(   63) !
(   64) LOGICAL LLVERG, LLMLAM
(   65) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   66) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   67) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   68) LOGICAL                  LLFATA
(   69) 
(   70) !
(   71) !
(   72) !**
(   73) !     0.  -  SI PREMIERE UTILISATION, APPEL AU SOUS-PROGRAMME "FARINE".
(   74) !-----------------------------------------------------------------------
(   75) !
(   76) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   77) IF (LHOOK) CALL DR_HOOK('FACIES_MT',0,ZHOOK_HANDLE)
(   78) CLACTI=''
(   79) IF (FA%FACIES_LLPREA) THEN
(   80)   CALL FARINE_MT64              &
(   81) &                 (FA, 2_JPLIKB )
(   82)   FA%FACIES_LLPREA=.FALSE.
(   83) ENDIF
(   84) !**
(   85) !     1.  -  CONTROLE DE L'ARGUMENT "CDNOMC".
(   86) !-----------------------------------------------------------------------
(   87) !
(   88) LLVERG=.FALSE.






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 4

(   89) ILCDNO=INT (LEN (CDNOMC), JPLIKB)
(   90) ILNOMC=1
(   91) !
(   92) IF (ILCDNO.LE.0) THEN
(   93)   IREP=-65
(   94)   GOTO 1001
(   95) ELSEIF (CDNOMC.EQ.' ') THEN
(   96)   IREP=-68
(   97)   GOTO 1001
(   98) ENDIF
(   99) !
(  100) DO J=ILCDNO,1,-1
(  101) !
(  102) IF (CDNOMC(J:J).NE.' ') THEN
(  103)   ILNOMC=J
(  104)   GOTO 102
(  105) ENDIF
(  106) !
(  107) ENDDO
(  108) !
(  109) 102 CONTINUE
(  110) !
(  111) IF (ILNOMC.GT.FA%NCPCAD) THEN
(  112)   IREP=-65
(  113)   GOTO 1001
(  114) ENDIF
(  115) !**
(  116) !     2.  -  RECHERCHE DU CADRE DANS LES TABLES.
(  117) !-----------------------------------------------------------------------
(  118) !
(  119) !             Verrouillage global prealable, si necessaire.
(  120) !
(  121) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(  122) &                              (FA%LFI, FA%VRGLAS,'ON')
(  123) LLVERG=FA%LFAMUL
(  124) !
(  125) CALL FANUCA_MT64                          &
(  126) &               (FA, CDNOMC,IRANGC,.FALSE.)
(  127) !
(  128) IF (IRANGC.EQ.0) THEN
(  129)   IREP=-51
(  130)   GOTO 1001
(  131) ENDIF
(  132) !**
(  133) !     3.  -  TRANSFERT DES TABLES DU LOGICIEL DANS LES ARGUMENTS.
(  134) !-----------------------------------------------------------------------
(  135) !
(  136) LLMLAM=FA%CADRE(IRANGC)%LIMLAM
(  137) !
(  138) KTYPTR=FA%CADRE(IRANGC)%NTYPTR
(  139) KTRONC=FA%CADRE(IRANGC)%MTRONC
(  140) KNIVER=FA%CADRE(IRANGC)%NNIVER
(  141) KNLATI=FA%CADRE(IRANGC)%NLATIT
(  142) !
(  143) IF (.NOT.LLMLAM) THEN
(  144)    INPAHE=(1+KNLATI)/2
(  145) ELSE
(  146)    ISULEI=FA%CADRE(IRANGC)%NOZPAR(1)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 5

(  147)    INPIND=2*ISULEI+4
(  148) ENDIF
(  149) !
(  150) KNXLON=FA%CADRE(IRANGC)%NXLOPA
(  151) PSLAPO=FA%CADRE(IRANGC)%SSLAPO
(  152) PCLOPO=FA%CADRE(IRANGC)%SCLOPO
(  153) PSLOPO=FA%CADRE(IRANGC)%SSLOPO
(  154) PCODIL=FA%CADRE(IRANGC)%SCODIL
(  155) PREFER=FA%CADRE(IRANGC)%SPREFE
(  156) LDGARD=FA%CADRE(IRANGC)%NGARDE.EQ.2.OR.             &
(  157) &       (FA%CADRE(IRANGC)%NGARDE.EQ.1.AND.FA%LIGARD)
(  158) !
(  159) IF (.NOT.LLMLAM) THEN
(  160) !
(  161)    DO J=1,INPAHE
(  162)    KNLOPA(J)=FA%CADRE(IRANGC)%NLOPAR(J)
(  163)    KNOZPA(J)=FA%CADRE(IRANGC)%NOZPAR(J)
(  164)    PSINLA(J)=FA%CADRE(IRANGC)%SINLAT(J)
(  165)    ENDDO
(  166) !
(  167) ELSE
(  168) !
(  169)    DO J=1,JNEXPL
(  170)       KNLOPA(J)=FA%CADRE(IRANGC)%NLOPAR(J)
(  171)    ENDDO
(  172)    DO J=1,INPIND
(  173)       KNOZPA(J)=FA%CADRE(IRANGC)%NOZPAR(J)
(  174)    ENDDO
(  175)    DO J=1,JNGEOM
(  176)       PSINLA(J)=FA%CADRE(IRANGC)%SINLAT(J)
(  177)    ENDDO
(  178) !
(  179) ENDIF
(  180) !
(  181) DO J=0,KNIVER
(  182) PAHYBR(J)=FA%CADRE(IRANGC)%SFOHYB(1,J)
(  183) PBHYBR(J)=FA%CADRE(IRANGC)%SFOHYB(2,J)
(  184) ENDDO
(  185) !
(  186) IREP=0
(  187) !**
(  188) !    10.  -  PHASE TERMINALE : MESSAGERIE, AVEC "ABORT" EVENTUEL,
(  189) !            VIA LE sous-programme "FAIPAR" .
(  190) !-----------------------------------------------------------------------
(  191) !
(  192) 1001 CONTINUE
(  193) !
(  194) !          Deverrouillage global eventuel.
(  195) !
(  196) IF (LLVERG) CALL LFIVER_MT64                         &
(  197) &                           (FA%LFI, FA%VRGLAS,'OFF')
(  198) !
(  199) LLFATA=IREP.NE.0.AND.FA%NRFAGA.NE.2
(  200) !
(  201) IF (LLFATA.OR.FA%NIMSGA.EQ.2) THEN
(  202)   INIMES=2
(  203) ELSE
(  204)   IF (LHOOK) CALL DR_HOOK('FACIES_MT',1,ZHOOK_HANDLE)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 6

(  205)   RETURN
(  206) ENDIF
(  207) !
(  208) CLNSPR='FACIES'
(  209) !
(  210) IF (IREP.EQ.-65.AND.ILCDNO.LE.0) THEN
(  211)   ILNOMC=8
(  212)   CLACTI(1:ILNOMC)=FA%CHAINC(:ILNOMC)
(  213) ELSE
(  214)   ILNOMC=MIN (INT (LEN (CLACTI), JPLIKB),ILNOMC)
(  215)   CLACTI(1:ILNOMC)=CDNOMC(1:ILNOMC)
(  216) ENDIF
(  217) !
(  218) ILNOMC=MIN (ILNOMC,FA%NCPCAD)
(  219) WRITE (UNIT=CLMESS,                                               &
(  220) &       FMT='(''ARGUMENTS SIMPLES= '''''',A,'''''','',             &
(  221) &   I2,4('','',F7.4),3('','',I6),'','',I5,'','',F11.4,'', '',L1)') &
(  222) &     CLACTI(1:ILNOMC),KTYPTR,PSLAPO,PCLOPO,PSLOPO,PCODIL,         &
(  223) &     KTRONC,KNLATI,KNXLON,KNIVER,PREFER,LDGARD
(  224) INUMER=JPNIIL
(  225) CALL FAIPAR_MT64                                     &
(  226) &               (FA, INUMER,INIMES,IREP,LLFATA,CLMESS, &
(  227) &                CLNSPR,CLACTI(1:ILNOMC),.FALSE.)
(  228) !
(  229) IF (LHOOK) CALL DR_HOOK('FACIES_MT',1,ZHOOK_HANDLE)
(  230) END SUBROUTINE FACIES_MT64
(  231) 
(  232) 
(  233) 
(  234) ! Oct-2012 P. Marguinaud 64b LFI
(  235) SUBROUTINE FACIES64                                        &
(  236) &           (CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  237) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,  &
(  238) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  239) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  240) &                   FA_COM_DEFAULT_INIT,  &
(  241) &                   NEW_FA_DEFAULT
(  242) USE LFI_PRECISION
(  243) IMPLICIT NONE
(  244) ! Arguments
(  245) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  246) INTEGER (KIND=JPLIKB)  KTYPTR                                 !   OUT
(  247) REAL (KIND=JPDBLR)     PSLAPO                                 !   OUT
(  248) REAL (KIND=JPDBLR)     PCLOPO                                 !   OUT
(  249) REAL (KIND=JPDBLR)     PSLOPO                                 !   OUT
(  250) REAL (KIND=JPDBLR)     PCODIL                                 !   OUT
(  251) INTEGER (KIND=JPLIKB)  KTRONC                                 !   OUT
(  252) INTEGER (KIND=JPLIKB)  KNLATI                                 !   OUT
(  253) INTEGER (KIND=JPLIKB)  KNXLON                                 !   OUT
(  254) INTEGER (KIND=JPLIKB)  KNLOPA     (FA%JPXPAH)                 !   OUT
(  255) INTEGER (KIND=JPLIKB)  KNOZPA     (FA%JPXIND)                 !   OUT
(  256) REAL (KIND=JPDBLR)     PSINLA     (FA%JPXGEO)                 !   OUT
(  257) INTEGER (KIND=JPLIKB)  KNIVER                                 !   OUT
(  258) REAL (KIND=JPDBLR)     PREFER                                 !   OUT
(  259) REAL (KIND=JPDBLR)     PAHYBR     (0:FA%JPXNIV)               !   OUT
(  260) REAL (KIND=JPDBLR)     PBHYBR     (0:FA%JPXNIV)               !   OUT
(  261) LOGICAL                LDGARD                                 !   OUT
(  262) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 7

(  263) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  264) 
(  265) CALL FACIES_MT64                                               &
(  266) &           (FA, CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  267) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,      &
(  268) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  269) 
(  270) END SUBROUTINE FACIES64
(  271) 
(  272) SUBROUTINE FACIES                                          &
(  273) &           (CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  274) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,  &
(  275) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  276) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  277) &                   FA_COM_DEFAULT_INIT,  &
(  278) &                   NEW_FA_DEFAULT
(  279) USE LFI_PRECISION
(  280) IMPLICIT NONE
(  281) ! Arguments
(  282) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  283) INTEGER (KIND=JPLIKM)  KTYPTR                                 !   OUT
(  284) REAL (KIND=JPDBLR)     PSLAPO                                 !   OUT
(  285) REAL (KIND=JPDBLR)     PCLOPO                                 !   OUT
(  286) REAL (KIND=JPDBLR)     PSLOPO                                 !   OUT
(  287) REAL (KIND=JPDBLR)     PCODIL                                 !   OUT
(  288) INTEGER (KIND=JPLIKM)  KTRONC                                 !   OUT
(  289) INTEGER (KIND=JPLIKM)  KNLATI                                 !   OUT
(  290) INTEGER (KIND=JPLIKM)  KNXLON                                 !   OUT
(  291) INTEGER (KIND=JPLIKM)  KNLOPA     (FA%JPXPAH)                 !   OUT
(  292) INTEGER (KIND=JPLIKM)  KNOZPA     (FA%JPXIND)                 !   OUT
(  293) REAL (KIND=JPDBLR)     PSINLA     (FA%JPXGEO)                 !   OUT
(  294) INTEGER (KIND=JPLIKM)  KNIVER                                 !   OUT
(  295) REAL (KIND=JPDBLR)     PREFER                                 !   OUT
(  296) REAL (KIND=JPDBLR)     PAHYBR     (0:FA%JPXNIV)               !   OUT
(  297) REAL (KIND=JPDBLR)     PBHYBR     (0:FA%JPXNIV)               !   OUT
(  298) LOGICAL                LDGARD                                 !   OUT
(  299) 
(  300) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  301) 
(  302) CALL FACIES_MT                                                 &
(  303) &           (FA, CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  304) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,      &
(  305) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  306) 
(  307) END SUBROUTINE FACIES
(  308) 
(  309) SUBROUTINE FACIES_MT                                           &
(  310) &           (FA, CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  311) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,      &
(  312) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  313) USE FA_MOD, ONLY : FA_COM
(  314) USE LFI_PRECISION
(  315) IMPLICIT NONE
(  316) ! Arguments
(  317) TYPE (FA_COM)          FA                                     ! INOUT
(  318) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  319) INTEGER (KIND=JPLIKM)  KTYPTR                                 !   OUT
(  320) REAL (KIND=JPDBLR)     PSLAPO                                 !   OUT






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 8

(  321) REAL (KIND=JPDBLR)     PCLOPO                                 !   OUT
(  322) REAL (KIND=JPDBLR)     PSLOPO                                 !   OUT
(  323) REAL (KIND=JPDBLR)     PCODIL                                 !   OUT
(  324) INTEGER (KIND=JPLIKM)  KTRONC                                 !   OUT
(  325) INTEGER (KIND=JPLIKM)  KNLATI                                 !   OUT
(  326) INTEGER (KIND=JPLIKM)  KNXLON                                 !   OUT
(  327) INTEGER (KIND=JPLIKM)  KNLOPA     (FA%JPXPAH)                 !   OUT
(  328) INTEGER (KIND=JPLIKM)  KNOZPA     (FA%JPXIND)                 !   OUT
(  329) REAL (KIND=JPDBLR)     PSINLA     (FA%JPXGEO)                 !   OUT
(  330) INTEGER (KIND=JPLIKM)  KNIVER                                 !   OUT
(  331) REAL (KIND=JPDBLR)     PREFER                                 !   OUT
(  332) REAL (KIND=JPDBLR)     PAHYBR     (0:FA%JPXNIV)               !   OUT
(  333) REAL (KIND=JPDBLR)     PBHYBR     (0:FA%JPXNIV)               !   OUT
(  334) LOGICAL                LDGARD                                 !   OUT
(  335) ! Local integers
(  336) INTEGER (KIND=JPLIKB)  ITYPTR                                 !   OUT
(  337) INTEGER (KIND=JPLIKB)  ITRONC                                 !   OUT
(  338) INTEGER (KIND=JPLIKB)  INLATI                                 !   OUT
(  339) INTEGER (KIND=JPLIKB)  INXLON                                 !   OUT
(  340) INTEGER (KIND=JPLIKB)  INLOPA     (FA%JPXPAH)                 !   OUT
(  341) INTEGER (KIND=JPLIKB)  INOZPA     (FA%JPXIND)                 !   OUT
(  342) INTEGER (KIND=JPLIKB)  INIVER                                 !   OUT
(  343) ! Ancillary variables
(  344) INTEGER (KIND=JPLIKB)  ISZNLOPA, ISZNOZPA
(  345) INTEGER (KIND=JPLIKB)  IRANGC
(  346) INTEGER (KIND=JPLIKB)  ISULEI
(  347) LOGICAL                LLMLAM
(  348) ! Convert arguments
(  349) 
(  350) 
(  351) CALL FACIES_MT64                                               &
(  352) &           (FA, CDNOMC, ITYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  353) &           ITRONC, INLATI, INXLON, INLOPA, INOZPA, PSINLA,      &
(  354) &           INIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  355) 
(  356) CALL FANUCA_MT64                     &
(  357) &           (FA,CDNOMC,IRANGC,.FALSE.)
(  358) 
(  359) IF (IRANGC.NE.0) THEN
(  360) 
(  361)   LLMLAM=FA%CADRE(IRANGC)%LIMLAM
(  362) 
(  363)   IF (.NOT.LLMLAM) THEN
(  364)      ISZNLOPA=(1+INLATI)/2
(  365)      ISZNOZPA=(1+INLATI)/2
(  366)   ELSE
(  367)      ISULEI=FA%CADRE(IRANGC)%NOZPAR(1)
(  368)      ISZNLOPA=8
(  369)      ISZNOZPA=2*ISULEI+4
(  370)   ENDIF
(  371) 
(  372)   KNLOPA (1:ISZNLOPA) = INT (INLOPA (1:ISZNLOPA), JPLIKM)
(  373)   KNOZPA (1:ISZNOZPA) = INT (INOZPA (1:ISZNOZPA), JPLIKM)
(  374) 
(  375) ENDIF
(  376) 
(  377) KTYPTR     = INT (    ITYPTR, JPLIKM)
(  378) KTRONC     = INT (    ITRONC, JPLIKM)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 9

(  379) KNLATI     = INT (    INLATI, JPLIKM)
(  380) KNXLON     = INT (    INXLON, JPLIKM)
(  381) KNIVER     = INT (    INIVER, JPLIKM)
(  382) 
(  383) END SUBROUTINE FACIES_MT
(  384) 
(  385) !INTF CDNOMC        IN                                  
(  386) !INTF KTYPTR          OUT                               
(  387) !INTF PSLAPO          OUT                               
(  388) !INTF PCLOPO          OUT                               
(  389) !INTF PSLOPO          OUT                               
(  390) !INTF PCODIL          OUT                               
(  391) !INTF KTRONC          OUT                               
(  392) !INTF KNLATI          OUT                               
(  393) !INTF KNXLON          OUT                               
(  394) !INTF KNLOPA          OUT DIMS=FA%JPXPAH                
(  395) !INTF KNOZPA          OUT DIMS=FA%JPXIND                
(  396) !INTF PSINLA          OUT DIMS=FA%JPXGEO                
(  397) !INTF KNIVER          OUT                               
(  398) !INTF PREFER          OUT                               
(  399) !INTF PAHYBR          OUT DIMS=0:FA%JPXNIV              
(  400) !INTF PBHYBR          OUT DIMS=0:FA%JPXNIV              
(  401) !INTF LDGARD          OUT                               









































NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 10

(    1) # 1 "facies.F90"
(    1) ! Jan-2013 P. Marguinaud Use JNGEOM & JNEXPL parameters
(    2) ! Oct-2012 P. Marguinaud 64b LFI
(    3) ! Jan-2011 P. Marguinaud Thread-safe FA
(    4) SUBROUTINE FACIES_MT64                                            &
(    5) &                   (FA,  CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, &
(    6) &                    PCODIL, KTRONC, KNLATI, KNXLON, KNLOPA,      &
(    7) &                    KNOZPA, PSINLA, KNIVER, PREFER, PAHYBR,      &
(    8) &                    PBHYBR, LDGARD )
(    9) USE FA_MOD, ONLY : FA_COM, JPNIIL, JNGEOM, JNEXPL
(   10) USE PARKIND1, ONLY : JPRB
(   11) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(   12) USE LFI_PRECISION
(   13) IMPLICIT NONE
(   14) !****
(   15) !        Sous-programme servant a obtenir le contenu d'un Cadre.
(   16) !     ( FACIES... par analogie avec FADIES, avec "C" pour Cadre... )
(   17) !**
(   18) !        Arguments : CDNOMC ==> Nom symbolique du cadre;
(   19) !  (tous de Sortie,  KTYPTR ==> Type de transformation horizontale
(   20) !   sauf CDNOMC)     PSLAPO ==> Sinus de la latitude du pole d'interet;
(   21) !                    PCLOPO ==> Cosinus " " longitude "   "       "   ;
(   22) !                    PSLOPO ==> Sinus   " " longitude "   "       "   ;
(   23) !                    PCODIL ==> Coefficient de dilatation;
(   24) !                    KTRONC ==> Troncature;
(   25) !                    KNLATI ==> Nombre de latitudes (de pole a pole);
(   26) !                    KNXLON ==> Nombre maxi de longitudes par parallele;
(   27) !         (Tableau)  KNLOPA ==> Nombre de longitudes par parallele;
(   28) !                               (du pole nord vers l'equateur seulement)
(   29) !         (Tableau)  KNOZPA ==> Nombre d'onde zonal maxi par parallele;
(   30) !                               (du pole nord vers l'equateur seulement)
(   31) !         (Tableau)  PSINLA ==> Sinus des latitudes de l'hemisphere nord
(   32) !                               (du pole nord vers l'equateur seulement)
(   33) !                    KNIVER ==> Nombre de niveaux verticaux;
(   34) !                    PREFER ==> Pression de reference (facteur multipli-
(   35) !                               catif de la premiere fonction de la
(   36) !                               coordonnee hybride)
(   37) !         (Tableau)  PAHYBR ==> Valeurs de la fonction "A" de la coordo-
(   38) !                               nnee hybride AUX LIMITES DE COUCHES;
(   39) !         (Tableau)  PBHYBR ==> Valeurs de la fonction "B" de la coordo-
(   40) !                               nnee hybride AUX LIMITES DE COUCHES;
(   41) !                    LDGARD ==> Vrai si le cadre doit etre conserve meme
(   42) !                               apres la fermeture du dernier fichier
(   43) !                               qui s'y rattache.
(   44) !
(   45) !
(   46) !
(   47) TYPE(FA_COM) :: FA
(   48) INTEGER (KIND=JPLIKB) KTYPTR, KTRONC, KNLATI, KNXLON, KNIVER
(   49) !
(   50) INTEGER (KIND=JPLIKB) KNLOPA (FA%JPXPAH), KNOZPA (FA%JPXIND)
(   51) !
(   52) REAL (KIND=JPDBLR) PSLAPO, PCLOPO, PSLOPO, PCODIL, PREFER
(   53) REAL (KIND=JPDBLR) PSINLA (FA%JPXGEO), PAHYBR (0:FA%JPXNIV)
(   54) REAL (KIND=JPDBLR) PBHYBR (0:FA%JPXNIV)
(   55) !
(   56) CHARACTER CDNOMC*(*)
(   57) !






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 11

(   58) LOGICAL LDGARD
(   59) !
(   60) INTEGER (KIND=JPLIKB) IREP, IRANGC, ILNOMC
(   61) INTEGER (KIND=JPLIKB) INIMES, INUMER, ILCDNO, J
(   62) INTEGER (KIND=JPLIKB) INPAHE, ISULEI, INPIND
(   63) !
(   64) LOGICAL LLVERG, LLMLAM
(   65) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   66) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   67) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   68) LOGICAL                  LLFATA
(   69) # 70 "facies.F90"
(   70) !
(   71) !
(   72) !**
(   73) !     0.  -  SI PREMIERE UTILISATION, APPEL AU SOUS-PROGRAMME "FARINE".
(   74) !-----------------------------------------------------------------------
(   75) !
(   76) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   77) IF (LHOOK) CALL DR_HOOK('FACIES_MT',0,ZHOOK_HANDLE)
(   78) CLACTI=''
(   79) IF (FA%FACIES_LLPREA) THEN
(   80)   CALL FARINE_MT64              &
(   81) &                 (FA, 2_JPLIKB )
(   82)   FA%FACIES_LLPREA=.FALSE.
(   83) ENDIF
(   84) !**
(   85) !     1.  -  CONTROLE DE L'ARGUMENT "CDNOMC".
(   86) !-----------------------------------------------------------------------
(   87) !
(   88) LLVERG=.FALSE.
(   89) ILCDNO=INT (LEN (CDNOMC), JPLIKB)
(   90) ILNOMC=1
(   91) !
(   92) IF (ILCDNO.LE.0) THEN
(   93)   IREP=-65
(   94)   GOTO 1001
(   95) ELSEIF (CDNOMC.EQ.' ') THEN
(   96)   IREP=-68
(   97)   GOTO 1001
(   98) ENDIF
(   99) !
(  100) DO J=ILCDNO,1,-1
(  101) !
(  102) IF (CDNOMC(J:J).NE.' ') THEN
(  103)   ILNOMC=J
(  104)   GOTO 102
(  105) ENDIF
(  106) !
(  107) ENDDO
(  108) !
(  109) 102 CONTINUE
(  110) !
(  111) IF (ILNOMC.GT.FA%NCPCAD) THEN
(  112)   IREP=-65
(  113)   GOTO 1001
(  114) ENDIF
(  115) !**






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 12

(  116) !     2.  -  RECHERCHE DU CADRE DANS LES TABLES.
(  117) !-----------------------------------------------------------------------
(  118) !
(  119) !             Verrouillage global prealable, si necessaire.
(  120) !
(  121) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(  122) &                              (FA%LFI, FA%VRGLAS,'ON')
(  123) LLVERG=FA%LFAMUL
(  124) !
(  125) CALL FANUCA_MT64                          &
(  126) &               (FA, CDNOMC,IRANGC,.FALSE.)
(  127) !
(  128) IF (IRANGC.EQ.0) THEN
(  129)   IREP=-51
(  130)   GOTO 1001
(  131) ENDIF
(  132) !**
(  133) !     3.  -  TRANSFERT DES TABLES DU LOGICIEL DANS LES ARGUMENTS.
(  134) !-----------------------------------------------------------------------
(  135) !
(  136) LLMLAM=FA%CADRE(IRANGC)%LIMLAM
(  137) !
(  138) KTYPTR=FA%CADRE(IRANGC)%NTYPTR
(  139) KTRONC=FA%CADRE(IRANGC)%MTRONC
(  140) KNIVER=FA%CADRE(IRANGC)%NNIVER
(  141) KNLATI=FA%CADRE(IRANGC)%NLATIT
(  142) !
(  143) IF (.NOT.LLMLAM) THEN
(  144)    INPAHE=(1+KNLATI)/2
(  145) ELSE
(  146)    ISULEI=FA%CADRE(IRANGC)%NOZPAR(1)
(  147)    INPIND=2*ISULEI+4
(  148) ENDIF
(  149) !
(  150) KNXLON=FA%CADRE(IRANGC)%NXLOPA
(  151) PSLAPO=FA%CADRE(IRANGC)%SSLAPO
(  152) PCLOPO=FA%CADRE(IRANGC)%SCLOPO
(  153) PSLOPO=FA%CADRE(IRANGC)%SSLOPO
(  154) PCODIL=FA%CADRE(IRANGC)%SCODIL
(  155) PREFER=FA%CADRE(IRANGC)%SPREFE
(  156) LDGARD=FA%CADRE(IRANGC)%NGARDE.EQ.2.OR.             &
(  157) &       (FA%CADRE(IRANGC)%NGARDE.EQ.1.AND.FA%LIGARD)
(  158) !
(  159) IF (.NOT.LLMLAM) THEN
(  160) !
(  161)    DO J=1,INPAHE
(  162)    KNLOPA(J)=FA%CADRE(IRANGC)%NLOPAR(J)
(  163)    KNOZPA(J)=FA%CADRE(IRANGC)%NOZPAR(J)
(  164)    PSINLA(J)=FA%CADRE(IRANGC)%SINLAT(J)
(  165)    ENDDO
(  166) !
(  167) ELSE
(  168) !
(  169)    DO J=1,JNEXPL
(  170)       KNLOPA(J)=FA%CADRE(IRANGC)%NLOPAR(J)
(  171)    ENDDO
(  172)    DO J=1,INPIND
(  173)       KNOZPA(J)=FA%CADRE(IRANGC)%NOZPAR(J)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 13

(  174)    ENDDO
(  175)    DO J=1,JNGEOM
(  176)       PSINLA(J)=FA%CADRE(IRANGC)%SINLAT(J)
(  177)    ENDDO
(  178) !
(  179) ENDIF
(  180) !
(  181) DO J=0,KNIVER
(  182) PAHYBR(J)=FA%CADRE(IRANGC)%SFOHYB(1,J)
(  183) PBHYBR(J)=FA%CADRE(IRANGC)%SFOHYB(2,J)
(  184) ENDDO
(  185) !
(  186) IREP=0
(  187) !**
(  188) !    10.  -  PHASE TERMINALE : MESSAGERIE, AVEC "ABORT" EVENTUEL,
(  189) !            VIA LE sous-programme "FAIPAR" .
(  190) !-----------------------------------------------------------------------
(  191) !
(  192) 1001 CONTINUE
(  193) !
(  194) !          Deverrouillage global eventuel.
(  195) !
(  196) IF (LLVERG) CALL LFIVER_MT64                         &
(  197) &                           (FA%LFI, FA%VRGLAS,'OFF')
(  198) !
(  199) LLFATA=IREP.NE.0.AND.FA%NRFAGA.NE.2
(  200) !
(  201) IF (LLFATA.OR.FA%NIMSGA.EQ.2) THEN
(  202)   INIMES=2
(  203) ELSE
(  204)   IF (LHOOK) CALL DR_HOOK('FACIES_MT',1,ZHOOK_HANDLE)
(  205)   RETURN
(  206) ENDIF
(  207) !
(  208) CLNSPR='FACIES'
(  209) !
(  210) IF (IREP.EQ.-65.AND.ILCDNO.LE.0) THEN
(  211)   ILNOMC=8
(  212)   CLACTI(1:ILNOMC)=FA%CHAINC(:ILNOMC)
(  213) ELSE
(  214)   ILNOMC=MIN (INT (LEN (CLACTI), JPLIKB),ILNOMC)
(  215)   CLACTI(1:ILNOMC)=CDNOMC(1:ILNOMC)
(  216) ENDIF
(  217) !
(  218) ILNOMC=MIN (ILNOMC,FA%NCPCAD)
(  219) WRITE (UNIT=CLMESS,                                               &
(  220) &       FMT='(''ARGUMENTS SIMPLES= '''''',A,'''''','',             &
(  221) &   I2,4('','',F7.4),3('','',I6),'','',I5,'','',F11.4,'', '',L1)') &
(  222) &     CLACTI(1:ILNOMC),KTYPTR,PSLAPO,PCLOPO,PSLOPO,PCODIL,         &
(  223) &     KTRONC,KNLATI,KNXLON,KNIVER,PREFER,LDGARD
(  224) INUMER=JPNIIL
(  225) CALL FAIPAR_MT64                                     &
(  226) &               (FA, INUMER,INIMES,IREP,LLFATA,CLMESS, &
(  227) &                CLNSPR,CLACTI(1:ILNOMC),.FALSE.)
(  228) !
(  229) IF (LHOOK) CALL DR_HOOK('FACIES_MT',1,ZHOOK_HANDLE)
(  230) END SUBROUTINE FACIES_MT64
(  231) # 234 "facies.F90"






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 14

(  234) ! Oct-2012 P. Marguinaud 64b LFI
(  235) SUBROUTINE FACIES64                                        &
(  236) &           (CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  237) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,  &
(  238) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  239) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  240) &                   FA_COM_DEFAULT_INIT,  &
(  241) &                   NEW_FA_DEFAULT
(  242) USE LFI_PRECISION
(  243) IMPLICIT NONE
(  244) ! Arguments
(  245) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  246) INTEGER (KIND=JPLIKB)  KTYPTR                                 !   OUT
(  247) REAL (KIND=JPDBLR)     PSLAPO                                 !   OUT
(  248) REAL (KIND=JPDBLR)     PCLOPO                                 !   OUT
(  249) REAL (KIND=JPDBLR)     PSLOPO                                 !   OUT
(  250) REAL (KIND=JPDBLR)     PCODIL                                 !   OUT
(  251) INTEGER (KIND=JPLIKB)  KTRONC                                 !   OUT
(  252) INTEGER (KIND=JPLIKB)  KNLATI                                 !   OUT
(  253) INTEGER (KIND=JPLIKB)  KNXLON                                 !   OUT
(  254) INTEGER (KIND=JPLIKB)  KNLOPA     (FA%JPXPAH)                 !   OUT
(  255) INTEGER (KIND=JPLIKB)  KNOZPA     (FA%JPXIND)                 !   OUT
(  256) REAL (KIND=JPDBLR)     PSINLA     (FA%JPXGEO)                 !   OUT
(  257) INTEGER (KIND=JPLIKB)  KNIVER                                 !   OUT
(  258) REAL (KIND=JPDBLR)     PREFER                                 !   OUT
(  259) REAL (KIND=JPDBLR)     PAHYBR     (0:FA%JPXNIV)               !   OUT
(  260) REAL (KIND=JPDBLR)     PBHYBR     (0:FA%JPXNIV)               !   OUT
(  261) LOGICAL                LDGARD                                 !   OUT
(  262) # 263 "facies.F90"
(  263) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  264) # 265 "facies.F90"
(  265) CALL FACIES_MT64                                               &
(  266) &           (FA, CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  267) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,      &
(  268) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  269) # 270 "facies.F90"
(  270) END SUBROUTINE FACIES64
(  271) # 272 "facies.F90"
(  272) SUBROUTINE FACIES                                          &
(  273) &           (CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  274) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,  &
(  275) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  276) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  277) &                   FA_COM_DEFAULT_INIT,  &
(  278) &                   NEW_FA_DEFAULT
(  279) USE LFI_PRECISION
(  280) IMPLICIT NONE
(  281) ! Arguments
(  282) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  283) INTEGER (KIND=JPLIKM)  KTYPTR                                 !   OUT
(  284) REAL (KIND=JPDBLR)     PSLAPO                                 !   OUT
(  285) REAL (KIND=JPDBLR)     PCLOPO                                 !   OUT
(  286) REAL (KIND=JPDBLR)     PSLOPO                                 !   OUT
(  287) REAL (KIND=JPDBLR)     PCODIL                                 !   OUT
(  288) INTEGER (KIND=JPLIKM)  KTRONC                                 !   OUT
(  289) INTEGER (KIND=JPLIKM)  KNLATI                                 !   OUT
(  290) INTEGER (KIND=JPLIKM)  KNXLON                                 !   OUT
(  291) INTEGER (KIND=JPLIKM)  KNLOPA     (FA%JPXPAH)                 !   OUT






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 15

(  292) INTEGER (KIND=JPLIKM)  KNOZPA     (FA%JPXIND)                 !   OUT
(  293) REAL (KIND=JPDBLR)     PSINLA     (FA%JPXGEO)                 !   OUT
(  294) INTEGER (KIND=JPLIKM)  KNIVER                                 !   OUT
(  295) REAL (KIND=JPDBLR)     PREFER                                 !   OUT
(  296) REAL (KIND=JPDBLR)     PAHYBR     (0:FA%JPXNIV)               !   OUT
(  297) REAL (KIND=JPDBLR)     PBHYBR     (0:FA%JPXNIV)               !   OUT
(  298) LOGICAL                LDGARD                                 !   OUT
(  299) # 300 "facies.F90"
(  300) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  301) # 302 "facies.F90"
(  302) CALL FACIES_MT                                                 &
(  303) &           (FA, CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  304) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,      &
(  305) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  306) # 307 "facies.F90"
(  307) END SUBROUTINE FACIES
(  308) # 309 "facies.F90"
(  309) SUBROUTINE FACIES_MT                                           &
(  310) &           (FA, CDNOMC, KTYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  311) &           KTRONC, KNLATI, KNXLON, KNLOPA, KNOZPA, PSINLA,      &
(  312) &           KNIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  313) USE FA_MOD, ONLY : FA_COM
(  314) USE LFI_PRECISION
(  315) IMPLICIT NONE
(  316) ! Arguments
(  317) TYPE (FA_COM)          FA                                     ! INOUT
(  318) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  319) INTEGER (KIND=JPLIKM)  KTYPTR                                 !   OUT
(  320) REAL (KIND=JPDBLR)     PSLAPO                                 !   OUT
(  321) REAL (KIND=JPDBLR)     PCLOPO                                 !   OUT
(  322) REAL (KIND=JPDBLR)     PSLOPO                                 !   OUT
(  323) REAL (KIND=JPDBLR)     PCODIL                                 !   OUT
(  324) INTEGER (KIND=JPLIKM)  KTRONC                                 !   OUT
(  325) INTEGER (KIND=JPLIKM)  KNLATI                                 !   OUT
(  326) INTEGER (KIND=JPLIKM)  KNXLON                                 !   OUT
(  327) INTEGER (KIND=JPLIKM)  KNLOPA     (FA%JPXPAH)                 !   OUT
(  328) INTEGER (KIND=JPLIKM)  KNOZPA     (FA%JPXIND)                 !   OUT
(  329) REAL (KIND=JPDBLR)     PSINLA     (FA%JPXGEO)                 !   OUT
(  330) INTEGER (KIND=JPLIKM)  KNIVER                                 !   OUT
(  331) REAL (KIND=JPDBLR)     PREFER                                 !   OUT
(  332) REAL (KIND=JPDBLR)     PAHYBR     (0:FA%JPXNIV)               !   OUT
(  333) REAL (KIND=JPDBLR)     PBHYBR     (0:FA%JPXNIV)               !   OUT
(  334) LOGICAL                LDGARD                                 !   OUT
(  335) ! Local integers
(  336) INTEGER (KIND=JPLIKB)  ITYPTR                                 !   OUT
(  337) INTEGER (KIND=JPLIKB)  ITRONC                                 !   OUT
(  338) INTEGER (KIND=JPLIKB)  INLATI                                 !   OUT
(  339) INTEGER (KIND=JPLIKB)  INXLON                                 !   OUT
(  340) INTEGER (KIND=JPLIKB)  INLOPA     (FA%JPXPAH)                 !   OUT
(  341) INTEGER (KIND=JPLIKB)  INOZPA     (FA%JPXIND)                 !   OUT
(  342) INTEGER (KIND=JPLIKB)  INIVER                                 !   OUT
(  343) ! Ancillary variables
(  344) INTEGER (KIND=JPLIKB)  ISZNLOPA, ISZNOZPA
(  345) INTEGER (KIND=JPLIKB)  IRANGC
(  346) INTEGER (KIND=JPLIKB)  ISULEI
(  347) LOGICAL                LLMLAM
(  348) ! Convert arguments
(  349) # 351 "facies.F90"






NVFORTRAN (Version     23.1)          02/24/2023  13:54:21      page 16

(  351) CALL FACIES_MT64                                               &
(  352) &           (FA, CDNOMC, ITYPTR, PSLAPO, PCLOPO, PSLOPO, PCODIL, &
(  353) &           ITRONC, INLATI, INXLON, INLOPA, INOZPA, PSINLA,      &
(  354) &           INIVER, PREFER, PAHYBR, PBHYBR, LDGARD)
(  355) # 356 "facies.F90"
(  356) CALL FANUCA_MT64                     &
(  357) &           (FA,CDNOMC,IRANGC,.FALSE.)
(  358) # 359 "facies.F90"
(  359) IF (IRANGC.NE.0) THEN
(  360) # 361 "facies.F90"
(  361)   LLMLAM=FA%CADRE(IRANGC)%LIMLAM
(  362) # 363 "facies.F90"
(  363)   IF (.NOT.LLMLAM) THEN
(  364)      ISZNLOPA=(1+INLATI)/2
(  365)      ISZNOZPA=(1+INLATI)/2
(  366)   ELSE
(  367)      ISULEI=FA%CADRE(IRANGC)%NOZPAR(1)
(  368)      ISZNLOPA=8
(  369)      ISZNOZPA=2*ISULEI+4
(  370)   ENDIF
(  371) # 372 "facies.F90"
(  372)   KNLOPA (1:ISZNLOPA) = INT (INLOPA (1:ISZNLOPA), JPLIKM)
(  373)   KNOZPA (1:ISZNOZPA) = INT (INOZPA (1:ISZNOZPA), JPLIKM)
(  374) # 375 "facies.F90"
(  375) ENDIF
(  376) # 377 "facies.F90"
(  377) KTYPTR     = INT (    ITYPTR, JPLIKM)
(  378) KTRONC     = INT (    ITRONC, JPLIKM)
(  379) KNLATI     = INT (    INLATI, JPLIKM)
(  380) KNXLON     = INT (    INXLON, JPLIKM)
(  381) KNIVER     = INT (    INIVER, JPLIKM)
(  382) # 383 "facies.F90"
(  383) END SUBROUTINE FACIES_MT
(  384) # 385 "facies.F90"
(  385) !INTF CDNOMC        IN                                  
(  386) !INTF KTYPTR          OUT                               
(  387) !INTF PSLAPO          OUT                               
(  388) !INTF PCLOPO          OUT                               
(  389) !INTF PSLOPO          OUT                               
(  390) !INTF PCODIL          OUT                               
(  391) !INTF KTRONC          OUT                               
(  392) !INTF KNLATI          OUT                               
(  393) !INTF KNXLON          OUT                               
(  394) !INTF KNLOPA          OUT DIMS=FA%JPXPAH                
(  395) !INTF KNOZPA          OUT DIMS=FA%JPXIND                
(  396) !INTF PSINLA          OUT DIMS=FA%JPXGEO                
(  397) !INTF KNIVER          OUT                               
(  398) !INTF PREFER          OUT                               
(  399) !INTF PAHYBR          OUT DIMS=0:FA%JPXNIV              
(  400) !INTF PBHYBR          OUT DIMS=0:FA%JPXNIV              
(  401) !INTF LDGARD          OUT                               
