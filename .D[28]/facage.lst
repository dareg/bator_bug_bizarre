


NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: facage.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FACAGE_MT64                     &
(    4) &                     (FA,  CDNOMC, LDGARD )
(    5) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Sous-programme servant a redefinir l'option de conservation
(   12) !     d'un cadre preexistant ( CAdre a Garder Eventuellement... )
(   13) !**
(   14) !        Arguments : CDNOMC ==> Nom symbolique du cadre;
(   15) !  (tous d'Entree)   LDGARD ==> Vrai si le cadre doit etre conserve meme
(   16) !                               apres la fermeture du dernier fichier
(   17) !                               qui s'y rattache.
(   18) !
(   19) !
(   20) !
(   21) TYPE(FA_COM) :: FA
(   22) INTEGER (KIND=JPLIKB) ILCDNO, ILNOMC, J, IRANGC
(   23) INTEGER (KIND=JPLIKB) IREP, INIMES, INUMER
(   24) !
(   25) LOGICAL LLVERG, LDGARD
(   26) !
(   27) CHARACTER CDNOMC*(*)
(   28) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   29) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   30) CHARACTER(LEN=FA%JPLSPX) CLNSPR






NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 3

(   31) LOGICAL                  LLFATA
(   32) 
(   33) !
(   34) !
(   35) !**
(   36) !     0.  -  SI PREMIERE UTILISATION, APPEL AU SOUS-PROGRAMME "FARINE".
(   37) !-----------------------------------------------------------------------
(   38) !
(   39) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   40) IF (LHOOK) CALL DR_HOOK('FACAGE_MT',0,ZHOOK_HANDLE)
(   41) CLACTI=''
(   42) IF (FA%FACAGE_LLPREA) THEN
(   43)   CALL FARINE_MT64              &
(   44) &                 (FA, 2_JPLIKB )
(   45)   FA%FACAGE_LLPREA=.FALSE.
(   46) ENDIF
(   47) !**
(   48) !     1.  -  CONTROLE DE L'ARGUMENT "CDNOMC".
(   49) !-----------------------------------------------------------------------
(   50) !
(   51) LLVERG=.FALSE.
(   52) ILCDNO=INT (LEN (CDNOMC), JPLIKB)
(   53) ILNOMC=1
(   54) !
(   55) IF (ILCDNO.LE.0) THEN
(   56)   IREP=-65
(   57)   GOTO 1001
(   58) ELSEIF (CDNOMC.EQ.' ') THEN
(   59)   IREP=-68
(   60)   GOTO 1001
(   61) ENDIF
(   62) !
(   63) DO J=ILCDNO,1,-1
(   64) !
(   65) IF (CDNOMC(J:J).NE.' ') THEN
(   66)   ILNOMC=J
(   67)   GOTO 102
(   68) ENDIF
(   69) !
(   70) ENDDO
(   71) !
(   72) 102 CONTINUE
(   73) !
(   74) IF (ILNOMC.GT.FA%NCPCAD) THEN
(   75)   IREP=-65
(   76)   GOTO 1001
(   77) ENDIF
(   78) !**
(   79) !     2.  -  RECHERCHE DU CADRE DANS LES TABLES.
(   80) !-----------------------------------------------------------------------
(   81) !
(   82) !             Verrouillage global prealable, si necessaire.
(   83) !
(   84) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(   85) &                              (FA%LFI, FA%VRGLAS,'ON')
(   86) LLVERG=FA%LFAMUL
(   87) !
(   88) CALL FANUCA_MT64                          &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 4

(   89) &               (FA, CDNOMC,IRANGC,.FALSE.)
(   90) !
(   91) IF (IRANGC.EQ.0) THEN
(   92)   IREP=-51
(   93)   GOTO 1001
(   94) ENDIF
(   95) !**
(   96) !     3.  -  MISE A JOUR DU NIVEAU DE CONSERVATION.
(   97) !-----------------------------------------------------------------------
(   98) !
(   99) IF (LDGARD) THEN
(  100)   FA%CADRE(IRANGC)%NGARDE=2
(  101) ELSE
(  102)   FA%CADRE(IRANGC)%NGARDE=0
(  103) ENDIF
(  104) !
(  105) IREP=0
(  106) !**
(  107) !    10.  -  PHASE TERMINALE : MESSAGERIE, AVEC "ABORT" EVENTUEL,
(  108) !            VIA LE sous-programme "FAIPAR" .
(  109) !-----------------------------------------------------------------------
(  110) !
(  111) 1001 CONTINUE
(  112) !
(  113) !          Deverrouillage global eventuel.
(  114) !
(  115) IF (LLVERG) CALL LFIVER_MT64                         &
(  116) &                           (FA%LFI, FA%VRGLAS,'OFF')
(  117) !
(  118) LLFATA=IREP.NE.0.AND.FA%NRFAGA.NE.2
(  119) !
(  120) IF (LLFATA.OR.FA%NIMSGA.EQ.2) THEN
(  121)   INIMES=2
(  122)   CLNSPR='FACAGE'
(  123) !
(  124)   IF (IREP.EQ.-65.AND.ILCDNO.LE.0) THEN
(  125)     ILNOMC=8
(  126)     CLACTI(1:ILNOMC)=FA%CHAINC(:ILNOMC)
(  127)   ELSE
(  128)     ILNOMC=MIN (INT (LEN (CLACTI), JPLIKB),ILNOMC)
(  129)     CLACTI(1:ILNOMC)=CDNOMC(1:ILNOMC)
(  130)   ENDIF
(  131) !
(  132)   ILNOMC=MIN (ILNOMC,FA%NCPCAD)
(  133)   WRITE (UNIT=CLMESS,                                 &
(  134) &         FMT='(''CDNOMC= '''''',A,'''''', LDGARD= '', &
(  135) &         L1,'', CODE INTERNE='',I4)')                 &
(  136) &         CLACTI(1:ILNOMC),LDGARD,IREP
(  137)   INUMER=JPNIIL
(  138)   CALL FAIPAR_MT64                                     &
(  139) &                 (FA, INUMER,INIMES,IREP,LLFATA,CLMESS, &
(  140) &               CLNSPR,CLACTI(1:ILNOMC),.FALSE.)
(  141) ENDIF
(  142) !
(  143) IF (LHOOK) CALL DR_HOOK('FACAGE_MT',1,ZHOOK_HANDLE)
(  144) END SUBROUTINE FACAGE_MT64
(  145) 
(  146) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 5

(  147) 
(  148) ! Oct-2012 P. Marguinaud 64b LFI
(  149) SUBROUTINE FACAGE64           &
(  150) &           (CDNOMC, LDGARD)
(  151) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  152) &                   FA_COM_DEFAULT_INIT,  &
(  153) &                   NEW_FA_DEFAULT
(  154) USE LFI_PRECISION
(  155) IMPLICIT NONE
(  156) ! Arguments
(  157) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  158) LOGICAL                LDGARD                                 ! IN   
(  159) 
(  160) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  161) 
(  162) CALL FACAGE_MT64               &
(  163) &           (FA, CDNOMC, LDGARD)
(  164) 
(  165) END SUBROUTINE FACAGE64
(  166) 
(  167) SUBROUTINE FACAGE             &
(  168) &           (CDNOMC, LDGARD)
(  169) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  170) &                   FA_COM_DEFAULT_INIT,  &
(  171) &                   NEW_FA_DEFAULT
(  172) USE LFI_PRECISION
(  173) IMPLICIT NONE
(  174) ! Arguments
(  175) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  176) LOGICAL                LDGARD                                 ! IN   
(  177) 
(  178) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  179) 
(  180) CALL FACAGE_MT                 &
(  181) &           (FA, CDNOMC, LDGARD)
(  182) 
(  183) END SUBROUTINE FACAGE
(  184) 
(  185) SUBROUTINE FACAGE_MT             &
(  186) &           (FA, CDNOMC, LDGARD)
(  187) USE FA_MOD, ONLY : FA_COM
(  188) USE LFI_PRECISION
(  189) IMPLICIT NONE
(  190) ! Arguments
(  191) TYPE (FA_COM)          FA                                     ! INOUT
(  192) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  193) LOGICAL                LDGARD                                 ! IN   
(  194) ! Local integers
(  195) ! Convert arguments
(  196) 
(  197) 
(  198) CALL FACAGE_MT64               &
(  199) &           (FA, CDNOMC, LDGARD)
(  200) 
(  201) 
(  202) END SUBROUTINE FACAGE_MT
(  203) 
(  204) !INTF CDNOMC        IN    






NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 6

(  205) !INTF LDGARD        IN    































































NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 7

(    1) # 1 "facage.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FACAGE_MT64                     &
(    4) &                     (FA,  CDNOMC, LDGARD )
(    5) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Sous-programme servant a redefinir l'option de conservation
(   12) !     d'un cadre preexistant ( CAdre a Garder Eventuellement... )
(   13) !**
(   14) !        Arguments : CDNOMC ==> Nom symbolique du cadre;
(   15) !  (tous d'Entree)   LDGARD ==> Vrai si le cadre doit etre conserve meme
(   16) !                               apres la fermeture du dernier fichier
(   17) !                               qui s'y rattache.
(   18) !
(   19) !
(   20) !
(   21) TYPE(FA_COM) :: FA
(   22) INTEGER (KIND=JPLIKB) ILCDNO, ILNOMC, J, IRANGC
(   23) INTEGER (KIND=JPLIKB) IREP, INIMES, INUMER
(   24) !
(   25) LOGICAL LLVERG, LDGARD
(   26) !
(   27) CHARACTER CDNOMC*(*)
(   28) CHARACTER(LEN=FA%JPXNOM) CLACTI 
(   29) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   30) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   31) LOGICAL                  LLFATA
(   32) # 33 "facage.F90"
(   33) !
(   34) !
(   35) !**
(   36) !     0.  -  SI PREMIERE UTILISATION, APPEL AU SOUS-PROGRAMME "FARINE".
(   37) !-----------------------------------------------------------------------
(   38) !
(   39) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   40) IF (LHOOK) CALL DR_HOOK('FACAGE_MT',0,ZHOOK_HANDLE)
(   41) CLACTI=''
(   42) IF (FA%FACAGE_LLPREA) THEN
(   43)   CALL FARINE_MT64              &
(   44) &                 (FA, 2_JPLIKB )
(   45)   FA%FACAGE_LLPREA=.FALSE.
(   46) ENDIF
(   47) !**
(   48) !     1.  -  CONTROLE DE L'ARGUMENT "CDNOMC".
(   49) !-----------------------------------------------------------------------
(   50) !
(   51) LLVERG=.FALSE.
(   52) ILCDNO=INT (LEN (CDNOMC), JPLIKB)
(   53) ILNOMC=1
(   54) !
(   55) IF (ILCDNO.LE.0) THEN
(   56)   IREP=-65
(   57)   GOTO 1001






NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 8

(   58) ELSEIF (CDNOMC.EQ.' ') THEN
(   59)   IREP=-68
(   60)   GOTO 1001
(   61) ENDIF
(   62) !
(   63) DO J=ILCDNO,1,-1
(   64) !
(   65) IF (CDNOMC(J:J).NE.' ') THEN
(   66)   ILNOMC=J
(   67)   GOTO 102
(   68) ENDIF
(   69) !
(   70) ENDDO
(   71) !
(   72) 102 CONTINUE
(   73) !
(   74) IF (ILNOMC.GT.FA%NCPCAD) THEN
(   75)   IREP=-65
(   76)   GOTO 1001
(   77) ENDIF
(   78) !**
(   79) !     2.  -  RECHERCHE DU CADRE DANS LES TABLES.
(   80) !-----------------------------------------------------------------------
(   81) !
(   82) !             Verrouillage global prealable, si necessaire.
(   83) !
(   84) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(   85) &                              (FA%LFI, FA%VRGLAS,'ON')
(   86) LLVERG=FA%LFAMUL
(   87) !
(   88) CALL FANUCA_MT64                          &
(   89) &               (FA, CDNOMC,IRANGC,.FALSE.)
(   90) !
(   91) IF (IRANGC.EQ.0) THEN
(   92)   IREP=-51
(   93)   GOTO 1001
(   94) ENDIF
(   95) !**
(   96) !     3.  -  MISE A JOUR DU NIVEAU DE CONSERVATION.
(   97) !-----------------------------------------------------------------------
(   98) !
(   99) IF (LDGARD) THEN
(  100)   FA%CADRE(IRANGC)%NGARDE=2
(  101) ELSE
(  102)   FA%CADRE(IRANGC)%NGARDE=0
(  103) ENDIF
(  104) !
(  105) IREP=0
(  106) !**
(  107) !    10.  -  PHASE TERMINALE : MESSAGERIE, AVEC "ABORT" EVENTUEL,
(  108) !            VIA LE sous-programme "FAIPAR" .
(  109) !-----------------------------------------------------------------------
(  110) !
(  111) 1001 CONTINUE
(  112) !
(  113) !          Deverrouillage global eventuel.
(  114) !
(  115) IF (LLVERG) CALL LFIVER_MT64                         &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 9

(  116) &                           (FA%LFI, FA%VRGLAS,'OFF')
(  117) !
(  118) LLFATA=IREP.NE.0.AND.FA%NRFAGA.NE.2
(  119) !
(  120) IF (LLFATA.OR.FA%NIMSGA.EQ.2) THEN
(  121)   INIMES=2
(  122)   CLNSPR='FACAGE'
(  123) !
(  124)   IF (IREP.EQ.-65.AND.ILCDNO.LE.0) THEN
(  125)     ILNOMC=8
(  126)     CLACTI(1:ILNOMC)=FA%CHAINC(:ILNOMC)
(  127)   ELSE
(  128)     ILNOMC=MIN (INT (LEN (CLACTI), JPLIKB),ILNOMC)
(  129)     CLACTI(1:ILNOMC)=CDNOMC(1:ILNOMC)
(  130)   ENDIF
(  131) !
(  132)   ILNOMC=MIN (ILNOMC,FA%NCPCAD)
(  133)   WRITE (UNIT=CLMESS,                                 &
(  134) &         FMT='(''CDNOMC= '''''',A,'''''', LDGARD= '', &
(  135) &         L1,'', CODE INTERNE='',I4)')                 &
(  136) &         CLACTI(1:ILNOMC),LDGARD,IREP
(  137)   INUMER=JPNIIL
(  138)   CALL FAIPAR_MT64                                     &
(  139) &                 (FA, INUMER,INIMES,IREP,LLFATA,CLMESS, &
(  140) &               CLNSPR,CLACTI(1:ILNOMC),.FALSE.)
(  141) ENDIF
(  142) !
(  143) IF (LHOOK) CALL DR_HOOK('FACAGE_MT',1,ZHOOK_HANDLE)
(  144) END SUBROUTINE FACAGE_MT64
(  145) # 148 "facage.F90"
(  148) ! Oct-2012 P. Marguinaud 64b LFI
(  149) SUBROUTINE FACAGE64           &
(  150) &           (CDNOMC, LDGARD)
(  151) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  152) &                   FA_COM_DEFAULT_INIT,  &
(  153) &                   NEW_FA_DEFAULT
(  154) USE LFI_PRECISION
(  155) IMPLICIT NONE
(  156) ! Arguments
(  157) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  158) LOGICAL                LDGARD                                 ! IN   
(  159) # 160 "facage.F90"
(  160) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  161) # 162 "facage.F90"
(  162) CALL FACAGE_MT64               &
(  163) &           (FA, CDNOMC, LDGARD)
(  164) # 165 "facage.F90"
(  165) END SUBROUTINE FACAGE64
(  166) # 167 "facage.F90"
(  167) SUBROUTINE FACAGE             &
(  168) &           (CDNOMC, LDGARD)
(  169) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  170) &                   FA_COM_DEFAULT_INIT,  &
(  171) &                   NEW_FA_DEFAULT
(  172) USE LFI_PRECISION
(  173) IMPLICIT NONE
(  174) ! Arguments
(  175) CHARACTER (LEN=*)      CDNOMC                                 ! IN   






NVFORTRAN (Version     23.1)          02/24/2023  13:54:29      page 10

(  176) LOGICAL                LDGARD                                 ! IN   
(  177) # 178 "facage.F90"
(  178) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  179) # 180 "facage.F90"
(  180) CALL FACAGE_MT                 &
(  181) &           (FA, CDNOMC, LDGARD)
(  182) # 183 "facage.F90"
(  183) END SUBROUTINE FACAGE
(  184) # 185 "facage.F90"
(  185) SUBROUTINE FACAGE_MT             &
(  186) &           (FA, CDNOMC, LDGARD)
(  187) USE FA_MOD, ONLY : FA_COM
(  188) USE LFI_PRECISION
(  189) IMPLICIT NONE
(  190) ! Arguments
(  191) TYPE (FA_COM)          FA                                     ! INOUT
(  192) CHARACTER (LEN=*)      CDNOMC                                 ! IN   
(  193) LOGICAL                LDGARD                                 ! IN   
(  194) ! Local integers
(  195) ! Convert arguments
(  196) # 198 "facage.F90"
(  198) CALL FACAGE_MT64               &
(  199) &           (FA, CDNOMC, LDGARD)
(  200) # 202 "facage.F90"
(  202) END SUBROUTINE FACAGE_MT
(  203) # 204 "facage.F90"
(  204) !INTF CDNOMC        IN    
(  205) !INTF LDGARD        IN    
