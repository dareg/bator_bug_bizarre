


NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: faienc.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAIENC_MT64                                              &
(    4) &                     (FA,  KREP,   KNUMER, CDPREF, KNIVAU, CDSUFF, &
(    5) &                      PCHAMP, LDCOSP)
(    6) USE FA_MOD, ONLY : FA_COM, FAGR1TAB
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !      Sous-programme d'ECRITURE d'un CHAMP HORIZONTAL sur un fichier
(   13) !     ARPEGE.
(   14) !       ( Integration par Ecriture d'un (Nouveau ?) Champ )
(   15) !**
(   16) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   17) !                KNUMER (Entree) ==> Numero de l'unite logique;
(   18) !                CDPREF (Entree) ==> Prefixe eventuel du nom d'article;
(   19) !                KNIVAU (Entree) ==> Niveau vertical eventuel;
(   20) !                CDSUFF (Entree) ==> Suffixe eventuel du nom d'article;
(   21) !    ( Tableau ) PCHAMP (Entree) ==> Valeurs REELLES du champ a ecrire;
(   22) !                LDCOSP (Entree) ==> Vrai si le champ est represente
(   23) !                                    par des coefficients spectraux.
(   24) !
(   25) !     Modifications
(   26) !     -------------
(   27) !
(   28) !    Avril 1998: Partie "codage" (paragraphe 3 du sous-programme)
(   29) !                demenagee dans un sous-programme a usage interne au
(   30) !                logiciel (FACINE). Le but est de pouvoir, sur machine






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 3

(   31) !                a memoire distribuee, separer codage (via FACOND) et
(   32) !                ecriture (via FAISAN) afin de paralleliser le codage.
(   33) !
(   34) !  Avril 2004, D. Paradis, DSI/DEV:
(   35) !
(   36) !    -Declaration IVALCO en ALLOCATABLE (gain memoire)
(   37) !
(   38) !
(   39) !
(   40) TYPE(FA_COM) :: FA
(   41) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIVAU
(   42) !
(   43) REAL (KIND=JPDBLR) PCHAMP (*), ZUNDF
(   44) !
(   45) CHARACTER CDPREF*(*), CDSUFF*(*)
(   46) !
(   47) LOGICAL LDCOSP, LLUNDF
(   48) TYPE (FAGR1TAB) YLGR1TAB
(   49) !
(   50) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   51) IF (LHOOK) CALL DR_HOOK('FAIENC_MT',0,ZHOOK_HANDLE)
(   52) 
(   53) LLUNDF = .FALSE.
(   54) ZUNDF  = 0._JPDBLR
(   55) 
(   56) CALL FAIEN1_MT64 (FA,  KREP,   KNUMER, CDPREF, KNIVAU, CDSUFF, &
(   57)                 & PCHAMP, LDCOSP, LLUNDF, ZUNDF, YLGR1TAB)
(   58) 
(   59) IF (LHOOK) CALL DR_HOOK('FAIENC_MT',1,ZHOOK_HANDLE)
(   60) 
(   61) END SUBROUTINE FAIENC_MT64
(   62) 
(   63) ! Oct-2012 P. Marguinaud 64b LFI
(   64) SUBROUTINE FAIENC64                                        &
(   65) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(   66) &            LDCOSP)
(   67) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   68) &                  FA_COM_DEFAULT_INIT,  &
(   69) &                  NEW_FA_DEFAULT
(   70) USE LFI_PRECISION
(   71) IMPLICIT NONE
(   72) ! Arguments
(   73) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   74) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   75) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(   76) INTEGER (KIND=JPLIKB)  KNIVAU                                 ! IN   
(   77) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(   78) REAL (KIND=JPDBLR)     PCHAMP     (*)                         ! IN   
(   79) LOGICAL                LDCOSP                                 ! IN   
(   80) 
(   81) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   82) 
(   83) CALL FAIENC_MT64                                               &
(   84) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(   85) &            LDCOSP)
(   86) 
(   87) END SUBROUTINE FAIENC64
(   88) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 4

(   89) SUBROUTINE FAIENC                                          &
(   90) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(   91) &            LDCOSP)
(   92) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   93) &                  FA_COM_DEFAULT_INIT,  &
(   94) &                  NEW_FA_DEFAULT
(   95) USE LFI_PRECISION
(   96) IMPLICIT NONE
(   97) ! Arguments
(   98) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(   99) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  100) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  101) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  102) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  103) REAL (KIND=JPDBLR)     PCHAMP     (*)                         ! IN   
(  104) LOGICAL                LDCOSP                                 ! IN   
(  105) 
(  106) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  107) 
(  108) CALL FAIENC_MT                                                 &
(  109) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(  110) &           LDCOSP)
(  111) 
(  112) END SUBROUTINE FAIENC
(  113) 
(  114) SUBROUTINE FAIENC_MT                                           &
(  115) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(  116) &            LDCOSP)
(  117) USE FA_MOD, ONLY : FA_COM
(  118) USE LFI_PRECISION
(  119) IMPLICIT NONE
(  120) ! Arguments
(  121) TYPE (FA_COM)          FA                                     ! INOUT
(  122) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  123) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  124) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  125) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  126) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  127) REAL (KIND=JPDBLR)     PCHAMP     (*)                         ! IN   
(  128) LOGICAL                LDCOSP                                 ! IN   
(  129) ! Local integers
(  130) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  131) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  132) INTEGER (KIND=JPLIKB)  INIVAU                                 ! IN   
(  133) ! Convert arguments
(  134) 
(  135) INUMER     = INT (    KNUMER, JPLIKB)
(  136) INIVAU     = INT (    KNIVAU, JPLIKB)
(  137) 
(  138) CALL FAIENC_MT64                                               &
(  139) &           (FA, IREP, INUMER, CDPREF, INIVAU, CDSUFF, PCHAMP, &
(  140) &            LDCOSP)
(  141) 
(  142) KREP       = INT (      IREP, JPLIKM)
(  143) 
(  144) END SUBROUTINE FAIENC_MT
(  145) 
(  146) !INTF KREP            OUT                               






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 5

(  147) !INTF KNUMER        IN                                  
(  148) !INTF CDPREF        IN                                  
(  149) !INTF KNIVAU        IN                                  
(  150) !INTF CDSUFF        IN                                  
(  151) !INTF PCHAMP        IN    DIMS=*                        
(  152) !INTF LDCOSP        IN                                  
(  153) 
(  154) 
























































NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 6

(    1) # 1 "faienc.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAIENC_MT64                                              &
(    4) &                     (FA,  KREP,   KNUMER, CDPREF, KNIVAU, CDSUFF, &
(    5) &                      PCHAMP, LDCOSP)
(    6) USE FA_MOD, ONLY : FA_COM, FAGR1TAB
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !      Sous-programme d'ECRITURE d'un CHAMP HORIZONTAL sur un fichier
(   13) !     ARPEGE.
(   14) !       ( Integration par Ecriture d'un (Nouveau ?) Champ )
(   15) !**
(   16) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   17) !                KNUMER (Entree) ==> Numero de l'unite logique;
(   18) !                CDPREF (Entree) ==> Prefixe eventuel du nom d'article;
(   19) !                KNIVAU (Entree) ==> Niveau vertical eventuel;
(   20) !                CDSUFF (Entree) ==> Suffixe eventuel du nom d'article;
(   21) !    ( Tableau ) PCHAMP (Entree) ==> Valeurs REELLES du champ a ecrire;
(   22) !                LDCOSP (Entree) ==> Vrai si le champ est represente
(   23) !                                    par des coefficients spectraux.
(   24) !
(   25) !     Modifications
(   26) !     -------------
(   27) !
(   28) !    Avril 1998: Partie "codage" (paragraphe 3 du sous-programme)
(   29) !                demenagee dans un sous-programme a usage interne au
(   30) !                logiciel (FACINE). Le but est de pouvoir, sur machine
(   31) !                a memoire distribuee, separer codage (via FACOND) et
(   32) !                ecriture (via FAISAN) afin de paralleliser le codage.
(   33) !
(   34) !  Avril 2004, D. Paradis, DSI/DEV:
(   35) !
(   36) !    -Declaration IVALCO en ALLOCATABLE (gain memoire)
(   37) !
(   38) !
(   39) !
(   40) TYPE(FA_COM) :: FA
(   41) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIVAU
(   42) !
(   43) REAL (KIND=JPDBLR) PCHAMP (*), ZUNDF
(   44) !
(   45) CHARACTER CDPREF*(*), CDSUFF*(*)
(   46) !
(   47) LOGICAL LDCOSP, LLUNDF
(   48) TYPE (FAGR1TAB) YLGR1TAB
(   49) !
(   50) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   51) IF (LHOOK) CALL DR_HOOK('FAIENC_MT',0,ZHOOK_HANDLE)
(   52) # 53 "faienc.F90"
(   53) LLUNDF = .FALSE.
(   54) ZUNDF  = 0._JPDBLR
(   55) # 56 "faienc.F90"
(   56) CALL FAIEN1_MT64 (FA,  KREP,   KNUMER, CDPREF, KNIVAU, CDSUFF, &
(   57)                 & PCHAMP, LDCOSP, LLUNDF, ZUNDF, YLGR1TAB)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 7

(   58) # 59 "faienc.F90"
(   59) IF (LHOOK) CALL DR_HOOK('FAIENC_MT',1,ZHOOK_HANDLE)
(   60) # 61 "faienc.F90"
(   61) END SUBROUTINE FAIENC_MT64
(   62) # 63 "faienc.F90"
(   63) ! Oct-2012 P. Marguinaud 64b LFI
(   64) SUBROUTINE FAIENC64                                        &
(   65) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(   66) &            LDCOSP)
(   67) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   68) &                  FA_COM_DEFAULT_INIT,  &
(   69) &                  NEW_FA_DEFAULT
(   70) USE LFI_PRECISION
(   71) IMPLICIT NONE
(   72) ! Arguments
(   73) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(   74) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   75) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(   76) INTEGER (KIND=JPLIKB)  KNIVAU                                 ! IN   
(   77) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(   78) REAL (KIND=JPDBLR)     PCHAMP     (*)                         ! IN   
(   79) LOGICAL                LDCOSP                                 ! IN   
(   80) # 81 "faienc.F90"
(   81) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   82) # 83 "faienc.F90"
(   83) CALL FAIENC_MT64                                               &
(   84) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(   85) &            LDCOSP)
(   86) # 87 "faienc.F90"
(   87) END SUBROUTINE FAIENC64
(   88) # 89 "faienc.F90"
(   89) SUBROUTINE FAIENC                                          &
(   90) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(   91) &            LDCOSP)
(   92) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   93) &                  FA_COM_DEFAULT_INIT,  &
(   94) &                  NEW_FA_DEFAULT
(   95) USE LFI_PRECISION
(   96) IMPLICIT NONE
(   97) ! Arguments
(   98) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(   99) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  100) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  101) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  102) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  103) REAL (KIND=JPDBLR)     PCHAMP     (*)                         ! IN   
(  104) LOGICAL                LDCOSP                                 ! IN   
(  105) # 106 "faienc.F90"
(  106) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  107) # 108 "faienc.F90"
(  108) CALL FAIENC_MT                                                 &
(  109) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &
(  110) &           LDCOSP)
(  111) # 112 "faienc.F90"
(  112) END SUBROUTINE FAIENC
(  113) # 114 "faienc.F90"
(  114) SUBROUTINE FAIENC_MT                                           &
(  115) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, PCHAMP, &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:55      page 8

(  116) &            LDCOSP)
(  117) USE FA_MOD, ONLY : FA_COM
(  118) USE LFI_PRECISION
(  119) IMPLICIT NONE
(  120) ! Arguments
(  121) TYPE (FA_COM)          FA                                     ! INOUT
(  122) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  123) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  124) CHARACTER (LEN=*)      CDPREF                                 ! IN   
(  125) INTEGER (KIND=JPLIKM)  KNIVAU                                 ! IN   
(  126) CHARACTER (LEN=*)      CDSUFF                                 ! IN   
(  127) REAL (KIND=JPDBLR)     PCHAMP     (*)                         ! IN   
(  128) LOGICAL                LDCOSP                                 ! IN   
(  129) ! Local integers
(  130) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  131) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  132) INTEGER (KIND=JPLIKB)  INIVAU                                 ! IN   
(  133) ! Convert arguments
(  134) # 135 "faienc.F90"
(  135) INUMER     = INT (    KNUMER, JPLIKB)
(  136) INIVAU     = INT (    KNIVAU, JPLIKB)
(  137) # 138 "faienc.F90"
(  138) CALL FAIENC_MT64                                               &
(  139) &           (FA, IREP, INUMER, CDPREF, INIVAU, CDSUFF, PCHAMP, &
(  140) &            LDCOSP)
(  141) # 142 "faienc.F90"
(  142) KREP       = INT (      IREP, JPLIKM)
(  143) # 144 "faienc.F90"
(  144) END SUBROUTINE FAIENC_MT
(  145) # 146 "faienc.F90"
(  146) !INTF KREP            OUT                               
(  147) !INTF KNUMER        IN                                  
(  148) !INTF CDPREF        IN                                  
(  149) !INTF KNIVAU        IN                                  
(  150) !INTF CDSUFF        IN                                  
(  151) !INTF PCHAMP        IN    DIMS=*                        
(  152) !INTF LDCOSP        IN                                  
