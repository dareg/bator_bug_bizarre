


NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: faquin.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAQUIN_MT64                                             &
(    4) &                     (FA,  KREP, KNUMER, CDPREF, KNIVAU, CDSUFF,  &
(    5) &                      CDNOMA, KLNOMA)
(    6) USE FA_MOD, ONLY : FA_COM
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !      Sous-programme de decomposition du nom d'un article associe a un 
(   13) !     champ.
(   14) !**
(   15) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   16) !                KNUMER (Entree) ==> Numero de l'unite logique;
(   17) !                CDPREF (Sortie) ==> Prefixe eventuel du nom d'article;
(   18) !                KNIVAU (Sortie) ==> Niveau vertical eventuel;
(   19) !                CDSUFF (Sortie) ==> Suffixe eventuel du nom d'article;
(   20) !                CDNOMA (Entree) ==> Nom de l'article LFI
(   21) !                KLNOMA (Entree) ==> Longueur du nom de l'article LFI
(   22) !     
(   23) !    P MARGUINAUD 18/03/2013 CREATION
(   24) !
(   25) !
(   26) TYPE(FA_COM) :: FA
(   27) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIVAU, KLNOMA
(   28) !
(   29) INTEGER (KIND=JPLIKB) IREP, ILPRFU, ILSUFU, IRANG, INIMES, INIVAU
(   30) INTEGER (KIND=JPLIKB) IB1PAR (FA%JPLB1P), ILNOMA






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 3

(   31) !
(   32) LOGICAL LLVERF, LLRLFI
(   33) !
(   34) CHARACTER CDPREF*(*), CDSUFF*(*), CDNOMA*(*)
(   35) !
(   36) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   37) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   38) CHARACTER(LEN=FA%JPXNOM) CLNOMA
(   39) LOGICAL                  LLFATA
(   40) 
(   41) !**
(   42) !     1.  -  CONTROLES ET INITIALISATIONS.
(   43) !-----------------------------------------------------------------------
(   44) !
(   45) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   46) IF (LHOOK) CALL DR_HOOK('FAQUIN_MT',0,ZHOOK_HANDLE)
(   47) 
(   48) IREP=0
(   49) 
(   50) LLVERF=.FALSE.
(   51) LLRLFI=.FALSE.
(   52) ILPRFU=INT (LEN (CDPREF), JPLIKB)
(   53) ILSUFU=INT (LEN (CDSUFF), JPLIKB)
(   54) 
(   55) CALL FANUMU_MT64 (FA, KNUMER,IRANG)
(   56) !
(   57) IF (IRANG.EQ.0) THEN
(   58)   IREP=-51
(   59)   GOTO 1001
(   60) ENDIF
(   61) !
(   62) !         Verrouillage eventuel du fichier.
(   63) !
(   64) IF (FA%LFAMUL) CALL LFIVER_MT64 (FA%LFI, FA%FICHIER(IRANG)%VRFICH,'ON')
(   65) LLVERF=FA%LFAMUL
(   66) !
(   67) IF (FA%FICHIER(IRANG)%LCREAF) THEN
(   68)   IREP=-85
(   69)   GOTO 1001
(   70) ENDIF
(   71) 
(   72) CDPREF = ''
(   73) CDSUFF = ''
(   74) KNIVAU = 0
(   75) 
(   76) IF (CDNOMA (1:8) == 'SPECSURF') THEN
(   77)   CDPREF = CDNOMA (1:8)
(   78)   CDSUFF = CDNOMA (9:KLNOMA)
(   79) ELSEIF (CDNOMA (1:4) == 'PROF') THEN
(   80)   CDPREF = CDNOMA (1:4)
(   81)   CDSUFF = CDNOMA (5:KLNOMA)
(   82) ELSEIF (CDNOMA (1:4) == 'SURF') THEN
(   83)   CDPREF = CDNOMA (1:4)
(   84)   CDSUFF = CDNOMA (5:KLNOMA)
(   85) ELSEIF (CDNOMA (1:4) == 'SOMM') THEN
(   86)   CDPREF = CDNOMA (1:4)
(   87)   CDSUFF = CDNOMA (5:KLNOMA)
(   88) ELSEIF (CDNOMA (1:4) == 'ICAO') THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 4

(   89)   CDPREF = CDNOMA (1:4)
(   90)   CDSUFF = CDNOMA (5:KLNOMA)
(   91) ELSEIF (CDNOMA (1:4) == 'SFX.') THEN
(   92)   CDPREF = CDNOMA (1:4)
(   93)   CDSUFF = CDNOMA (5:KLNOMA)
(   94) ELSEIF (CDNOMA (1:3) == 'CLS') THEN
(   95)   CDPREF = CDNOMA (1:3)
(   96)   CDSUFF = CDNOMA (4:KLNOMA)
(   97) ELSEIF (CDNOMA (1:3) == 'MSL') THEN
(   98)   CDPREF = CDNOMA (1:3)
(   99)   CDSUFF = CDNOMA (4:KLNOMA)
(  100) ELSEIF (CDNOMA (1:3) == 'CLP') THEN
(  101)   CDPREF = CDNOMA (1:3)
(  102)   CDSUFF = CDNOMA (4:KLNOMA)
(  103) ELSEIF (CDNOMA (1:3) == 'JET') THEN
(  104)   CDPREF = CDNOMA (1:3)
(  105)   CDSUFF = CDNOMA (4:KLNOMA)
(  106) ELSEIF (CDNOMA (1:3) == 'INT') THEN
(  107)   CDPREF = CDNOMA (1:3)
(  108)   CDSUFF = CDNOMA (4:KLNOMA)
(  109) ELSEIF (CDNOMA (1:2) == 'KT' .AND. LNUM (CDNOMA(3:KLNOMA), INIVAU, '(I3.3)')) THEN
(  110)   CDPREF = CDNOMA (1:2)
(  111)   CDSUFF = CDNOMA (6:KLNOMA)
(  112)   KNIVAU = INIVAU
(  113) ELSEIF (CDNOMA (1:2) == 'KB' .AND. LNUM (CDNOMA(3:KLNOMA), INIVAU, '(I3.3)')) THEN
(  114)   CDPREF = CDNOMA (1:2)
(  115)   CDSUFF = CDNOMA (6:KLNOMA)
(  116)   KNIVAU = INIVAU
(  117) ELSEIF (CDNOMA (1:1) == 'P' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I5.5)')) THEN
(  118)   CDPREF = CDNOMA (1:1)
(  119)   CDSUFF = CDNOMA (7:KLNOMA)
(  120)   KNIVAU = INIVAU
(  121)   IF (KNIVAU == 0) KNIVAU = 100000
(  122) ELSEIF (CDNOMA (1:1) == 'H' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I5.5)')) THEN
(  123)   CDPREF = CDNOMA (1:1)
(  124)   CDSUFF = CDNOMA (7:KLNOMA)
(  125)   KNIVAU = INIVAU
(  126) ELSEIF (CDNOMA (1:1) == 'F' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I4.4)')) THEN
(  127)   CDPREF = CDNOMA (1:1)
(  128)   CDSUFF = CDNOMA (6:KLNOMA)
(  129)   KNIVAU = INIVAU
(  130) ELSEIF (CDNOMA (1:1) == 'V' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I3.3)')) THEN
(  131)   CDPREF = CDNOMA (1:1)
(  132)   CDSUFF = CDNOMA (5:KLNOMA)
(  133)   KNIVAU = INIVAU
(  134) ELSEIF (CDNOMA (1:1) == 'T' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I3.3)')) THEN
(  135)   CDPREF = CDNOMA (1:1)
(  136)   CDSUFF = CDNOMA (5:KLNOMA)
(  137)   KNIVAU = INIVAU
(  138) ELSEIF (CDNOMA (1:1) == 'S' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I3.3)')) THEN
(  139)   CDPREF = CDNOMA (1:1)
(  140)   CDSUFF = CDNOMA (5:KLNOMA)
(  141)   KNIVAU = INIVAU
(  142) ELSEIF (CDNOMA (1:1) == 'X' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I3.3)')) THEN
(  143)   CDPREF = CDNOMA (1:1)
(  144)   CDSUFF = CDNOMA (5:KLNOMA)
(  145)   KNIVAU = INIVAU
(  146) ELSE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 5

(  147)   CDPREF = CDNOMA (1:4)
(  148)   CDSUFF = CDNOMA (5:)
(  149) ENDIF
(  150) 
(  151) ILNOMA=FA%JPXNOM
(  152) CALL FANFAN_MT64                                          &
(  153) &            (FA,  IREP, KNUMER, CDPREF, KNIVAU, CDSUFF,  &
(  154) &             CLNOMA, ILNOMA)
(  155) 
(  156) IF (IREP.NE.0) GOTO 1001
(  157) 
(  158) IF (CLNOMA (1:ILNOMA) /= CDNOMA (1:KLNOMA)) THEN
(  159)   IREP=-65
(  160) ENDIF
(  161) 
(  162) 1001 CONTINUE
(  163) KREP=IREP
(  164) LLFATA=LLMOER (IREP,IRANG)
(  165) !
(  166) !        Deverrouillage eventuel du fichier.
(  167) !
(  168) IF (LLVERF) CALL LFIVER_MT64 (FA%LFI, FA%FICHIER(IRANG)%VRFICH,'OFF')
(  169) 
(  170) IF (LLFATA) THEN
(  171)   INIMES=2
(  172) ELSE
(  173)   INIMES=IXNVMS(IRANG)
(  174) ENDIF
(  175) !
(  176) IF (.NOT.LLFATA.AND.INIMES.NE.2)  THEN 
(  177)   IF (LHOOK) CALL DR_HOOK('FAQUIN_MT',1,ZHOOK_HANDLE)
(  178)   RETURN
(  179) ENDIF
(  180) !
(  181) CLNSPR='FAQUIN'
(  182) !
(  183) WRITE (UNIT=CLMESS,FMT='(''KREP='',I5,'', KNUMER='',I3, &
(  184) &       '', CDPREF='''''',A,'''''', KNIVAU='',I6,       &
(  185) &       '', CDSUFF='''''',A,'''')')                     &
(  186) &   KREP,KNUMER,CDPREF(1:ILPRFU),KNIVAU,CDSUFF(1:ILSUFU)
(  187) CALL FAIPAR_MT64                                       &
(  188) &               (FA, KNUMER,INIMES,IREP,LLFATA,CLMESS, &
(  189) &                CLNSPR, CDNOMA(1:KLNOMA),LLRLFI)
(  190) !
(  191) IF (LHOOK) CALL DR_HOOK('FAQUIN_MT',1,ZHOOK_HANDLE)
(  192) 
(  193) CONTAINS
(  194) 
(  195) #include "facom2.llmoer.h"
(  196) #include "facom2.ixnvms.h"
(  197) 
(  198) LOGICAL FUNCTION LNUM (CDST, KNUM, CDFMT)
(  199) 
(  200) CHARACTER (LEN=*) :: CDST, CDFMT
(  201) INTEGER (KIND=JPLIKB) :: KNUM
(  202) INTEGER :: IREP
(  203) 
(  204) IREP = 0






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 6

(  205) READ (UNIT=CDST, FMT=CDFMT, IOSTAT=IREP) KNUM
(  206) 
(  207) IF (IREP == 0) THEN
(  208)   LNUM = .TRUE.
(  209) ELSE
(  210)   LNUM = .FALSE.
(  211)   KNUM = 0
(  212) ENDIF
(  213) 
(  214) END FUNCTION LNUM
(  215) 
(  216) END SUBROUTINE FAQUIN_MT64
(  217) 
(  218) 
(  219) 
(  220) ! Oct-2012 P. Marguinaud 64b LFI
(  221) SUBROUTINE FAQUIN64                                        &
(  222) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  223) &            KLNOMA)
(  224) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  225) &                  FA_COM_DEFAULT_INIT,  &
(  226) &                  NEW_FA_DEFAULT
(  227) USE LFI_PRECISION
(  228) IMPLICIT NONE
(  229) ! Arguments
(  230) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(  231) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(  232) CHARACTER (LEN=*)      CDPREF                                 !   OUT
(  233) INTEGER (KIND=JPLIKB)  KNIVAU                                 !   OUT
(  234) CHARACTER (LEN=*)      CDSUFF                                 !   OUT
(  235) CHARACTER (LEN=*)      CDNOMA                                 ! IN   
(  236) INTEGER (KIND=JPLIKB)  KLNOMA                                 ! IN   
(  237) 
(  238) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  239) 
(  240) CALL FAQUIN_MT64                                               &
(  241) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  242) &            KLNOMA)
(  243) 
(  244) END SUBROUTINE FAQUIN64
(  245) 
(  246) SUBROUTINE FAQUIN                                          &
(  247) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  248) &            KLNOMA)
(  249) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  250) &                  FA_COM_DEFAULT_INIT,  &
(  251) &                  NEW_FA_DEFAULT
(  252) USE LFI_PRECISION
(  253) IMPLICIT NONE
(  254) ! Arguments
(  255) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  256) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  257) CHARACTER (LEN=*)      CDPREF                                 !   OUT
(  258) INTEGER (KIND=JPLIKM)  KNIVAU                                 !   OUT
(  259) CHARACTER (LEN=*)      CDSUFF                                 !   OUT
(  260) CHARACTER (LEN=*)      CDNOMA                                 ! IN   
(  261) INTEGER (KIND=JPLIKM)  KLNOMA                                 ! IN   
(  262) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 7

(  263) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  264) 
(  265) CALL FAQUIN_MT                                                 &
(  266) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  267) &            KLNOMA)
(  268) 
(  269) END SUBROUTINE FAQUIN
(  270) 
(  271) SUBROUTINE FAQUIN_MT                                           &
(  272) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  273) &            KLNOMA)
(  274) USE FA_MOD, ONLY : FA_COM
(  275) USE LFI_PRECISION
(  276) IMPLICIT NONE
(  277) ! Arguments
(  278) TYPE (FA_COM)          FA                                     ! INOUT
(  279) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  280) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  281) CHARACTER (LEN=*)      CDPREF                                 !   OUT
(  282) INTEGER (KIND=JPLIKM)  KNIVAU                                 !   OUT
(  283) CHARACTER (LEN=*)      CDSUFF                                 !   OUT
(  284) CHARACTER (LEN=*)      CDNOMA                                 ! IN   
(  285) INTEGER (KIND=JPLIKM)  KLNOMA                                 ! IN   
(  286) ! Local integers
(  287) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  288) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  289) INTEGER (KIND=JPLIKB)  INIVAU                                 !   OUT
(  290) INTEGER (KIND=JPLIKB)  ILNOMA                                 ! IN   
(  291) ! Convert arguments
(  292) 
(  293) INUMER     = INT (    KNUMER, JPLIKB)
(  294) ILNOMA     = INT (    KLNOMA, JPLIKM)
(  295) 
(  296) CALL FAQUIN_MT64                                               &
(  297) &           (FA, IREP, INUMER, CDPREF, INIVAU, CDSUFF, CDNOMA, &
(  298) &            ILNOMA)
(  299) 
(  300) KREP       = INT (      IREP, JPLIKM)
(  301) KNIVAU     = INT (    INIVAU, JPLIKB)
(  302) 
(  303) END SUBROUTINE FAQUIN_MT
(  304) 
(  305) !INTF KREP            OUT 
(  306) !INTF KNUMER        IN    
(  307) !INTF CDPREF          OUT 
(  308) !INTF KNIVAU          OUT 
(  309) !INTF CDSUFF          OUT 
(  310) !INTF CDNOMA        IN    
(  311) !INTF KLNOMA        IN    
(  312) 














NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 8

(    1) # 1 "faquin.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAQUIN_MT64                                             &
(    4) &                     (FA,  KREP, KNUMER, CDPREF, KNIVAU, CDSUFF,  &
(    5) &                      CDNOMA, KLNOMA)
(    6) USE FA_MOD, ONLY : FA_COM
(    7) USE PARKIND1, ONLY : JPRB
(    8) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    9) USE LFI_PRECISION
(   10) IMPLICIT NONE
(   11) !****
(   12) !      Sous-programme de decomposition du nom d'un article associe a un 
(   13) !     champ.
(   14) !**
(   15) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   16) !                KNUMER (Entree) ==> Numero de l'unite logique;
(   17) !                CDPREF (Sortie) ==> Prefixe eventuel du nom d'article;
(   18) !                KNIVAU (Sortie) ==> Niveau vertical eventuel;
(   19) !                CDSUFF (Sortie) ==> Suffixe eventuel du nom d'article;
(   20) !                CDNOMA (Entree) ==> Nom de l'article LFI
(   21) !                KLNOMA (Entree) ==> Longueur du nom de l'article LFI
(   22) !     
(   23) !    P MARGUINAUD 18/03/2013 CREATION
(   24) !
(   25) !
(   26) TYPE(FA_COM) :: FA
(   27) INTEGER (KIND=JPLIKB) KREP, KNUMER, KNIVAU, KLNOMA
(   28) !
(   29) INTEGER (KIND=JPLIKB) IREP, ILPRFU, ILSUFU, IRANG, INIMES, INIVAU
(   30) INTEGER (KIND=JPLIKB) IB1PAR (FA%JPLB1P), ILNOMA
(   31) !
(   32) LOGICAL LLVERF, LLRLFI
(   33) !
(   34) CHARACTER CDPREF*(*), CDSUFF*(*), CDNOMA*(*)
(   35) !
(   36) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   37) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   38) CHARACTER(LEN=FA%JPXNOM) CLNOMA
(   39) LOGICAL                  LLFATA
(   40) # 41 "faquin.F90"
(   41) !**
(   42) !     1.  -  CONTROLES ET INITIALISATIONS.
(   43) !-----------------------------------------------------------------------
(   44) !
(   45) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   46) IF (LHOOK) CALL DR_HOOK('FAQUIN_MT',0,ZHOOK_HANDLE)
(   47) # 48 "faquin.F90"
(   48) IREP=0
(   49) # 50 "faquin.F90"
(   50) LLVERF=.FALSE.
(   51) LLRLFI=.FALSE.
(   52) ILPRFU=INT (LEN (CDPREF), JPLIKB)
(   53) ILSUFU=INT (LEN (CDSUFF), JPLIKB)
(   54) # 55 "faquin.F90"
(   55) CALL FANUMU_MT64 (FA, KNUMER,IRANG)
(   56) !
(   57) IF (IRANG.EQ.0) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 9

(   58)   IREP=-51
(   59)   GOTO 1001
(   60) ENDIF
(   61) !
(   62) !         Verrouillage eventuel du fichier.
(   63) !
(   64) IF (FA%LFAMUL) CALL LFIVER_MT64 (FA%LFI, FA%FICHIER(IRANG)%VRFICH,'ON')
(   65) LLVERF=FA%LFAMUL
(   66) !
(   67) IF (FA%FICHIER(IRANG)%LCREAF) THEN
(   68)   IREP=-85
(   69)   GOTO 1001
(   70) ENDIF
(   71) # 72 "faquin.F90"
(   72) CDPREF = ''
(   73) CDSUFF = ''
(   74) KNIVAU = 0
(   75) # 76 "faquin.F90"
(   76) IF (CDNOMA (1:8) == 'SPECSURF') THEN
(   77)   CDPREF = CDNOMA (1:8)
(   78)   CDSUFF = CDNOMA (9:KLNOMA)
(   79) ELSEIF (CDNOMA (1:4) == 'PROF') THEN
(   80)   CDPREF = CDNOMA (1:4)
(   81)   CDSUFF = CDNOMA (5:KLNOMA)
(   82) ELSEIF (CDNOMA (1:4) == 'SURF') THEN
(   83)   CDPREF = CDNOMA (1:4)
(   84)   CDSUFF = CDNOMA (5:KLNOMA)
(   85) ELSEIF (CDNOMA (1:4) == 'SOMM') THEN
(   86)   CDPREF = CDNOMA (1:4)
(   87)   CDSUFF = CDNOMA (5:KLNOMA)
(   88) ELSEIF (CDNOMA (1:4) == 'ICAO') THEN
(   89)   CDPREF = CDNOMA (1:4)
(   90)   CDSUFF = CDNOMA (5:KLNOMA)
(   91) ELSEIF (CDNOMA (1:4) == 'SFX.') THEN
(   92)   CDPREF = CDNOMA (1:4)
(   93)   CDSUFF = CDNOMA (5:KLNOMA)
(   94) ELSEIF (CDNOMA (1:3) == 'CLS') THEN
(   95)   CDPREF = CDNOMA (1:3)
(   96)   CDSUFF = CDNOMA (4:KLNOMA)
(   97) ELSEIF (CDNOMA (1:3) == 'MSL') THEN
(   98)   CDPREF = CDNOMA (1:3)
(   99)   CDSUFF = CDNOMA (4:KLNOMA)
(  100) ELSEIF (CDNOMA (1:3) == 'CLP') THEN
(  101)   CDPREF = CDNOMA (1:3)
(  102)   CDSUFF = CDNOMA (4:KLNOMA)
(  103) ELSEIF (CDNOMA (1:3) == 'JET') THEN
(  104)   CDPREF = CDNOMA (1:3)
(  105)   CDSUFF = CDNOMA (4:KLNOMA)
(  106) ELSEIF (CDNOMA (1:3) == 'INT') THEN
(  107)   CDPREF = CDNOMA (1:3)
(  108)   CDSUFF = CDNOMA (4:KLNOMA)
(  109) ELSEIF (CDNOMA (1:2) == 'KT' .AND. LNUM (CDNOMA(3:KLNOMA), INIVAU, '(I3.3)')) THEN
(  110)   CDPREF = CDNOMA (1:2)
(  111)   CDSUFF = CDNOMA (6:KLNOMA)
(  112)   KNIVAU = INIVAU
(  113) ELSEIF (CDNOMA (1:2) == 'KB' .AND. LNUM (CDNOMA(3:KLNOMA), INIVAU, '(I3.3)')) THEN
(  114)   CDPREF = CDNOMA (1:2)
(  115)   CDSUFF = CDNOMA (6:KLNOMA)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 10

(  116)   KNIVAU = INIVAU
(  117) ELSEIF (CDNOMA (1:1) == 'P' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I5.5)')) THEN
(  118)   CDPREF = CDNOMA (1:1)
(  119)   CDSUFF = CDNOMA (7:KLNOMA)
(  120)   KNIVAU = INIVAU
(  121)   IF (KNIVAU == 0) KNIVAU = 100000
(  122) ELSEIF (CDNOMA (1:1) == 'H' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I5.5)')) THEN
(  123)   CDPREF = CDNOMA (1:1)
(  124)   CDSUFF = CDNOMA (7:KLNOMA)
(  125)   KNIVAU = INIVAU
(  126) ELSEIF (CDNOMA (1:1) == 'F' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I4.4)')) THEN
(  127)   CDPREF = CDNOMA (1:1)
(  128)   CDSUFF = CDNOMA (6:KLNOMA)
(  129)   KNIVAU = INIVAU
(  130) ELSEIF (CDNOMA (1:1) == 'V' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I3.3)')) THEN
(  131)   CDPREF = CDNOMA (1:1)
(  132)   CDSUFF = CDNOMA (5:KLNOMA)
(  133)   KNIVAU = INIVAU
(  134) ELSEIF (CDNOMA (1:1) == 'T' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I3.3)')) THEN
(  135)   CDPREF = CDNOMA (1:1)
(  136)   CDSUFF = CDNOMA (5:KLNOMA)
(  137)   KNIVAU = INIVAU
(  138) ELSEIF (CDNOMA (1:1) == 'S' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I3.3)')) THEN
(  139)   CDPREF = CDNOMA (1:1)
(  140)   CDSUFF = CDNOMA (5:KLNOMA)
(  141)   KNIVAU = INIVAU
(  142) ELSEIF (CDNOMA (1:1) == 'X' .AND. LNUM (CDNOMA(2:KLNOMA), INIVAU, '(I3.3)')) THEN
(  143)   CDPREF = CDNOMA (1:1)
(  144)   CDSUFF = CDNOMA (5:KLNOMA)
(  145)   KNIVAU = INIVAU
(  146) ELSE
(  147)   CDPREF = CDNOMA (1:4)
(  148)   CDSUFF = CDNOMA (5:)
(  149) ENDIF
(  150) # 151 "faquin.F90"
(  151) ILNOMA=FA%JPXNOM
(  152) CALL FANFAN_MT64                                          &
(  153) &            (FA,  IREP, KNUMER, CDPREF, KNIVAU, CDSUFF,  &
(  154) &             CLNOMA, ILNOMA)
(  155) # 156 "faquin.F90"
(  156) IF (IREP.NE.0) GOTO 1001
(  157) # 158 "faquin.F90"
(  158) IF (CLNOMA (1:ILNOMA) /= CDNOMA (1:KLNOMA)) THEN
(  159)   IREP=-65
(  160) ENDIF
(  161) # 162 "faquin.F90"
(  162) 1001 CONTINUE
(  163) KREP=IREP
(  164) LLFATA=LLMOER (IREP,IRANG)
(  165) !
(  166) !        Deverrouillage eventuel du fichier.
(  167) !
(  168) IF (LLVERF) CALL LFIVER_MT64 (FA%LFI, FA%FICHIER(IRANG)%VRFICH,'OFF')
(  169) # 170 "faquin.F90"
(  170) IF (LLFATA) THEN
(  171)   INIMES=2
(  172) ELSE
(  173)   INIMES=IXNVMS(IRANG)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 11

(  174) ENDIF
(  175) !
(  176) IF (.NOT.LLFATA.AND.INIMES.NE.2)  THEN 
(  177)   IF (LHOOK) CALL DR_HOOK('FAQUIN_MT',1,ZHOOK_HANDLE)
(  178)   RETURN
(  179) ENDIF
(  180) !
(  181) CLNSPR='FAQUIN'
(  182) !
(  183) WRITE (UNIT=CLMESS,FMT='(''KREP='',I5,'', KNUMER='',I3, &
(  184) &       '', CDPREF='''''',A,'''''', KNIVAU='',I6,       &
(  185) &       '', CDSUFF='''''',A,'''')')                     &
(  186) &   KREP,KNUMER,CDPREF(1:ILPRFU),KNIVAU,CDSUFF(1:ILSUFU)
(  187) CALL FAIPAR_MT64                                       &
(  188) &               (FA, KNUMER,INIMES,IREP,LLFATA,CLMESS, &
(  189) &                CLNSPR, CDNOMA(1:KLNOMA),LLRLFI)
(  190) !
(  191) IF (LHOOK) CALL DR_HOOK('FAQUIN_MT',1,ZHOOK_HANDLE)
(  192) # 193 "faquin.F90"
(  193) CONTAINS
(  194) # 195 "faquin.F90"
(  195) # 1 ".D[27]/facom2.llmoer.h"
(    1) !
(    2) !       Fonction servant a rendre fatale ou non une erreur detectee,
(    3) !       a l'aide du code reponse courant, du niveau de filtrage global,
(    4) !       et de l'option d'erreur fatale propre au fichier.
(    5) !       s'il n'y a pas de fichier (I5678=0, d'ou dimensionnement de
(    6) !          *LERRFA*), le niveau de filtrage joue le role principal.
(    7) !
(    8) LOGICAL FUNCTION LLMOER (I1234,I5678)
(    9) INTEGER (KIND=JPLIKB) :: I1234,I5678
(   10) LLMOER=I1234.EQ.-66_JPLIKB .OR. (I1234.NE.0_JPLIKB .AND.(FA%NRFAGA.EQ.0_JPLIKB &
(   11)      & .OR. (FA%NRFAGA.EQ.1_JPLIKB .AND.FA%FICHIER(I5678)%LERRFA)))
(   12) END FUNCTION
(   13) # 196 "faquin.F90"
(  196) # 196 "faquin.F90"
(  196) # 1 ".D[27]/facom2.ixnvms.h"
(    1) !*
(    2) !       Fonction "en ligne" donnant le plus haut niveau de messagerie
(    3) !       acceptable pour l'unite logique de rang "I3456"
(    4) !       (utilisation des niveaux de messagerie global et propre au
(    5) !        fichier; s'il n'y a pas de fichier - I3456=0, d'ou le dimensio-
(    6) !        nnement de *NIVOMS* a partir de zero, le niveau de filtrage
(    7) !        global joue seul)
(    8) !
(    9) INTEGER (KIND=JPLIKB) FUNCTION IXNVMS (I3456)
(   10) INTEGER (KIND=JPLIKB) :: I3456
(   11) IXNVMS =MIN (2_JPLIKB ,2_JPLIKB *FA%NIMSGA,MAX (2_JPLIKB *FA%NIMSGA-2_JPLIKB ,FA%FICHIER(I3456)%NIVOMS))
(   12) END FUNCTION
(   13) # 197 "faquin.F90"
(  197) # 198 "faquin.F90"
(  198) LOGICAL FUNCTION LNUM (CDST, KNUM, CDFMT)
(  199) # 200 "faquin.F90"
(  200) CHARACTER (LEN=*) :: CDST, CDFMT
(  201) INTEGER (KIND=JPLIKB) :: KNUM
(  202) INTEGER :: IREP
(  203) # 204 "faquin.F90"
(  204) IREP = 0






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 12

(  205) READ (UNIT=CDST, FMT=CDFMT, IOSTAT=IREP) KNUM
(  206) # 207 "faquin.F90"
(  207) IF (IREP == 0) THEN
(  208)   LNUM = .TRUE.
(  209) ELSE
(  210)   LNUM = .FALSE.
(  211)   KNUM = 0
(  212) ENDIF
(  213) # 214 "faquin.F90"
(  214) END FUNCTION LNUM
(  215) # 216 "faquin.F90"
(  216) END SUBROUTINE FAQUIN_MT64
(  217) # 220 "faquin.F90"
(  220) ! Oct-2012 P. Marguinaud 64b LFI
(  221) SUBROUTINE FAQUIN64                                        &
(  222) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  223) &            KLNOMA)
(  224) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  225) &                  FA_COM_DEFAULT_INIT,  &
(  226) &                  NEW_FA_DEFAULT
(  227) USE LFI_PRECISION
(  228) IMPLICIT NONE
(  229) ! Arguments
(  230) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(  231) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(  232) CHARACTER (LEN=*)      CDPREF                                 !   OUT
(  233) INTEGER (KIND=JPLIKB)  KNIVAU                                 !   OUT
(  234) CHARACTER (LEN=*)      CDSUFF                                 !   OUT
(  235) CHARACTER (LEN=*)      CDNOMA                                 ! IN   
(  236) INTEGER (KIND=JPLIKB)  KLNOMA                                 ! IN   
(  237) # 238 "faquin.F90"
(  238) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  239) # 240 "faquin.F90"
(  240) CALL FAQUIN_MT64                                               &
(  241) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  242) &            KLNOMA)
(  243) # 244 "faquin.F90"
(  244) END SUBROUTINE FAQUIN64
(  245) # 246 "faquin.F90"
(  246) SUBROUTINE FAQUIN                                          &
(  247) &           (KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  248) &            KLNOMA)
(  249) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  250) &                  FA_COM_DEFAULT_INIT,  &
(  251) &                  NEW_FA_DEFAULT
(  252) USE LFI_PRECISION
(  253) IMPLICIT NONE
(  254) ! Arguments
(  255) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  256) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  257) CHARACTER (LEN=*)      CDPREF                                 !   OUT
(  258) INTEGER (KIND=JPLIKM)  KNIVAU                                 !   OUT
(  259) CHARACTER (LEN=*)      CDSUFF                                 !   OUT
(  260) CHARACTER (LEN=*)      CDNOMA                                 ! IN   
(  261) INTEGER (KIND=JPLIKM)  KLNOMA                                 ! IN   
(  262) # 263 "faquin.F90"
(  263) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  264) # 265 "faquin.F90"






NVFORTRAN (Version     23.1)          02/24/2023  13:54:45      page 13

(  265) CALL FAQUIN_MT                                                 &
(  266) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  267) &            KLNOMA)
(  268) # 269 "faquin.F90"
(  269) END SUBROUTINE FAQUIN
(  270) # 271 "faquin.F90"
(  271) SUBROUTINE FAQUIN_MT                                           &
(  272) &           (FA, KREP, KNUMER, CDPREF, KNIVAU, CDSUFF, CDNOMA, &
(  273) &            KLNOMA)
(  274) USE FA_MOD, ONLY : FA_COM
(  275) USE LFI_PRECISION
(  276) IMPLICIT NONE
(  277) ! Arguments
(  278) TYPE (FA_COM)          FA                                     ! INOUT
(  279) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  280) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  281) CHARACTER (LEN=*)      CDPREF                                 !   OUT
(  282) INTEGER (KIND=JPLIKM)  KNIVAU                                 !   OUT
(  283) CHARACTER (LEN=*)      CDSUFF                                 !   OUT
(  284) CHARACTER (LEN=*)      CDNOMA                                 ! IN   
(  285) INTEGER (KIND=JPLIKM)  KLNOMA                                 ! IN   
(  286) ! Local integers
(  287) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  288) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  289) INTEGER (KIND=JPLIKB)  INIVAU                                 !   OUT
(  290) INTEGER (KIND=JPLIKB)  ILNOMA                                 ! IN   
(  291) ! Convert arguments
(  292) # 293 "faquin.F90"
(  293) INUMER     = INT (    KNUMER, JPLIKB)
(  294) ILNOMA     = INT (    KLNOMA, JPLIKM)
(  295) # 296 "faquin.F90"
(  296) CALL FAQUIN_MT64                                               &
(  297) &           (FA, IREP, INUMER, CDPREF, INIVAU, CDSUFF, CDNOMA, &
(  298) &            ILNOMA)
(  299) # 300 "faquin.F90"
(  300) KREP       = INT (      IREP, JPLIKM)
(  301) KNIVAU     = INT (    INIVAU, JPLIKB)
(  302) # 303 "faquin.F90"
(  303) END SUBROUTINE FAQUIN_MT
(  304) # 305 "faquin.F90"
(  305) !INTF KREP            OUT 
(  306) !INTF KNUMER        IN    
(  307) !INTF CDPREF          OUT 
(  308) !INTF KNIVAU          OUT 
(  309) !INTF CDSUFF          OUT 
(  310) !INTF CDNOMA        IN    
(  311) !INTF KLNOMA        IN    
