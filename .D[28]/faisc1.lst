


NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: faisc1.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAISC1_MT64                  &
(    4) &                     (FA,  KREP, KRANG )
(    5) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !      Ce sous-programme initialise un tableau "reference" de
(   12) !      l'en-tete GRIB, section 1.
(   13) !      (routine appelee une seule fois pour un fichier donne)
(   14) !**
(   15) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   16) !                KRANG  (Entree) ==> Rang de l'unite logique;
(   17) !*
(   18) !
(   19) !
(   20) !
(   21) TYPE(FA_COM) :: FA
(   22) INTEGER (KIND=JPLIKB) KREP, KRANG
(   23) !
(   24) INTEGER (KIND=JPLIKB) I, INUMER
(   25) INTEGER (KIND=JPLIKB) INIMES, IRANGC
(   26) !
(   27) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   28) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   29) LOGICAL                  LLFATA
(   30) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 3

(   31) !**
(   32) !     0.  -  INITIALISATIONS ET CONTROLES
(   33) !-----------------------------------------------------------------------
(   34) !
(   35) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   36) IF (LHOOK) CALL DR_HOOK('FAISC1_MT',0,ZHOOK_HANDLE)
(   37) KREP=0
(   38) IF (KRANG.LE.0.OR.KRANG.GT.FA%JPNXFA) THEN
(   39)   KREP=-66
(   40)   GOTO 1001
(   41) ENDIF
(   42) IRANGC=FA%FICHIER(KRANG)%NUCADR
(   43) !**
(   44) !     1.  -  INIT. DU TAB. FA%NSEC1 REPRESENTANT LA SECTION 1 DE GRIBEX
(   45) !-----------------------------------------------------------------------
(   46) !
(   47) !  2: identification of centre
(   48) !
(   49) ! (defaut=85 pour Toulouse; pour en changer, utiliser FAREGU)
(   50) FA%FICHIER(KRANG)%NSEC1(2) = 85
(   51) !  3: generating process identification number, alloc by the orig. centre
(   52) IF (FA%CADRE(IRANGC)%LIMLAM) THEN
(   53) ! Il s'agit du modele Aladin
(   54)   FA%FICHIER(KRANG)%NSEC1(3) = 177
(   55) ELSE
(   56) ! Il s'agit du modele Arpege
(   57)   IF (FA%FICHIER(KRANG)%MADATE(7).GT.0) THEN
(   58) !     prevision
(   59)     FA%FICHIER(KRANG)%NSEC1(3) = 211
(   60)   ELSE
(   61) !     analyse
(   62)     FA%FICHIER(KRANG)%NSEC1(3) = 201
(   63) !     analyse initialisee -> prevision
(   64)     IF (FA%FICHIER(KRANG)%MADATE(9).EQ.1) FA%FICHIER(KRANG)%NSEC1(3) = 211
(   65)   ENDIF
(   66) ENDIF
(   67) 
(   68) FA%FICHIER(KRANG)%NIDCEN = FA%FICHIER(KRANG)%NSEC1(2)
(   69) 
(   70) !  4: grid definition
(   71) !     =255 for a non-catalogued grid (description follows in KSEC2)
(   72) FA%FICHIER(KRANG)%NSEC1(4) = 255
(   73) !  5: flag showing whether sections 2 and 3 are present
(   74) !     128 --> Section 2 is included, Section 3 is omitted (no bitmap)
(   75) FA%FICHIER(KRANG)%NSEC1(5) = 128
(   76) !  6 a 9: to be initialized later (specific to each field)
(   77) FA%FICHIER(KRANG)%NSEC1(6:9) = 0
(   78) ! 10 a 21: valeurs deduites de FA%MADATE(1:11,KRANG)
(   79) !
(   80) ! rappel :   2000 -->  an 100 (=FA%NSEC1(10))  siecle 20 (=FA%NSEC1(21))
(   81) !            2001 -->  an   1  "        "   siecle 21  "        "
(   82) !
(   83) FA%FICHIER(KRANG)%NSEC1(10) = 1 + MOD(FA%FICHIER(KRANG)%MADATE(1) - 1 , 100_JPLIKB )
(   84) FA%FICHIER(KRANG)%NSEC1(21) = 1 + (FA%FICHIER(KRANG)%MADATE(1) - 1) / 100
(   85) DO I=1,10
(   86)   FA%FICHIER(KRANG)%NSEC1(10+I) = FA%FICHIER(KRANG)%MADATE(1+I)
(   87) ENDDO
(   88) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 4

(   89) ! FA%NSEC1(18,KRANG)=10 signifie un codage sur 2 octets de l'echeance
(   90) ! Ce n'est pas le cas, donc on revient a 0 pour GRIBEX
(   91) IF (FA%FICHIER(KRANG)%NSEC1(18)==10) FA%FICHIER(KRANG)%NSEC1(18)=0
(   92) ! FA%MADATE(10,KRANG) peut contenir l'echeance precedente dans le cas
(   93) ! d'un calcul sur une periode (min, max par exemple): c'est une
(   94) ! convention dans FA (depuis fin 2000) qui est incompatible avec
(   95) ! GRIBEX. On retire donc cette valeur ici dans FA%NSEC1, sachant
(   96) ! qu'elle sera utilisee plus tard.
(   97) FA%FICHIER(KRANG)%NSEC1(19) = 0
(   98) !
(   99) !**
(  100) !    10.  -  PHASE TERMINALE : MESSAGERIE, AVEC "ABORT" EVENTUEL,
(  101) !            VIA LE SOUS-PROGRAMME "FAIPAR" .
(  102) !-----------------------------------------------------------------------
(  103) !
(  104) 1001 CONTINUE
(  105) LLFATA=LLMOER (KREP,KRANG)
(  106) !
(  107) IF (FA%LFAMOP.OR.LLFATA) THEN
(  108)   INIMES=2
(  109)   CLNSPR='FAISC1'
(  110)   INUMER=JPNIIL
(  111) !
(  112)   WRITE (UNIT=CLMESS,FMT='(''KREP='',I4,'', KRANG='',I4)') &
(  113) &     KREP, KRANG
(  114)   CALL FAIPAR_MT64                                      &
(  115) &                 (FA, INUMER,INIMES,KREP,.FALSE.,CLMESS, &
(  116) &                  CLNSPR, CLNSPR,.FALSE.)
(  117) ENDIF
(  118) !
(  119) IF (LHOOK) CALL DR_HOOK('FAISC1_MT',1,ZHOOK_HANDLE)
(  120) 
(  121) CONTAINS
(  122) 
(  123) #include "facom2.llmoer.h"
(  124) 
(  125) END SUBROUTINE FAISC1_MT64
(  126) 
(  127) 
(  128) 
(  129) ! Oct-2012 P. Marguinaud 64b LFI
(  130) SUBROUTINE FAISC164           &
(  131) &           (KREP, KRANG)
(  132) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  133) &                   FA_COM_DEFAULT_INIT,  &
(  134) &                   NEW_FA_DEFAULT
(  135) USE LFI_PRECISION
(  136) IMPLICIT NONE
(  137) ! Arguments
(  138) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(  139) INTEGER (KIND=JPLIKB)  KRANG                                  ! IN   
(  140) 
(  141) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  142) 
(  143) CALL FAISC1_MT64            &
(  144) &           (FA, KREP, KRANG)
(  145) 
(  146) END SUBROUTINE FAISC164






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 5

(  147) 
(  148) SUBROUTINE FAISC1             &
(  149) &           (KREP, KRANG)
(  150) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  151) &                   FA_COM_DEFAULT_INIT,  &
(  152) &                   NEW_FA_DEFAULT
(  153) USE LFI_PRECISION
(  154) IMPLICIT NONE
(  155) ! Arguments
(  156) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  157) INTEGER (KIND=JPLIKM)  KRANG                                  ! IN   
(  158) 
(  159) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  160) 
(  161) CALL FAISC1_MT              &
(  162) &           (FA, KREP, KRANG)
(  163) 
(  164) END SUBROUTINE FAISC1
(  165) 
(  166) SUBROUTINE FAISC1_MT             &
(  167) &           (FA, KREP, KRANG)
(  168) USE FA_MOD, ONLY : FA_COM
(  169) USE LFI_PRECISION
(  170) IMPLICIT NONE
(  171) ! Arguments
(  172) TYPE (FA_COM)          FA                                     ! INOUT
(  173) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  174) INTEGER (KIND=JPLIKM)  KRANG                                  ! IN   
(  175) ! Local integers
(  176) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  177) INTEGER (KIND=JPLIKB)  IRANG                                  ! IN   
(  178) ! Convert arguments
(  179) 
(  180) IRANG      = INT (     KRANG, JPLIKB)
(  181) 
(  182) CALL FAISC1_MT64            &
(  183) &           (FA, IREP, IRANG)
(  184) 
(  185) KREP       = INT (      IREP, JPLIKM)
(  186) 
(  187) END SUBROUTINE FAISC1_MT
(  188) 
(  189) !INTF KREP            OUT 
(  190) !INTF KRANG         IN    




















NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 6

(    1) # 1 "faisc1.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FAISC1_MT64                  &
(    4) &                     (FA,  KREP, KRANG )
(    5) USE FA_MOD, ONLY : FA_COM, JPNIIL
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !      Ce sous-programme initialise un tableau "reference" de
(   12) !      l'en-tete GRIB, section 1.
(   13) !      (routine appelee une seule fois pour un fichier donne)
(   14) !**
(   15) !    Arguments : KREP   (Sortie) ==> Code-reponse du sous-programme;
(   16) !                KRANG  (Entree) ==> Rang de l'unite logique;
(   17) !*
(   18) !
(   19) !
(   20) !
(   21) TYPE(FA_COM) :: FA
(   22) INTEGER (KIND=JPLIKB) KREP, KRANG
(   23) !
(   24) INTEGER (KIND=JPLIKB) I, INUMER
(   25) INTEGER (KIND=JPLIKB) INIMES, IRANGC
(   26) !
(   27) CHARACTER(LEN=FA%JPLMES) CLMESS 
(   28) CHARACTER(LEN=FA%JPLSPX) CLNSPR
(   29) LOGICAL                  LLFATA
(   30) # 31 "faisc1.F90"
(   31) !**
(   32) !     0.  -  INITIALISATIONS ET CONTROLES
(   33) !-----------------------------------------------------------------------
(   34) !
(   35) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   36) IF (LHOOK) CALL DR_HOOK('FAISC1_MT',0,ZHOOK_HANDLE)
(   37) KREP=0
(   38) IF (KRANG.LE.0.OR.KRANG.GT.FA%JPNXFA) THEN
(   39)   KREP=-66
(   40)   GOTO 1001
(   41) ENDIF
(   42) IRANGC=FA%FICHIER(KRANG)%NUCADR
(   43) !**
(   44) !     1.  -  INIT. DU TAB. FA%NSEC1 REPRESENTANT LA SECTION 1 DE GRIBEX
(   45) !-----------------------------------------------------------------------
(   46) !
(   47) !  2: identification of centre
(   48) !
(   49) ! (defaut=85 pour Toulouse; pour en changer, utiliser FAREGU)
(   50) FA%FICHIER(KRANG)%NSEC1(2) = 85
(   51) !  3: generating process identification number, alloc by the orig. centre
(   52) IF (FA%CADRE(IRANGC)%LIMLAM) THEN
(   53) ! Il s'agit du modele Aladin
(   54)   FA%FICHIER(KRANG)%NSEC1(3) = 177
(   55) ELSE
(   56) ! Il s'agit du modele Arpege
(   57)   IF (FA%FICHIER(KRANG)%MADATE(7).GT.0) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 7

(   58) !     prevision
(   59)     FA%FICHIER(KRANG)%NSEC1(3) = 211
(   60)   ELSE
(   61) !     analyse
(   62)     FA%FICHIER(KRANG)%NSEC1(3) = 201
(   63) !     analyse initialisee -> prevision
(   64)     IF (FA%FICHIER(KRANG)%MADATE(9).EQ.1) FA%FICHIER(KRANG)%NSEC1(3) = 211
(   65)   ENDIF
(   66) ENDIF
(   67) # 68 "faisc1.F90"
(   68) FA%FICHIER(KRANG)%NIDCEN = FA%FICHIER(KRANG)%NSEC1(2)
(   69) # 70 "faisc1.F90"
(   70) !  4: grid definition
(   71) !     =255 for a non-catalogued grid (description follows in KSEC2)
(   72) FA%FICHIER(KRANG)%NSEC1(4) = 255
(   73) !  5: flag showing whether sections 2 and 3 are present
(   74) !     128 --> Section 2 is included, Section 3 is omitted (no bitmap)
(   75) FA%FICHIER(KRANG)%NSEC1(5) = 128
(   76) !  6 a 9: to be initialized later (specific to each field)
(   77) FA%FICHIER(KRANG)%NSEC1(6:9) = 0
(   78) ! 10 a 21: valeurs deduites de FA%MADATE(1:11,KRANG)
(   79) !
(   80) ! rappel :   2000 -->  an 100 (=FA%NSEC1(10))  siecle 20 (=FA%NSEC1(21))
(   81) !            2001 -->  an   1  "        "   siecle 21  "        "
(   82) !
(   83) FA%FICHIER(KRANG)%NSEC1(10) = 1 + MOD(FA%FICHIER(KRANG)%MADATE(1) - 1 , 100_JPLIKB )
(   84) FA%FICHIER(KRANG)%NSEC1(21) = 1 + (FA%FICHIER(KRANG)%MADATE(1) - 1) / 100
(   85) DO I=1,10
(   86)   FA%FICHIER(KRANG)%NSEC1(10+I) = FA%FICHIER(KRANG)%MADATE(1+I)
(   87) ENDDO
(   88) # 89 "faisc1.F90"
(   89) ! FA%NSEC1(18,KRANG)=10 signifie un codage sur 2 octets de l'echeance
(   90) ! Ce n'est pas le cas, donc on revient a 0 pour GRIBEX
(   91) IF (FA%FICHIER(KRANG)%NSEC1(18)==10) FA%FICHIER(KRANG)%NSEC1(18)=0
(   92) ! FA%MADATE(10,KRANG) peut contenir l'echeance precedente dans le cas
(   93) ! d'un calcul sur une periode (min, max par exemple): c'est une
(   94) ! convention dans FA (depuis fin 2000) qui est incompatible avec
(   95) ! GRIBEX. On retire donc cette valeur ici dans FA%NSEC1, sachant
(   96) ! qu'elle sera utilisee plus tard.
(   97) FA%FICHIER(KRANG)%NSEC1(19) = 0
(   98) !
(   99) !**
(  100) !    10.  -  PHASE TERMINALE : MESSAGERIE, AVEC "ABORT" EVENTUEL,
(  101) !            VIA LE SOUS-PROGRAMME "FAIPAR" .
(  102) !-----------------------------------------------------------------------
(  103) !
(  104) 1001 CONTINUE
(  105) LLFATA=LLMOER (KREP,KRANG)
(  106) !
(  107) IF (FA%LFAMOP.OR.LLFATA) THEN
(  108)   INIMES=2
(  109)   CLNSPR='FAISC1'
(  110)   INUMER=JPNIIL
(  111) !
(  112)   WRITE (UNIT=CLMESS,FMT='(''KREP='',I4,'', KRANG='',I4)') &
(  113) &     KREP, KRANG
(  114)   CALL FAIPAR_MT64                                      &
(  115) &                 (FA, INUMER,INIMES,KREP,.FALSE.,CLMESS, &






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 8

(  116) &                  CLNSPR, CLNSPR,.FALSE.)
(  117) ENDIF
(  118) !
(  119) IF (LHOOK) CALL DR_HOOK('FAISC1_MT',1,ZHOOK_HANDLE)
(  120) # 121 "faisc1.F90"
(  121) CONTAINS
(  122) # 123 "faisc1.F90"
(  123) # 1 ".D[27]/facom2.llmoer.h"
(    1) !
(    2) !       Fonction servant a rendre fatale ou non une erreur detectee,
(    3) !       a l'aide du code reponse courant, du niveau de filtrage global,
(    4) !       et de l'option d'erreur fatale propre au fichier.
(    5) !       s'il n'y a pas de fichier (I5678=0, d'ou dimensionnement de
(    6) !          *LERRFA*), le niveau de filtrage joue le role principal.
(    7) !
(    8) LOGICAL FUNCTION LLMOER (I1234,I5678)
(    9) INTEGER (KIND=JPLIKB) :: I1234,I5678
(   10) LLMOER=I1234.EQ.-66_JPLIKB .OR. (I1234.NE.0_JPLIKB .AND.(FA%NRFAGA.EQ.0_JPLIKB &
(   11)      & .OR. (FA%NRFAGA.EQ.1_JPLIKB .AND.FA%FICHIER(I5678)%LERRFA)))
(   12) END FUNCTION
(   13) # 124 "faisc1.F90"
(  124) # 125 "faisc1.F90"
(  125) END SUBROUTINE FAISC1_MT64
(  126) # 129 "faisc1.F90"
(  129) ! Oct-2012 P. Marguinaud 64b LFI
(  130) SUBROUTINE FAISC164           &
(  131) &           (KREP, KRANG)
(  132) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  133) &                   FA_COM_DEFAULT_INIT,  &
(  134) &                   NEW_FA_DEFAULT
(  135) USE LFI_PRECISION
(  136) IMPLICIT NONE
(  137) ! Arguments
(  138) INTEGER (KIND=JPLIKB)  KREP                                   !   OUT
(  139) INTEGER (KIND=JPLIKB)  KRANG                                  ! IN   
(  140) # 141 "faisc1.F90"
(  141) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  142) # 143 "faisc1.F90"
(  143) CALL FAISC1_MT64            &
(  144) &           (FA, KREP, KRANG)
(  145) # 146 "faisc1.F90"
(  146) END SUBROUTINE FAISC164
(  147) # 148 "faisc1.F90"
(  148) SUBROUTINE FAISC1             &
(  149) &           (KREP, KRANG)
(  150) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(  151) &                   FA_COM_DEFAULT_INIT,  &
(  152) &                   NEW_FA_DEFAULT
(  153) USE LFI_PRECISION
(  154) IMPLICIT NONE
(  155) ! Arguments
(  156) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  157) INTEGER (KIND=JPLIKM)  KRANG                                  ! IN   
(  158) # 159 "faisc1.F90"
(  159) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  160) # 161 "faisc1.F90"
(  161) CALL FAISC1_MT              &
(  162) &           (FA, KREP, KRANG)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:20      page 9

(  163) # 164 "faisc1.F90"
(  164) END SUBROUTINE FAISC1
(  165) # 166 "faisc1.F90"
(  166) SUBROUTINE FAISC1_MT             &
(  167) &           (FA, KREP, KRANG)
(  168) USE FA_MOD, ONLY : FA_COM
(  169) USE LFI_PRECISION
(  170) IMPLICIT NONE
(  171) ! Arguments
(  172) TYPE (FA_COM)          FA                                     ! INOUT
(  173) INTEGER (KIND=JPLIKM)  KREP                                   !   OUT
(  174) INTEGER (KIND=JPLIKM)  KRANG                                  ! IN   
(  175) ! Local integers
(  176) INTEGER (KIND=JPLIKB)  IREP                                   !   OUT
(  177) INTEGER (KIND=JPLIKB)  IRANG                                  ! IN   
(  178) ! Convert arguments
(  179) # 180 "faisc1.F90"
(  180) IRANG      = INT (     KRANG, JPLIKB)
(  181) # 182 "faisc1.F90"
(  182) CALL FAISC1_MT64            &
(  183) &           (FA, IREP, IRANG)
(  184) # 185 "faisc1.F90"
(  185) KREP       = INT (      IREP, JPLIKM)
(  186) # 187 "faisc1.F90"
(  187) END SUBROUTINE FAISC1_MT
(  188) # 189 "faisc1.F90"
(  189) !INTF KREP            OUT 
(  190) !INTF KRANG         IN    
