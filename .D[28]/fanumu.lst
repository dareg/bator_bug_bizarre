


NVFORTRAN (Version     23.1)          02/24/2023  13:54:24      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:24      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: fanumu.F90

(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FANUMU_MT64                    &
(    4) &                     (FA,  KNUMER, KRANG )
(    5) USE FA_MOD, ONLY : FA_COM
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme calcule le RANG du Numero d'Unite logique
(   12) !     *KNUMER* dans la table des unites logiques *FA%NULOGI*;
(   13) !     s'il n'y est pas trouve, le resultat est ZERO.
(   14) !        Ce sous-programme, appele par tous les sous-programmes
(   15) !     "fichier" du Logiciel de Fichiers ARPEGE, se charge lors de son
(   16) !     premier appel d'appeler le sous-programme preparatoire FARINE.
(   17) !**
(   18) !       Arguments : KNUMER (Entree) ==> Numero d'unite logique cherche;
(   19) !                   KRANG  (Sortie) ==> Rang dans la table des fichiers
(   20) !                                       du logiciel FA (0 si absent).
(   21) !
(   22) !
(   23) !
(   24) TYPE(FA_COM) :: FA
(   25) INTEGER (KIND=JPLIKB) KNUMER, KRANG
(   26) !
(   27) INTEGER (KIND=JPLIKB) J, IRESUL
(   28) !
(   29) !
(   30) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:24      page 3

(   31) !
(   32) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   33) IF (LHOOK) CALL DR_HOOK('FANUMU_MT',0,ZHOOK_HANDLE)
(   34) 
(   35) IF (FA%FANUMU_LLPREA) THEN
(   36)   CALL FARINE_MT64              &
(   37) &                 (FA, 2_JPLIKB )
(   38)   FA%FANUMU_LLPREA=.FALSE.
(   39) ENDIF
(   40) !
(   41) !          VERROUILLAGE GLOBAL (A CAUSE DE L'UTILISATION DE FA%NFIOUV )
(   42) !
(   43) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(   44) &                              (FA%LFI, FA%VRGLAS,'ON')
(   45) !
(   46) DO J=1,FA%NFIOUV
(   47) !
(   48) IF (KNUMER.EQ.FA%FICHIER(FA%NULIND(J))%NULOGI) THEN
(   49)   IRESUL=FA%NULIND(J)
(   50)   GOTO 20
(   51) ENDIF
(   52) !
(   53) ENDDO
(   54) !
(   55) IRESUL=0
(   56) !
(   57) 20 CONTINUE
(   58) !
(   59) !          DEVERROUILLAGE GLOBAL
(   60) !
(   61) IF (FA%LFAMUL) CALL LFIVER_MT64                         &
(   62) &                              (FA%LFI, FA%VRGLAS,'OFF')
(   63) KRANG=IRESUL
(   64) !
(   65) IF (LHOOK) CALL DR_HOOK('FANUMU_MT',1,ZHOOK_HANDLE)
(   66) END SUBROUTINE FANUMU_MT64
(   67) 
(   68) 
(   69) 
(   70) ! Oct-2012 P. Marguinaud 64b LFI
(   71) SUBROUTINE FANUMU64           &
(   72) &           (KNUMER, KRANG)
(   73) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   74) &                   FA_COM_DEFAULT_INIT,  &
(   75) &                   NEW_FA_DEFAULT
(   76) USE LFI_PRECISION
(   77) IMPLICIT NONE
(   78) ! Arguments
(   79) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   80) INTEGER (KIND=JPLIKB)  KRANG                                  !   OUT
(   81) 
(   82) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   83) 
(   84) CALL FANUMU_MT64              &
(   85) &           (FA, KNUMER, KRANG)
(   86) 
(   87) END SUBROUTINE FANUMU64
(   88) 






NVFORTRAN (Version     23.1)          02/24/2023  13:54:24      page 4

(   89) SUBROUTINE FANUMU             &
(   90) &           (KNUMER, KRANG)
(   91) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   92) &                   FA_COM_DEFAULT_INIT,  &
(   93) &                   NEW_FA_DEFAULT
(   94) USE LFI_PRECISION
(   95) IMPLICIT NONE
(   96) ! Arguments
(   97) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(   98) INTEGER (KIND=JPLIKM)  KRANG                                  !   OUT
(   99) 
(  100) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  101) 
(  102) CALL FANUMU_MT                &
(  103) &           (FA, KNUMER, KRANG)
(  104) 
(  105) END SUBROUTINE FANUMU
(  106) 
(  107) SUBROUTINE FANUMU_MT             &
(  108) &           (FA, KNUMER, KRANG)
(  109) USE FA_MOD, ONLY : FA_COM
(  110) USE LFI_PRECISION
(  111) IMPLICIT NONE
(  112) ! Arguments
(  113) TYPE (FA_COM)          FA                                     ! INOUT
(  114) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  115) INTEGER (KIND=JPLIKM)  KRANG                                  !   OUT
(  116) ! Local integers
(  117) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   
(  118) INTEGER (KIND=JPLIKB)  IRANG                                  !   OUT
(  119) ! Convert arguments
(  120) 
(  121) INUMER     = INT (    KNUMER, JPLIKB)
(  122) 
(  123) CALL FANUMU_MT64              &
(  124) &           (FA, INUMER, IRANG)
(  125) 
(  126) KRANG      = INT (     IRANG, JPLIKM)
(  127) 
(  128) END SUBROUTINE FANUMU_MT
(  129) 
(  130) !INTF KNUMER        IN    
(  131) !INTF KRANG           OUT 





















NVFORTRAN (Version     23.1)          02/24/2023  13:54:24      page 5

(    1) # 1 "fanumu.F90"
(    1) ! Oct-2012 P. Marguinaud 64b LFI
(    2) ! Jan-2011 P. Marguinaud Thread-safe FA
(    3) SUBROUTINE FANUMU_MT64                    &
(    4) &                     (FA,  KNUMER, KRANG )
(    5) USE FA_MOD, ONLY : FA_COM
(    6) USE PARKIND1, ONLY : JPRB
(    7) USE YOMHOOK , ONLY : LHOOK, DR_HOOK
(    8) USE LFI_PRECISION
(    9) IMPLICIT NONE
(   10) !****
(   11) !        Ce sous-programme calcule le RANG du Numero d'Unite logique
(   12) !     *KNUMER* dans la table des unites logiques *FA%NULOGI*;
(   13) !     s'il n'y est pas trouve, le resultat est ZERO.
(   14) !        Ce sous-programme, appele par tous les sous-programmes
(   15) !     "fichier" du Logiciel de Fichiers ARPEGE, se charge lors de son
(   16) !     premier appel d'appeler le sous-programme preparatoire FARINE.
(   17) !**
(   18) !       Arguments : KNUMER (Entree) ==> Numero d'unite logique cherche;
(   19) !                   KRANG  (Sortie) ==> Rang dans la table des fichiers
(   20) !                                       du logiciel FA (0 si absent).
(   21) !
(   22) !
(   23) !
(   24) TYPE(FA_COM) :: FA
(   25) INTEGER (KIND=JPLIKB) KNUMER, KRANG
(   26) !
(   27) INTEGER (KIND=JPLIKB) J, IRESUL
(   28) !
(   29) !
(   30) # 31 "fanumu.F90"
(   31) !
(   32) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   33) IF (LHOOK) CALL DR_HOOK('FANUMU_MT',0,ZHOOK_HANDLE)
(   34) # 35 "fanumu.F90"
(   35) IF (FA%FANUMU_LLPREA) THEN
(   36)   CALL FARINE_MT64              &
(   37) &                 (FA, 2_JPLIKB )
(   38)   FA%FANUMU_LLPREA=.FALSE.
(   39) ENDIF
(   40) !
(   41) !          VERROUILLAGE GLOBAL (A CAUSE DE L'UTILISATION DE FA%NFIOUV )
(   42) !
(   43) IF (FA%LFAMUL) CALL LFIVER_MT64                        &
(   44) &                              (FA%LFI, FA%VRGLAS,'ON')
(   45) !
(   46) DO J=1,FA%NFIOUV
(   47) !
(   48) IF (KNUMER.EQ.FA%FICHIER(FA%NULIND(J))%NULOGI) THEN
(   49)   IRESUL=FA%NULIND(J)
(   50)   GOTO 20
(   51) ENDIF
(   52) !
(   53) ENDDO
(   54) !
(   55) IRESUL=0
(   56) !
(   57) 20 CONTINUE






NVFORTRAN (Version     23.1)          02/24/2023  13:54:24      page 6

(   58) !
(   59) !          DEVERROUILLAGE GLOBAL
(   60) !
(   61) IF (FA%LFAMUL) CALL LFIVER_MT64                         &
(   62) &                              (FA%LFI, FA%VRGLAS,'OFF')
(   63) KRANG=IRESUL
(   64) !
(   65) IF (LHOOK) CALL DR_HOOK('FANUMU_MT',1,ZHOOK_HANDLE)
(   66) END SUBROUTINE FANUMU_MT64
(   67) # 70 "fanumu.F90"
(   70) ! Oct-2012 P. Marguinaud 64b LFI
(   71) SUBROUTINE FANUMU64           &
(   72) &           (KNUMER, KRANG)
(   73) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   74) &                   FA_COM_DEFAULT_INIT,  &
(   75) &                   NEW_FA_DEFAULT
(   76) USE LFI_PRECISION
(   77) IMPLICIT NONE
(   78) ! Arguments
(   79) INTEGER (KIND=JPLIKB)  KNUMER                                 ! IN   
(   80) INTEGER (KIND=JPLIKB)  KRANG                                  !   OUT
(   81) # 82 "fanumu.F90"
(   82) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(   83) # 84 "fanumu.F90"
(   84) CALL FANUMU_MT64              &
(   85) &           (FA, KNUMER, KRANG)
(   86) # 87 "fanumu.F90"
(   87) END SUBROUTINE FANUMU64
(   88) # 89 "fanumu.F90"
(   89) SUBROUTINE FANUMU             &
(   90) &           (KNUMER, KRANG)
(   91) USE FA_MOD, ONLY : FA => FA_COM_DEFAULT, &
(   92) &                   FA_COM_DEFAULT_INIT,  &
(   93) &                   NEW_FA_DEFAULT
(   94) USE LFI_PRECISION
(   95) IMPLICIT NONE
(   96) ! Arguments
(   97) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(   98) INTEGER (KIND=JPLIKM)  KRANG                                  !   OUT
(   99) # 100 "fanumu.F90"
(  100) IF (.NOT. FA_COM_DEFAULT_INIT) CALL NEW_FA_DEFAULT ()
(  101) # 102 "fanumu.F90"
(  102) CALL FANUMU_MT                &
(  103) &           (FA, KNUMER, KRANG)
(  104) # 105 "fanumu.F90"
(  105) END SUBROUTINE FANUMU
(  106) # 107 "fanumu.F90"
(  107) SUBROUTINE FANUMU_MT             &
(  108) &           (FA, KNUMER, KRANG)
(  109) USE FA_MOD, ONLY : FA_COM
(  110) USE LFI_PRECISION
(  111) IMPLICIT NONE
(  112) ! Arguments
(  113) TYPE (FA_COM)          FA                                     ! INOUT
(  114) INTEGER (KIND=JPLIKM)  KNUMER                                 ! IN   
(  115) INTEGER (KIND=JPLIKM)  KRANG                                  !   OUT
(  116) ! Local integers
(  117) INTEGER (KIND=JPLIKB)  INUMER                                 ! IN   






NVFORTRAN (Version     23.1)          02/24/2023  13:54:24      page 7

(  118) INTEGER (KIND=JPLIKB)  IRANG                                  !   OUT
(  119) ! Convert arguments
(  120) # 121 "fanumu.F90"
(  121) INUMER     = INT (    KNUMER, JPLIKB)
(  122) # 123 "fanumu.F90"
(  123) CALL FANUMU_MT64              &
(  124) &           (FA, INUMER, IRANG)
(  125) # 126 "fanumu.F90"
(  126) KRANG      = INT (     IRANG, JPLIKM)
(  127) # 128 "fanumu.F90"
(  128) END SUBROUTINE FANUMU_MT
(  129) # 130 "fanumu.F90"
(  130) !INTF KNUMER        IN    
(  131) !INTF KRANG           OUT 
