


NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: diffuse_mom2D.F90

(    1) 
(    2) subroutine diffuse_mom2D
(    3) 
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) 
(   14) !        momentum tendency due to SGS diffusion
(   15) 
(   16) use vars
(   17) use real_size
(   18) implicit none
(   19) 
(   20) real(RR) rdx2,rdz2,rdz,rdx25,rdz25,rdx21,rdx251
(   21) real(RR) dxz,dzx
(   22) 
(   23) integer i,j,k,ic,ib,kc,kcu
(   24) real(RR) tkx, tkz, rhoi, iadzw, iadz
(   25) real(RR) fu(0:nx,1,nz),fv(0:nx,1,nz),fw(0:nx,1,nz)
(   26) 
(   27) rdx2=1./dx/dx
(   28) rdx25=0.25*rdx2
(   29) 
(   30) dxz=dx/dz






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 3

(   31) 
(   32) j=1
(   33) 
(   34) if(.not.docolumn) then
(   35) 
(   36) 
(   37) do k=1,nzm
(   38) 
(   39)  kc=k+1
(   40)  kcu=min(kc,nzm)
(   41)  dxz=dx/(dz*adzw(kc))
(   42)  rdx21=rdx2 * grdf_x(k)
(   43)  rdx251=rdx25 * grdf_x(k)
(   44)  
(   45)    do i=0,nx
(   46)     ic=i+1
(   47)     tkx=rdx21*tk(i,j,k)
(   48)     fu(i,j,k)=-2.*tkx*(u(ic,j,k)-u(i,j,k))
(   49)     fv(i,j,k)=-tkx*(v(ic,j,k)-v(i,j,k))
(   50)     tkx=rdx251*(tk(i,j,k)+tk(ic,j,k)+tk(i,j,kcu)+tk(ic,j,kcu))
(   51)     fw(i,j,k)=-tkx*(w(ic,j,kc)-w(i,j,kc)+(u(ic,j,kcu)-u(ic,j,k))*dxz)
(   52)    end do 
(   53)    do i=1,nx
(   54)     ib=i-1
(   55)     dudt(i,j,k,na)=dudt(i,j,k,na)-(fu(i,j,k)-fu(ib,j,k))
(   56)     dvdt(i,j,k,na)=dvdt(i,j,k,na)-(fv(i,j,k)-fv(ib,j,k))
(   57)     dwdt(i,j,kc,na)=dwdt(i,j,kc,na)-(fw(i,j,k)-fw(ib,j,k))
(   58)    end do  
(   59) 
(   60) end do 
(   61) 
(   62) end if 
(   63) 
(   64) !-------------------------
(   65) rdz=1./dz
(   66) dzx=dz/dx
(   67) 
(   68) do k=1,nzm-1
(   69)  kc=k+1
(   70) ! uwsb(kc)=0.
(   71) ! vwsb(kc)=0.
(   72)  iadz = 1./adz(k)
(   73)  iadzw= 1./adzw(kc)
(   74)  rdz2=rdz*rdz *grdf_z(k)
(   75)  rdz25=0.25*rdz2
(   76)    do i=1,nx
(   77)     ib=i-1
(   78)     tkz=rdz2*tk(i,j,k)
(   79)     fw(i,j,kc)=-2.*tkz*(w(i,j,kc)-w(i,j,k))*rho(k)*iadz
(   80)     tkz=rdz25*(tk(i,j,k)+tk(ib,j,k)+tk(i,j,kc)+tk(ib,j,kc))
(   81)     fu(i,j,kc)=-tkz*( (u(i,j,kc)-u(i,j,k))*iadzw + &
(   82)                        (w(i,j,kc)-w(ib,j,kc))*dzx)*rhow(kc)
(   83)     fv(i,j,kc)=-tkz*(v(i,j,kc)-v(i,j,k))*iadzw*rhow(kc)
(   84)     uwsb(kc)=uwsb(kc)+fu(i,j,kc)
(   85)     vwsb(kc)=vwsb(kc)+fv(i,j,kc)
(   86)   end do 
(   87) end do
(   88) 






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 4

(   89) !uwsb(1) = 0.
(   90) !vwsb(1) = 0.
(   91) 
(   92) do i=1,nx
(   93)  tkz=rdz2*grdf_z(nzm)*tk(i,j,nzm)
(   94)  fw(i,j,nz)=-2.*tkz*(w(i,j,nz)-w(i,j,nzm))/adz(nzm)*rho(nzm)
(   95)  fu(i,j,1)=fluxbu(i,j) * rdz * rhow(1)
(   96)  fv(i,j,1)=fluxbv(i,j) * rdz * rhow(1)
(   97)  fu(i,j,nz)=fluxtu(i,j) * rdz * rhow(nz)
(   98)  fv(i,j,nz)=fluxtv(i,j) * rdz * rhow(nz)
(   99)  uwsb(1) = uwsb(1) + fu(i,j,1)
(  100)  vwsb(1) = vwsb(1) + fv(i,j,1)
(  101) end do
(  102)  
(  103) 
(  104) do k=1,nzm
(  105)   kc=k+1
(  106)   rhoi = 1./(rho(k)*adz(k))
(  107)   do i=1,nx
(  108)     dudt(i,j,k,na)=dudt(i,j,k,na)-(fu(i,j,kc)-fu(i,j,k))*rhoi
(  109)     dvdt(i,j,k,na)=dvdt(i,j,k,na)-(fv(i,j,kc)-fv(i,j,k))*rhoi
(  110)   end do
(  111) end do ! k
(  112) 
(  113) do k=2,nzm
(  114)   rhoi = 1./(rhow(k)*adzw(k))
(  115)   do i=1,nx
(  116)     dwdt(i,j,k,na)=dwdt(i,j,k,na)-(fw(i,j,k+1)-fw(i,j,k))*rhoi
(  117)   end do
(  118) end do ! k
(  119) 
(  120) 
(  121) end subroutine diffuse_mom2D
(  122) 
(  123) 





























NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 5

(    1) # 1 "diffuse_mom2D.F90"
(    1) # 2 "diffuse_mom2D.F90"
(    2) subroutine diffuse_mom2D
(    3) # 4 "diffuse_mom2D.F90"
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) # 14 "diffuse_mom2D.F90"
(   14) !        momentum tendency due to SGS diffusion
(   15) # 16 "diffuse_mom2D.F90"
(   16) use vars
(   17) use real_size
(   18) implicit none
(   19) # 20 "diffuse_mom2D.F90"
(   20) real(RR) rdx2,rdz2,rdz,rdx25,rdz25,rdx21,rdx251
(   21) real(RR) dxz,dzx
(   22) # 23 "diffuse_mom2D.F90"
(   23) integer i,j,k,ic,ib,kc,kcu
(   24) real(RR) tkx, tkz, rhoi, iadzw, iadz
(   25) real(RR) fu(0:nx,1,nz),fv(0:nx,1,nz),fw(0:nx,1,nz)
(   26) # 27 "diffuse_mom2D.F90"
(   27) rdx2=1./dx/dx
(   28) rdx25=0.25*rdx2
(   29) # 30 "diffuse_mom2D.F90"
(   30) dxz=dx/dz
(   31) # 32 "diffuse_mom2D.F90"
(   32) j=1
(   33) # 34 "diffuse_mom2D.F90"
(   34) if(.not.docolumn) then
(   35) # 37 "diffuse_mom2D.F90"
(   37) do k=1,nzm
(   38) # 39 "diffuse_mom2D.F90"
(   39)  kc=k+1
(   40)  kcu=min(kc,nzm)
(   41)  dxz=dx/(dz*adzw(kc))
(   42)  rdx21=rdx2 * grdf_x(k)
(   43)  rdx251=rdx25 * grdf_x(k)
(   44)  
(   45)    do i=0,nx
(   46)     ic=i+1
(   47)     tkx=rdx21*tk(i,j,k)
(   48)     fu(i,j,k)=-2.*tkx*(u(ic,j,k)-u(i,j,k))
(   49)     fv(i,j,k)=-tkx*(v(ic,j,k)-v(i,j,k))
(   50)     tkx=rdx251*(tk(i,j,k)+tk(ic,j,k)+tk(i,j,kcu)+tk(ic,j,kcu))
(   51)     fw(i,j,k)=-tkx*(w(ic,j,kc)-w(i,j,kc)+(u(ic,j,kcu)-u(ic,j,k))*dxz)
(   52)    end do 
(   53)    do i=1,nx
(   54)     ib=i-1
(   55)     dudt(i,j,k,na)=dudt(i,j,k,na)-(fu(i,j,k)-fu(ib,j,k))
(   56)     dvdt(i,j,k,na)=dvdt(i,j,k,na)-(fv(i,j,k)-fv(ib,j,k))
(   57)     dwdt(i,j,kc,na)=dwdt(i,j,kc,na)-(fw(i,j,k)-fw(ib,j,k))
(   58)    end do  






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 6

(   59) # 60 "diffuse_mom2D.F90"
(   60) end do 
(   61) # 62 "diffuse_mom2D.F90"
(   62) end if 
(   63) # 64 "diffuse_mom2D.F90"
(   64) !-------------------------
(   65) rdz=1./dz
(   66) dzx=dz/dx
(   67) # 68 "diffuse_mom2D.F90"
(   68) do k=1,nzm-1
(   69)  kc=k+1
(   70) ! uwsb(kc)=0.
(   71) ! vwsb(kc)=0.
(   72)  iadz = 1./adz(k)
(   73)  iadzw= 1./adzw(kc)
(   74)  rdz2=rdz*rdz *grdf_z(k)
(   75)  rdz25=0.25*rdz2
(   76)    do i=1,nx
(   77)     ib=i-1
(   78)     tkz=rdz2*tk(i,j,k)
(   79)     fw(i,j,kc)=-2.*tkz*(w(i,j,kc)-w(i,j,k))*rho(k)*iadz
(   80)     tkz=rdz25*(tk(i,j,k)+tk(ib,j,k)+tk(i,j,kc)+tk(ib,j,kc))
(   81)     fu(i,j,kc)=-tkz*( (u(i,j,kc)-u(i,j,k))*iadzw + &
(   82)                        (w(i,j,kc)-w(ib,j,kc))*dzx)*rhow(kc)
(   83)     fv(i,j,kc)=-tkz*(v(i,j,kc)-v(i,j,k))*iadzw*rhow(kc)
(   84)     uwsb(kc)=uwsb(kc)+fu(i,j,kc)
(   85)     vwsb(kc)=vwsb(kc)+fv(i,j,kc)
(   86)   end do 
(   87) end do
(   88) # 89 "diffuse_mom2D.F90"
(   89) !uwsb(1) = 0.
(   90) !vwsb(1) = 0.
(   91) # 92 "diffuse_mom2D.F90"
(   92) do i=1,nx
(   93)  tkz=rdz2*grdf_z(nzm)*tk(i,j,nzm)
(   94)  fw(i,j,nz)=-2.*tkz*(w(i,j,nz)-w(i,j,nzm))/adz(nzm)*rho(nzm)
(   95)  fu(i,j,1)=fluxbu(i,j) * rdz * rhow(1)
(   96)  fv(i,j,1)=fluxbv(i,j) * rdz * rhow(1)
(   97)  fu(i,j,nz)=fluxtu(i,j) * rdz * rhow(nz)
(   98)  fv(i,j,nz)=fluxtv(i,j) * rdz * rhow(nz)
(   99)  uwsb(1) = uwsb(1) + fu(i,j,1)
(  100)  vwsb(1) = vwsb(1) + fv(i,j,1)
(  101) end do
(  102)  
(  103) # 104 "diffuse_mom2D.F90"
(  104) do k=1,nzm
(  105)   kc=k+1
(  106)   rhoi = 1./(rho(k)*adz(k))
(  107)   do i=1,nx
(  108)     dudt(i,j,k,na)=dudt(i,j,k,na)-(fu(i,j,kc)-fu(i,j,k))*rhoi
(  109)     dvdt(i,j,k,na)=dvdt(i,j,k,na)-(fv(i,j,kc)-fv(i,j,k))*rhoi
(  110)   end do
(  111) end do ! k
(  112) # 113 "diffuse_mom2D.F90"
(  113) do k=2,nzm
(  114)   rhoi = 1./(rhow(k)*adzw(k))
(  115)   do i=1,nx
(  116)     dwdt(i,j,k,na)=dwdt(i,j,k,na)-(fw(i,j,k+1)-fw(i,j,k))*rhoi






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 7

(  117)   end do
(  118) end do ! k
(  119) # 121 "diffuse_mom2D.F90"
(  121) end subroutine diffuse_mom2D
