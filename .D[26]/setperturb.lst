


NVFORTRAN (Version     23.1)          02/24/2023  13:57:49      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:57:49      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: setperturb.F90

(    1) 
(    2) subroutine setperturb
(    3) 
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) 
(   14) !  Random noise
(   15) 
(   16) use vars
(   17) use real_size
(   18) 
(   19) implicit none
(   20) 
(   21) integer i,j,k
(   22) real(RR) rrr,ranf_
(   23) 
(   24) call ranset_(30*rank)
(   25) 
(   26) do k=1,nzm
(   27)  do j=1,ny
(   28)   do i=1,nx
(   29)     rrr=1.-2.*ranf_()
(   30) 






NVFORTRAN (Version     23.1)          02/24/2023  13:57:49      page 3

(   31)     if(k.le.5) then
(   32)       t(i,j,k)=t(i,j,k)+0.1*rrr*(6-k)
(   33)     endif
(   34) 
(   35)     if(k.le.4.and..not.dosmagor) then
(   36)       tke(i,j,k)=tke(i,j,k)+0.04*(5-k)
(   37)     endif
(   38) 
(   39)   end do
(   40)  end do
(   41) end do
(   42) 
(   43) 
(   44) end
(   45) 

















































NVFORTRAN (Version     23.1)          02/24/2023  13:57:49      page 4

(    1) # 1 "setperturb.F90"
(    1) # 2 "setperturb.F90"
(    2) subroutine setperturb
(    3) # 4 "setperturb.F90"
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) # 14 "setperturb.F90"
(   14) !  Random noise
(   15) # 16 "setperturb.F90"
(   16) use vars
(   17) use real_size
(   18) # 19 "setperturb.F90"
(   19) implicit none
(   20) # 21 "setperturb.F90"
(   21) integer i,j,k
(   22) real(RR) rrr,ranf_
(   23) # 24 "setperturb.F90"
(   24) call ranset_(30*rank)
(   25) # 26 "setperturb.F90"
(   26) do k=1,nzm
(   27)  do j=1,ny
(   28)   do i=1,nx
(   29)     rrr=1.-2.*ranf_()
(   30) # 31 "setperturb.F90"
(   31)     if(k.le.5) then
(   32)       t(i,j,k)=t(i,j,k)+0.1*rrr*(6-k)
(   33)     endif
(   34) # 35 "setperturb.F90"
(   35)     if(k.le.4.and..not.dosmagor) then
(   36)       tke(i,j,k)=tke(i,j,k)+0.04*(5-k)
(   37)     endif
(   38) # 39 "setperturb.F90"
(   39)   end do
(   40)  end do
(   41) end do
(   42) # 44 "setperturb.F90"
(   44) end
