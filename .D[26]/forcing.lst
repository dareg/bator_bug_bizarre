


NVFORTRAN (Version     23.1)          02/24/2023  13:58:37      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:58:37      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: forcing.F90

(    1) 
(    2) subroutine forcing
(    3) 
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) 
(   14)         use vars
(   15)         use params
(   16)         use real_size
(   17)         use microphysics, only: micro_field, index_water_vapor, total_water
(   18) 
(   19)         implicit none
(   20) 
(   21)         real(RR) coef,qneg,qpoz, factor
(   22)         integer i,j,k,nneg
(   23) 
(   24)         coef = 1./3600.
(   25) 
(   26)         do k=1,nzm
(   27) 
(   28)             qpoz = 0.
(   29)             qneg = 0.
(   30)             nneg = 0






NVFORTRAN (Version     23.1)          02/24/2023  13:58:37      page 3

(   31) 
(   32)             do j=1,ny
(   33)              do i=1,nx
(   34)               t(i,j,k)=t(i,j,k) + ttend(k) * dtn
(   35)               micro_field(i,j,k,index_water_vapor)=micro_field(i,j,k,index_water_vapor) + qtend(k) * dtn
(   36)               if(micro_field(i,j,k,index_water_vapor).lt.0.) then
(   37)                    nneg = nneg + 1
(   38)                    qneg = qneg + micro_field(i,j,k,index_water_vapor)
(   39)               else
(   40)                    qpoz = qpoz + micro_field(i,j,k,index_water_vapor)
(   41)               end if
(   42)               dudt(i,j,k,na)=dudt(i,j,k,na) + utend(k)
(   43)               dvdt(i,j,k,na)=dvdt(i,j,k,na) + vtend(k)
(   44)              end do
(   45)             end do
(   46) 
(   47)             if(nneg.gt.0.and.qpoz+qneg.gt.0.) then
(   48)              factor = 1. + qneg/qpoz
(   49)              do j=1,ny
(   50)               do i=1,nx
(   51)                micro_field(i,j,k,index_water_vapor) = max(0.,micro_field(i,j,k,index_water_vapor)*factor)
(   52)               end do
(   53)              end do
(   54)             end if
(   55) 
(   56)         end do
(   57) 
(   58) end 
(   59) 



































NVFORTRAN (Version     23.1)          02/24/2023  13:58:37      page 4

(    1) # 1 "forcing.F90"
(    1) # 2 "forcing.F90"
(    2) subroutine forcing
(    3) # 4 "forcing.F90"
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) # 14 "forcing.F90"
(   14)         use vars
(   15)         use params
(   16)         use real_size
(   17)         use microphysics, only: micro_field, index_water_vapor, total_water
(   18) # 19 "forcing.F90"
(   19)         implicit none
(   20) # 21 "forcing.F90"
(   21)         real(RR) coef,qneg,qpoz, factor
(   22)         integer i,j,k,nneg
(   23) # 24 "forcing.F90"
(   24)         coef = 1./3600.
(   25) # 26 "forcing.F90"
(   26)         do k=1,nzm
(   27) # 28 "forcing.F90"
(   28)             qpoz = 0.
(   29)             qneg = 0.
(   30)             nneg = 0
(   31) # 32 "forcing.F90"
(   32)             do j=1,ny
(   33)              do i=1,nx
(   34)               t(i,j,k)=t(i,j,k) + ttend(k) * dtn
(   35)               micro_field(i,j,k,index_water_vapor)=micro_field(i,j,k,index_water_vapor) + qtend(k) * dtn
(   36)               if(micro_field(i,j,k,index_water_vapor).lt.0.) then
(   37)                    nneg = nneg + 1
(   38)                    qneg = qneg + micro_field(i,j,k,index_water_vapor)
(   39)               else
(   40)                    qpoz = qpoz + micro_field(i,j,k,index_water_vapor)
(   41)               end if
(   42)               dudt(i,j,k,na)=dudt(i,j,k,na) + utend(k)
(   43)               dvdt(i,j,k,na)=dvdt(i,j,k,na) + vtend(k)
(   44)              end do
(   45)             end do
(   46) # 47 "forcing.F90"
(   47)             if(nneg.gt.0.and.qpoz+qneg.gt.0.) then
(   48)              factor = 1. + qneg/qpoz
(   49)              do j=1,ny
(   50)               do i=1,nx
(   51)                micro_field(i,j,k,index_water_vapor) = max(0.,micro_field(i,j,k,index_water_vapor)*factor)
(   52)               end do
(   53)              end do
(   54)             end if
(   55) # 56 "forcing.F90"
(   56)         end do
(   57) # 58 "forcing.F90"






NVFORTRAN (Version     23.1)          02/24/2023  13:58:37      page 5

(   58) end 
