


NVFORTRAN (Version     23.1)          02/24/2023  13:57:53      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:57:53      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: advect_scalar.F90

(    1) 
(    2) subroutine advect_scalar (f,fadv,flux,f2leadv,f2legrad,fwleadv,doit)
(    3) 
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) 
(   14) !     positively definite monotonic advection with non-oscillatory option
(   15) 
(   16) use grid
(   17) use real_size
(   18) use vars, only: u, v, w, rho, rhow
(   19) 
(   20) implicit none
(   21) 
(   22) real(RR) f(dimx1_s:dimx2_s, dimy1_s:dimy2_s, nzm)
(   23) real(RR) flux(nz), fadv(nz), f2leadv(nz), f2legrad(nz),fwleadv(nz)
(   24) logical doit
(   25) real(RR) df(dimx1_s:dimx2_s, dimy1_s:dimy2_s, nzm)
(   26) integer i,j,k
(   27) 
(   28) 
(   29) if(docolumn) flux = 0.
(   30) 






NVFORTRAN (Version     23.1)          02/24/2023  13:57:53      page 3

(   31) if(docolumn) return
(   32) 
(   33) !call t_startf ('advect_scalars')  ! commented by Phani
(   34) 
(   35) df(:,:,:) = f(:,:,:)
(   36) 
(   37) if(RUN3D) then
(   38)   call advect_scalar3D(f, u, v, w, rho, rhow, flux)
(   39) else
(   40)   call advect_scalar2D(f, u, w, rho, rhow, flux)
(   41) endif
(   42) 
(   43) do k=1,nzm
(   44)     fadv(k)=0.
(   45)     do j=1,ny
(   46)      do i=1,nx
(   47)       fadv(k)=fadv(k)+f(i,j,k)-df(i,j,k)
(   48)      end do
(   49)     end do
(   50) end do
(   51) 
(   52) ! call t_stopf ('advect_scalars') ! commented by Phani
(   53) 
(   54) end subroutine advect_scalar
(   55) 







































NVFORTRAN (Version     23.1)          02/24/2023  13:57:53      page 4

(    1) # 1 "advect_scalar.F90"
(    1) # 2 "advect_scalar.F90"
(    2) subroutine advect_scalar (f,fadv,flux,f2leadv,f2legrad,fwleadv,doit)
(    3) # 4 "advect_scalar.F90"
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) # 14 "advect_scalar.F90"
(   14) !     positively definite monotonic advection with non-oscillatory option
(   15) # 16 "advect_scalar.F90"
(   16) use grid
(   17) use real_size
(   18) use vars, only: u, v, w, rho, rhow
(   19) # 20 "advect_scalar.F90"
(   20) implicit none
(   21) # 22 "advect_scalar.F90"
(   22) real(RR) f(dimx1_s:dimx2_s, dimy1_s:dimy2_s, nzm)
(   23) real(RR) flux(nz), fadv(nz), f2leadv(nz), f2legrad(nz),fwleadv(nz)
(   24) logical doit
(   25) real(RR) df(dimx1_s:dimx2_s, dimy1_s:dimy2_s, nzm)
(   26) integer i,j,k
(   27) # 29 "advect_scalar.F90"
(   29) if(docolumn) flux = 0.
(   30) # 31 "advect_scalar.F90"
(   31) if(docolumn) return
(   32) # 33 "advect_scalar.F90"
(   33) !call t_startf ('advect_scalars')  ! commented by Phani
(   34) # 35 "advect_scalar.F90"
(   35) df(:,:,:) = f(:,:,:)
(   36) # 37 "advect_scalar.F90"
(   37) if(RUN3D) then
(   38)   call advect_scalar3D(f, u, v, w, rho, rhow, flux)
(   39) else
(   40)   call advect_scalar2D(f, u, w, rho, rhow, flux)
(   41) endif
(   42) # 43 "advect_scalar.F90"
(   43) do k=1,nzm
(   44)     fadv(k)=0.
(   45)     do j=1,ny
(   46)      do i=1,nx
(   47)       fadv(k)=fadv(k)+f(i,j,k)-df(i,j,k)
(   48)      end do
(   49)     end do
(   50) end do
(   51) # 52 "advect_scalar.F90"
(   52) ! call t_stopf ('advect_scalars') ! commented by Phani
(   53) # 54 "advect_scalar.F90"
(   54) end subroutine advect_scalar
