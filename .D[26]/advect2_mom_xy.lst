


NVFORTRAN (Version     23.1)          02/24/2023  13:57:29      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:57:29      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: advect2_mom_xy.F90

(    1) 
(    2) subroutine advect2_mom_xy
(    3) 
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) 
(   14) !        momentum tendency due to 2nd-order-central horizontal advection
(   15) 
(   16) use vars
(   17) use real_size
(   18) 
(   19) implicit none
(   20) 
(   21) real(RR) fu(0:nx,1-YES3D:ny,nzm) 
(   22) real(RR) fv(0:nx,1-YES3D:ny,nzm)
(   23) real(RR) fw(0:nx,1-YES3D:ny,nzm)
(   24) real(RR) dx25, dy25, irho
(   25) 
(   26) integer i, j, k, kc, kcu, ic, jb, ib, jc
(   27) 
(   28) dx25 = 0.25 / dx
(   29) dy25 = 0.25 / dy
(   30) 






NVFORTRAN (Version     23.1)          02/24/2023  13:57:29      page 3

(   31) 
(   32) if(RUN3D) then
(   33) 
(   34) do k = 1,nzm
(   35)  kc= k+1
(   36)  kcu =min(kc, nzm)
(   37)  irho = 1./(rhow(kc)*adzw(kc))
(   38) 
(   39)  do j = 1, ny
(   40)   jb = j-1
(   41)   do i = 0, nx 
(   42)    ic = i+1
(   43)    fu(i,j,k)=dx25*(u(ic,j,k)+u(i,j,k))*(u(i,j,k)+u(ic,j,k))
(   44)    fv(i,j,k)=dx25*(u(ic,j,k)+u(ic,jb,k))*(v(i,j,k)+v(ic,j,k))
(   45)    fw(i,j,k)=dx25*(u(ic,j,k)*rho(k)*adz(k)+ &
(   46)              u(ic,j,kcu)*rho(kcu)*adz(kcu))*(w(i,j,kc)+w(ic,j,kc))
(   47)   end do 
(   48)   do i = 1, nx
(   49)    ib = i-1
(   50)     dudt(i,j,k,na)  = dudt(i,j,k,na)  - (fu(i,j,k)-fu(ib,j,k))
(   51)     dvdt(i,j,k,na)  = dvdt(i,j,k,na)  - (fv(i,j,k)-fv(ib,j,k))
(   52)     dwdt(i,j,kc,na) = dwdt(i,j,kc,na)-irho*(fw(i,j,k)-fw(ib,j,k))
(   53)   end do 
(   54)  end do 
(   55) 
(   56)  do j = 0, ny 
(   57)   jc = j+1
(   58)   do i = 1, nx
(   59)    ib = i-1
(   60)    fu(i,j,k)=dy25*(v(i,jc,k)+v(ib,jc,k))*(u(i,j,k)+u(i,jc,k))
(   61)    fv(i,j,k)=dy25*(v(i,jc,k)+v(i,j,k))*(v(i,j,k)+v(i,jc,k))
(   62)    fw(i,j,k)=dy25*(v(i,jc,k)*rho(k)*adz(k)+ &
(   63)              v(i,jc,kcu)*rho(kcu)*adz(kcu))*(w(i,j,kc)+w(i,jc,kc))
(   64)   end do
(   65)  end do 
(   66)  do j = 1,ny
(   67)   jb = j-1
(   68)   do i = 1, nx
(   69)    dudt(i,j,k,na) = dudt(i,j,k,na) - (fu(i,j,k) - fu(i,jb,k))
(   70)    dvdt(i,j,k,na) = dvdt(i,j,k,na) - (fv(i,j,k) - fv(i,jb,k))
(   71)    dwdt(i,j,kc,na)= dwdt(i,j,kc,na)-irho*(fw(i,j,k)-fw(i,jb,k))
(   72)   end do
(   73)  end do 
(   74)  
(   75) end do ! k
(   76) 
(   77) 
(   78) else
(   79) 
(   80) j=1
(   81) 
(   82) do k = 1,nzm
(   83)  kc= k+1
(   84)  kcu =min(kc, nzm)
(   85)  irho = 1./(rhow(kc)*adzw(kc))
(   86) 
(   87)   do i = 0, nx 
(   88)    ic = i+1






NVFORTRAN (Version     23.1)          02/24/2023  13:57:29      page 4

(   89)    fu(i,j,k)=dx25*(u(ic,j,k)+u(i,j,k))*(u(i,j,k)+u(ic,j,k))
(   90)    fv(i,j,k)=dx25*(u(ic,j,k)+u(i,j,k))*(v(i,j,k)+v(ic,j,k))
(   91)    fw(i,j,k)=dx25*(u(ic,j,k)*rho(k)*adz(k)+ &
(   92)              u(ic,j,kcu)*rho(kcu)*adz(kcu))*(w(i,j,kc)+w(ic,j,kc))
(   93)   end do 
(   94)   do i = 1, nx
(   95)    ib = i-1
(   96)     dudt(i,j,k,na)  = dudt(i,j,k,na)  - (fu(i,j,k)-fu(ib,j,k))
(   97)     dvdt(i,j,k,na)  = dvdt(i,j,k,na)  - (fv(i,j,k)-fv(ib,j,k))
(   98)     dwdt(i,j,kc,na) = dwdt(i,j,kc,na)-irho*(fw(i,j,k)-fw(ib,j,k))
(   99)   end do 
(  100) 
(  101) end do ! k
(  102) 
(  103) endif
(  104) 
(  105) end subroutine advect2_mom_xy
(  106) 














































NVFORTRAN (Version     23.1)          02/24/2023  13:57:29      page 5

(    1) # 1 "advect2_mom_xy.F90"
(    1) # 2 "advect2_mom_xy.F90"
(    2) subroutine advect2_mom_xy
(    3) # 4 "advect2_mom_xy.F90"
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) # 14 "advect2_mom_xy.F90"
(   14) !        momentum tendency due to 2nd-order-central horizontal advection
(   15) # 16 "advect2_mom_xy.F90"
(   16) use vars
(   17) use real_size
(   18) # 19 "advect2_mom_xy.F90"
(   19) implicit none
(   20) # 21 "advect2_mom_xy.F90"
(   21) real(RR) fu(0:nx,1-YES3D:ny,nzm) 
(   22) real(RR) fv(0:nx,1-YES3D:ny,nzm)
(   23) real(RR) fw(0:nx,1-YES3D:ny,nzm)
(   24) real(RR) dx25, dy25, irho
(   25) # 26 "advect2_mom_xy.F90"
(   26) integer i, j, k, kc, kcu, ic, jb, ib, jc
(   27) # 28 "advect2_mom_xy.F90"
(   28) dx25 = 0.25 / dx
(   29) dy25 = 0.25 / dy
(   30) # 32 "advect2_mom_xy.F90"
(   32) if(RUN3D) then
(   33) # 34 "advect2_mom_xy.F90"
(   34) do k = 1,nzm
(   35)  kc= k+1
(   36)  kcu =min(kc, nzm)
(   37)  irho = 1./(rhow(kc)*adzw(kc))
(   38) # 39 "advect2_mom_xy.F90"
(   39)  do j = 1, ny
(   40)   jb = j-1
(   41)   do i = 0, nx 
(   42)    ic = i+1
(   43)    fu(i,j,k)=dx25*(u(ic,j,k)+u(i,j,k))*(u(i,j,k)+u(ic,j,k))
(   44)    fv(i,j,k)=dx25*(u(ic,j,k)+u(ic,jb,k))*(v(i,j,k)+v(ic,j,k))
(   45)    fw(i,j,k)=dx25*(u(ic,j,k)*rho(k)*adz(k)+ &
(   46)              u(ic,j,kcu)*rho(kcu)*adz(kcu))*(w(i,j,kc)+w(ic,j,kc))
(   47)   end do 
(   48)   do i = 1, nx
(   49)    ib = i-1
(   50)     dudt(i,j,k,na)  = dudt(i,j,k,na)  - (fu(i,j,k)-fu(ib,j,k))
(   51)     dvdt(i,j,k,na)  = dvdt(i,j,k,na)  - (fv(i,j,k)-fv(ib,j,k))
(   52)     dwdt(i,j,kc,na) = dwdt(i,j,kc,na)-irho*(fw(i,j,k)-fw(ib,j,k))
(   53)   end do 
(   54)  end do 
(   55) # 56 "advect2_mom_xy.F90"
(   56)  do j = 0, ny 
(   57)   jc = j+1
(   58)   do i = 1, nx






NVFORTRAN (Version     23.1)          02/24/2023  13:57:29      page 6

(   59)    ib = i-1
(   60)    fu(i,j,k)=dy25*(v(i,jc,k)+v(ib,jc,k))*(u(i,j,k)+u(i,jc,k))
(   61)    fv(i,j,k)=dy25*(v(i,jc,k)+v(i,j,k))*(v(i,j,k)+v(i,jc,k))
(   62)    fw(i,j,k)=dy25*(v(i,jc,k)*rho(k)*adz(k)+ &
(   63)              v(i,jc,kcu)*rho(kcu)*adz(kcu))*(w(i,j,kc)+w(i,jc,kc))
(   64)   end do
(   65)  end do 
(   66)  do j = 1,ny
(   67)   jb = j-1
(   68)   do i = 1, nx
(   69)    dudt(i,j,k,na) = dudt(i,j,k,na) - (fu(i,j,k) - fu(i,jb,k))
(   70)    dvdt(i,j,k,na) = dvdt(i,j,k,na) - (fv(i,j,k) - fv(i,jb,k))
(   71)    dwdt(i,j,kc,na)= dwdt(i,j,kc,na)-irho*(fw(i,j,k)-fw(i,jb,k))
(   72)   end do
(   73)  end do 
(   74)  
(   75) end do ! k
(   76) # 78 "advect2_mom_xy.F90"
(   78) else
(   79) # 80 "advect2_mom_xy.F90"
(   80) j=1
(   81) # 82 "advect2_mom_xy.F90"
(   82) do k = 1,nzm
(   83)  kc= k+1
(   84)  kcu =min(kc, nzm)
(   85)  irho = 1./(rhow(kc)*adzw(kc))
(   86) # 87 "advect2_mom_xy.F90"
(   87)   do i = 0, nx 
(   88)    ic = i+1
(   89)    fu(i,j,k)=dx25*(u(ic,j,k)+u(i,j,k))*(u(i,j,k)+u(ic,j,k))
(   90)    fv(i,j,k)=dx25*(u(ic,j,k)+u(i,j,k))*(v(i,j,k)+v(ic,j,k))
(   91)    fw(i,j,k)=dx25*(u(ic,j,k)*rho(k)*adz(k)+ &
(   92)              u(ic,j,kcu)*rho(kcu)*adz(kcu))*(w(i,j,kc)+w(ic,j,kc))
(   93)   end do 
(   94)   do i = 1, nx
(   95)    ib = i-1
(   96)     dudt(i,j,k,na)  = dudt(i,j,k,na)  - (fu(i,j,k)-fu(ib,j,k))
(   97)     dvdt(i,j,k,na)  = dvdt(i,j,k,na)  - (fv(i,j,k)-fv(ib,j,k))
(   98)     dwdt(i,j,kc,na) = dwdt(i,j,kc,na)-irho*(fw(i,j,k)-fw(ib,j,k))
(   99)   end do 
(  100) # 101 "advect2_mom_xy.F90"
(  101) end do ! k
(  102) # 103 "advect2_mom_xy.F90"
(  103) endif
(  104) # 105 "advect2_mom_xy.F90"
(  105) end subroutine advect2_mom_xy
