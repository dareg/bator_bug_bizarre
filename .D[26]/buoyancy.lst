


NVFORTRAN (Version     23.1)          02/24/2023  13:57:44      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:57:44      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: buoyancy.F90

(    1) 
(    2) subroutine buoyancy()
(    3) 
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) 
(   14) use vars
(   15) use params
(   16) use real_size
(   17) implicit none
(   18) 
(   19) integer i,j,k,kb
(   20) real(RR) betu, betd, rdt, w_limit
(   21) 
(   22) if(docolumn) return
(   23) 
(   24) do k=2,nzm
(   25)  kb=k-1
(   26)  betu=adz(kb)/(adz(k)+adz(kb))
(   27)  betd=adz(k)/(adz(k)+adz(kb))
(   28)  do j=1,ny
(   29)   do i=1,nx
(   30) 






NVFORTRAN (Version     23.1)          02/24/2023  13:57:44      page 3

(   31)    dwdt(i,j,k,na)=dwdt(i,j,k,na) +  &
(   32)       bet(k)*betu* &
(   33)      ( tabs0(k)*(epsv*(qv(i,j,k)-qv0(k))-(qcl(i,j,k)+qci(i,j,k)-qn0(k)+qpl(i,j,k)+qpi(i,j,k)-qp0(k))) &
(   34)        +(tabs(i,j,k)-tabs0(k))*(1.+epsv*qv0(k)-qn0(k)-qp0(k)) ) &
(   35)     + bet(kb)*betd* &
(   36)      ( tabs0(kb)*(epsv*(qv(i,j,kb)-qv0(kb))-(qcl(i,j,kb)+qci(i,j,kb)-qn0(kb)+qpl(i,j,kb)+qpi(i,j,kb)-qp0(kb))) &
(   37)        +(tabs(i,j,kb)-tabs0(kb))*(1.+epsv*qv0(kb)-qn0(kb)-qp0(kb)) ) 
(   38) 
(   39) ! limiter of vertical velocity tendency for SP
(   40) 
(   41) !   dwdt(i,j,k,na) = min(dwdt(i,j,k,na),rdt*(w_limit-w(i,j,k)))
(   42) !   dwdt(i,j,k,na) = max(dwdt(i,j,k,na),rdt*(-w_limit-w(i,j,k)))
(   43) 
(   44)   end do ! i
(   45)  end do ! j
(   46) end do ! k
(   47) 
(   48) 
(   49) end subroutine buoyancy
(   50) 
(   51) 











































NVFORTRAN (Version     23.1)          02/24/2023  13:57:44      page 4

(    1) # 1 "buoyancy.F90"
(    1) # 2 "buoyancy.F90"
(    2) subroutine buoyancy()
(    3) # 4 "buoyancy.F90"
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) # 14 "buoyancy.F90"
(   14) use vars
(   15) use params
(   16) use real_size
(   17) implicit none
(   18) # 19 "buoyancy.F90"
(   19) integer i,j,k,kb
(   20) real(RR) betu, betd, rdt, w_limit
(   21) # 22 "buoyancy.F90"
(   22) if(docolumn) return
(   23) # 24 "buoyancy.F90"
(   24) do k=2,nzm
(   25)  kb=k-1
(   26)  betu=adz(kb)/(adz(k)+adz(kb))
(   27)  betd=adz(k)/(adz(k)+adz(kb))
(   28)  do j=1,ny
(   29)   do i=1,nx
(   30) # 31 "buoyancy.F90"
(   31)    dwdt(i,j,k,na)=dwdt(i,j,k,na) +  &
(   32)       bet(k)*betu* &
(   33)      ( tabs0(k)*(epsv*(qv(i,j,k)-qv0(k))-(qcl(i,j,k)+qci(i,j,k)-qn0(k)+qpl(i,j,k)+qpi(i,j,k)-qp0(k))) &
(   34)        +(tabs(i,j,k)-tabs0(k))*(1.+epsv*qv0(k)-qn0(k)-qp0(k)) ) &
(   35)     + bet(kb)*betd* &
(   36)      ( tabs0(kb)*(epsv*(qv(i,j,kb)-qv0(kb))-(qcl(i,j,kb)+qci(i,j,kb)-qn0(kb)+qpl(i,j,kb)+qpi(i,j,kb)-qp0(kb))) &
(   37)        +(tabs(i,j,kb)-tabs0(kb))*(1.+epsv*qv0(kb)-qn0(kb)-qp0(kb)) ) 
(   38) # 39 "buoyancy.F90"
(   39) ! limiter of vertical velocity tendency for SP
(   40) # 41 "buoyancy.F90"
(   41) !   dwdt(i,j,k,na) = min(dwdt(i,j,k,na),rdt*(w_limit-w(i,j,k)))
(   42) !   dwdt(i,j,k,na) = max(dwdt(i,j,k,na),rdt*(-w_limit-w(i,j,k)))
(   43) # 44 "buoyancy.F90"
(   44)   end do ! i
(   45)  end do ! j
(   46) end do ! k
(   47) # 49 "buoyancy.F90"
(   49) end subroutine buoyancy
