


NVFORTRAN (Version     23.1)          02/24/2023  13:57:57      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:57:57      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: press_grad.F90

(    1) 
(    2) subroutine press_grad
(    3) 
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) 
(   14) !       pressure term of the momentum equations
(   15) 
(   16) use vars
(   17) implicit none
(   18) 
(   19) real(8) rdx,rdy,rdz
(   20) integer i,j,k,kb,jb,ib
(   21) 
(   22) rdx=1./dx
(   23) rdy=1./dy
(   24) 
(   25) do k=1,nzm
(   26)  kb=max(1,k-1)
(   27)  rdz = 1./(dz*adzw(k))
(   28)  do j=1,ny
(   29)   jb=j-YES3D
(   30)   do i=1,nx






NVFORTRAN (Version     23.1)          02/24/2023  13:57:57      page 3

(   31)    ib=i-1 
(   32)    dudt(i,j,k,na)=dudt(i,j,k,na)-(p(i,j,k)-p(ib,j,k))*rdx
(   33)    dvdt(i,j,k,na)=dvdt(i,j,k,na)-(p(i,j,k)-p(i,jb,k))*rdy
(   34)    dwdt(i,j,k,na)=dwdt(i,j,k,na)-(p(i,j,k)-p(i,j,kb))*rdz
(   35)   end do ! i
(   36)  end do ! j
(   37) end do ! k
(   38) 
(   39) do k=1,nzm
(   40)  do j=1,ny
(   41)   do i=1,nx
(   42)     p(i,j,k)=p(i,j,k)*rho(k)  ! convert p'/rho to p'
(   43)   end do
(   44)  end do 
(   45) end do  
(   46) 
(   47) if(dowallx.and.mod(rank,nsubdomains_x).eq.0) then
(   48) 
(   49)     do k=1,nzm
(   50)      do j=1,ny
(   51)       dudt(1,j,k,na) = 0.
(   52)      end do
(   53)     end do
(   54) 
(   55) end if
(   56) 
(   57) if(dowally.and.RUN3D.and.rank.lt.nsubdomains_x) then
(   58) 
(   59)     do k=1,nzm
(   60)      do i=1,nx
(   61)       dvdt(i,1,k,na) = 0.
(   62)      end do
(   63)     end do
(   64) 
(   65) end if
(   66) 
(   67) if(dompi) then
(   68)    call task_bound_duvdt()
(   69) else
(   70)    call bound_duvdt()   
(   71) endif
(   72) 
(   73) call task_barrier()
(   74) 
(   75) end subroutine press_grad
(   76) 
(   77) 
(   78) 
















NVFORTRAN (Version     23.1)          02/24/2023  13:57:57      page 4

(    1) # 1 "press_grad.F90"
(    1) # 2 "press_grad.F90"
(    2) subroutine press_grad
(    3) # 4 "press_grad.F90"
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) # 14 "press_grad.F90"
(   14) !       pressure term of the momentum equations
(   15) # 16 "press_grad.F90"
(   16) use vars
(   17) implicit none
(   18) # 19 "press_grad.F90"
(   19) real(8) rdx,rdy,rdz
(   20) integer i,j,k,kb,jb,ib
(   21) # 22 "press_grad.F90"
(   22) rdx=1./dx
(   23) rdy=1./dy
(   24) # 25 "press_grad.F90"
(   25) do k=1,nzm
(   26)  kb=max(1,k-1)
(   27)  rdz = 1./(dz*adzw(k))
(   28)  do j=1,ny
(   29)   jb=j-YES3D
(   30)   do i=1,nx
(   31)    ib=i-1 
(   32)    dudt(i,j,k,na)=dudt(i,j,k,na)-(p(i,j,k)-p(ib,j,k))*rdx
(   33)    dvdt(i,j,k,na)=dvdt(i,j,k,na)-(p(i,j,k)-p(i,jb,k))*rdy
(   34)    dwdt(i,j,k,na)=dwdt(i,j,k,na)-(p(i,j,k)-p(i,j,kb))*rdz
(   35)   end do ! i
(   36)  end do ! j
(   37) end do ! k
(   38) # 39 "press_grad.F90"
(   39) do k=1,nzm
(   40)  do j=1,ny
(   41)   do i=1,nx
(   42)     p(i,j,k)=p(i,j,k)*rho(k)  ! convert p'/rho to p'
(   43)   end do
(   44)  end do 
(   45) end do  
(   46) # 47 "press_grad.F90"
(   47) if(dowallx.and.mod(rank,nsubdomains_x).eq.0) then
(   48) # 49 "press_grad.F90"
(   49)     do k=1,nzm
(   50)      do j=1,ny
(   51)       dudt(1,j,k,na) = 0.
(   52)      end do
(   53)     end do
(   54) # 55 "press_grad.F90"
(   55) end if
(   56) # 57 "press_grad.F90"
(   57) if(dowally.and.RUN3D.and.rank.lt.nsubdomains_x) then






NVFORTRAN (Version     23.1)          02/24/2023  13:57:57      page 5

(   58) # 59 "press_grad.F90"
(   59)     do k=1,nzm
(   60)      do i=1,nx
(   61)       dvdt(i,1,k,na) = 0.
(   62)      end do
(   63)     end do
(   64) # 65 "press_grad.F90"
(   65) end if
(   66) # 67 "press_grad.F90"
(   67) if(dompi) then
(   68)    call task_bound_duvdt()
(   69) else
(   70)    call bound_duvdt()   
(   71) endif
(   72) # 73 "press_grad.F90"
(   73) call task_barrier()
(   74) # 75 "press_grad.F90"
(   75) end subroutine press_grad
