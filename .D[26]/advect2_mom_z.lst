


NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: advect2_mom_z.F90

(    1) 
(    2) subroutine advect2_mom_z
(    3) 
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) 
(   14) !       momentum tendency due to the 2nd-order-central vertical advection
(   15) 
(   16) use vars
(   17) use real_size
(   18) 
(   19) implicit none
(   20) 
(   21) 
(   22) real(RR) fuz(nx,ny,nz),fvz(nx,ny,nz),fwz(nx,ny,nzm)
(   23) integer i, j, k, kc, kb
(   24) real(RR) dz2, dz25, www, rhoi
(   25) 
(   26) dz25=1./(4.*dz)
(   27) dz2=dz25*2.
(   28) 
(   29) do j=1,ny
(   30)  do i=1,nx






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 3

(   31)   fuz(i,j,1) = 0.
(   32)   fvz(i,j,1) = 0.
(   33)   fuz(i,j,nz) = 0.
(   34)   fvz(i,j,nz) = 0.
(   35)   fwz(i,j,1) = 0.
(   36)   fwz(i,j,nzm) = 0.
(   37)  end do
(   38) end do
(   39) 
(   40) !uwle(1) = 0.
(   41) !vwle(1) = 0.	 
(   42) 
(   43) if(RUN3D) then
(   44) 
(   45) do k=2,nzm
(   46)  kb = k-1
(   47)  rhoi = dz25 * rhow(k)
(   48) ! uwle(k) = 0.
(   49) ! vwle(k) = 0.
(   50)  do j=1,ny
(   51)   do i=1,nx
(   52)    fuz(i,j,k) = rhoi*(w(i,j,k)+w(i-1,j,k))*(u(i,j,k)+u(i,j,kb))
(   53)    fvz(i,j,k) = rhoi*(w(i,j,k)+w(i,j-1,k))*(v(i,j,k)+v(i,j,kb))
(   54)    uwle(k) = uwle(k)+fuz(i,j,k)
(   55)    vwle(k) = vwle(k)+fvz(i,j,k)
(   56)   end do
(   57)  end do
(   58) end do
(   59) 
(   60) else
(   61) 
(   62) do k=2,nzm
(   63)  kb = k-1
(   64)  rhoi = dz25 * rhow(k)
(   65) ! uwle(k) = 0.
(   66) ! vwle(k) = 0.
(   67)  do j=1,ny
(   68)   do i=1,nx
(   69)     www = rhoi*(w(i,j,k)+w(i-1,j,k)) 
(   70)     fuz(i,j,k) = www*(u(i,j,k)+u(i,j,kb))
(   71)     fvz(i,j,k) = www*(v(i,j,k)+v(i,j,kb))
(   72)     uwle(k) = uwle(k)+fuz(i,j,k)
(   73)     vwle(k) = vwle(k)+fvz(i,j,k)
(   74)   end do
(   75)  end do
(   76) end do
(   77) 
(   78) 
(   79) endif
(   80) 
(   81) do k=1,nzm
(   82)  kc = k+1
(   83)  rhoi = 1./(rho(k)*adz(k))
(   84)  do j=1,ny
(   85)   do i=1,nx
(   86)    dudt(i,j,k,na)=dudt(i,j,k,na)-(fuz(i,j,kc)-fuz(i,j,k))*rhoi
(   87)    dvdt(i,j,k,na)=dvdt(i,j,k,na)-(fvz(i,j,kc)-fvz(i,j,k))*rhoi
(   88)    fwz(i,j,k)=dz25*(w(i,j,kc)*rhow(kc)+w(i,j,k)*rhow(k))*(w(i,j,kc)+w(i,j,k))






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 4

(   89)   end do
(   90)  end do
(   91) end do
(   92) 
(   93) do k=2,nzm
(   94)  kb=k-1
(   95)  rhoi = 1./(rhow(k)*adzw(k))
(   96)  do j=1,ny
(   97)   do i=1,nx
(   98)    dwdt(i,j,k,na)=dwdt(i,j,k,na)-(fwz(i,j,k)-fwz(i,j,kb))*rhoi
(   99)   end do
(  100)  end do
(  101) end do ! k
(  102) 
(  103) end subroutine advect2_mom_z
(  104) 
















































NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 5

(    1) # 1 "advect2_mom_z.F90"
(    1) # 2 "advect2_mom_z.F90"
(    2) subroutine advect2_mom_z
(    3) # 4 "advect2_mom_z.F90"
(    4) !************* LICENSE START *****************
(    5) !
(    6) ! Copyright 2015 Marat Khairoutdinov 
(    7) ! School of Marine & Atmospheric Sciences
(    8) ! Stony Brook University
(    9) ! This software is distributed under the terms of
(   10) ! the Apache License version 2.0.
(   11) !
(   12) !************** LICENSE END ******************
(   13) # 14 "advect2_mom_z.F90"
(   14) !       momentum tendency due to the 2nd-order-central vertical advection
(   15) # 16 "advect2_mom_z.F90"
(   16) use vars
(   17) use real_size
(   18) # 19 "advect2_mom_z.F90"
(   19) implicit none
(   20) # 22 "advect2_mom_z.F90"
(   22) real(RR) fuz(nx,ny,nz),fvz(nx,ny,nz),fwz(nx,ny,nzm)
(   23) integer i, j, k, kc, kb
(   24) real(RR) dz2, dz25, www, rhoi
(   25) # 26 "advect2_mom_z.F90"
(   26) dz25=1./(4.*dz)
(   27) dz2=dz25*2.
(   28) # 29 "advect2_mom_z.F90"
(   29) do j=1,ny
(   30)  do i=1,nx
(   31)   fuz(i,j,1) = 0.
(   32)   fvz(i,j,1) = 0.
(   33)   fuz(i,j,nz) = 0.
(   34)   fvz(i,j,nz) = 0.
(   35)   fwz(i,j,1) = 0.
(   36)   fwz(i,j,nzm) = 0.
(   37)  end do
(   38) end do
(   39) # 40 "advect2_mom_z.F90"
(   40) !uwle(1) = 0.
(   41) !vwle(1) = 0.	 
(   42) # 43 "advect2_mom_z.F90"
(   43) if(RUN3D) then
(   44) # 45 "advect2_mom_z.F90"
(   45) do k=2,nzm
(   46)  kb = k-1
(   47)  rhoi = dz25 * rhow(k)
(   48) ! uwle(k) = 0.
(   49) ! vwle(k) = 0.
(   50)  do j=1,ny
(   51)   do i=1,nx
(   52)    fuz(i,j,k) = rhoi*(w(i,j,k)+w(i-1,j,k))*(u(i,j,k)+u(i,j,kb))
(   53)    fvz(i,j,k) = rhoi*(w(i,j,k)+w(i,j-1,k))*(v(i,j,k)+v(i,j,kb))
(   54)    uwle(k) = uwle(k)+fuz(i,j,k)
(   55)    vwle(k) = vwle(k)+fvz(i,j,k)
(   56)   end do
(   57)  end do
(   58) end do






NVFORTRAN (Version     23.1)          02/24/2023  13:58:15      page 6

(   59) # 60 "advect2_mom_z.F90"
(   60) else
(   61) # 62 "advect2_mom_z.F90"
(   62) do k=2,nzm
(   63)  kb = k-1
(   64)  rhoi = dz25 * rhow(k)
(   65) ! uwle(k) = 0.
(   66) ! vwle(k) = 0.
(   67)  do j=1,ny
(   68)   do i=1,nx
(   69)     www = rhoi*(w(i,j,k)+w(i-1,j,k)) 
(   70)     fuz(i,j,k) = www*(u(i,j,k)+u(i,j,kb))
(   71)     fvz(i,j,k) = www*(v(i,j,k)+v(i,j,kb))
(   72)     uwle(k) = uwle(k)+fuz(i,j,k)
(   73)     vwle(k) = vwle(k)+fvz(i,j,k)
(   74)   end do
(   75)  end do
(   76) end do
(   77) # 79 "advect2_mom_z.F90"
(   79) endif
(   80) # 81 "advect2_mom_z.F90"
(   81) do k=1,nzm
(   82)  kc = k+1
(   83)  rhoi = 1./(rho(k)*adz(k))
(   84)  do j=1,ny
(   85)   do i=1,nx
(   86)    dudt(i,j,k,na)=dudt(i,j,k,na)-(fuz(i,j,kc)-fuz(i,j,k))*rhoi
(   87)    dvdt(i,j,k,na)=dvdt(i,j,k,na)-(fvz(i,j,kc)-fvz(i,j,k))*rhoi
(   88)    fwz(i,j,k)=dz25*(w(i,j,kc)*rhow(kc)+w(i,j,k)*rhow(k))*(w(i,j,kc)+w(i,j,k))
(   89)   end do
(   90)  end do
(   91) end do
(   92) # 93 "advect2_mom_z.F90"
(   93) do k=2,nzm
(   94)  kb=k-1
(   95)  rhoi = 1./(rhow(k)*adzw(k))
(   96)  do j=1,ny
(   97)   do i=1,nx
(   98)    dwdt(i,j,k,na)=dwdt(i,j,k,na)-(fwz(i,j,k)-fwz(i,j,kb))*rhoi
(   99)   end do
(  100)  end do
(  101) end do ! k
(  102) # 103 "advect2_mom_z.F90"
(  103) end subroutine advect2_mom_z
