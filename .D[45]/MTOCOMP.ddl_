SET $NMXUPD = 3 ; 
CREATE TYPE report_rdbflag_t AS ( 
lat_humon bit1 , 
lat_QCsub bit1 , 
lat_override bit1 , 
lat_flag bit2 , 
lat_HQC_flag bit1 , 
lon_humon bit1 , 
lon_QCsub bit1 , 
lon_override bit1 , 
lon_flag bit2 , 
lon_HQC_flag bit1 , 
date_humon bit1 , 
date_QCsub bit1 , 
date_override bit1 , 
date_flag bit2 , 
date_HQC_flag bit1 , 
time_humon bit1 , 
time_QCsub bit1 , 
time_override bit1 , 
time_flag bit2 , 
time_HQC_flag bit1 , 
stalt_humon bit1 , 
stalt_QCsub bit1 , 
stalt_override bit1 , 
stalt_flag bit2 , 
stalt_HQC_flag bit1 , 
) ; 

CREATE TYPE status_t AS ( 
active bit1 , 
passive bit1 , 
rejected bit1 , 
blacklisted bit1 , 
monthly bit1 , 
constant bit1 , 
experimental bit1 , 
whitelist bit1 , 
) ; 

CREATE TYPE datum_flag_t AS ( 
final bit4 , 
fg bit4 , 
depar bit4 , 
varQC bit4 , 
blacklist bit4 , 
ups bit1 , 
uvt bit1 , 
uhu bit1 , 
ut2 bit1 , 
uh2 bit1 , 
uv1 bit1 , 
urr bit1 , 
usn bit1 , 
usst bit1 , 
) ; 

CREATE TYPE report_event1_t AS ( 
no_data bit1 , 
all_rejected bit1 , 
bad_practice bit1 , 
rdb_rejected bit1 , 
rdb_activated bit1 , 
whitelist_activated bit1 , 
horipos_outrange bit1 , 
vertpos_outrange bit1 , 
time_outrange bit1 , 
redundant bit1 , 
land bit1 , 
sea bit1 , 
stalt_missing bit1 , 
modsurf_stalt_distance bit1 , 
namelist_rejected bit1 , 
QC_failed bit1 , 
) ; 

CREATE TYPE report_event2_t = pk1int ; 

CREATE TYPE datum_event1_t AS ( 
vertco_missing bit1 , 
obsvalue_missing bit1 , 
fg_missing bit1 , 
rdb_rejected bit1 , 
rdb_activated bit1 , 
whitelist_activated bit1 , 
bad_practice bit1 , 
vertpos_outrange bit1 , 
reflevel_outrange bit1 , 
fg2big bit1 , 
depar2big bit1 , 
obs_error2big bit1 , 
datum_redundant bit1 , 
level_redundant bit1 , 
land bit1 , 
sea bit1 , 
not_analysis_varno bit1 , 
duplicate bit1 , 
levels2many bit1 , 
multilevel_check bit1 , 
level_selection bit1 , 
vertco_consistency bit1 , 
vertco_type_changed bit1 , 
namelist_rejected bit1 , 
combined_flagging bit1 , 
report_rejected bit1 , 
varQC_performed bit1 , 
contam_cld_flag bit1 , 
contam_rain_flag bit1 , 
contam_aerosol_flag bit1 , 
contam_trgas_flag bit1 , 
land_sensitivity bit1 , 
) ; 

CREATE TABLE ddrs AS ( 
ddrno pk1int , 
wordno pk1int , 
bulkdata pk9real , 
) ; 

CREATE TABLE hdr AS ( 
obstype pk1int , 
codetype pk1int , 
insttype pk1int , 
date YYYYMMDD , 
time HHMMSS , 
status STATUS_t , 
event1 REPORT_EVENT1_t , 
statid string , 
ident pk1int , 
lat pk9real , 
lon pk9real , 
stalt pk9real , 
modoro pk9real , 
sensor pk1int , 
sat @LINK , 
body @LINK , 
errstat @LINK , 
update [ 1 : $NMXUPD ] @LINK , 
rdbflag REPORT_RDBFLAG_t , 
event2 REPORT_EVENT2_t , 
) ; 

CREATE TABLE sat AS ( 
satid pk1int , 
atovs @LINK , 
reo3 @LINK , 
satob @LINK , 
scatt @LINK , 
) ; 

CREATE TABLE reo3 AS ( 
solar_elevation pk9real , 
) ; 

CREATE TABLE satob AS ( 
comp_method pk1int , 
) ; 

CREATE TABLE atovs AS ( 
scanline pk1int , 
fov pk1int , 
bearing_azimuth pk9real , 
cldne [ 1 : 2 ] pk9real , 
) ; 

CREATE TABLE atovs_pred AS ( 
predictor [ 16 ] pk9real , 
) ; 

CREATE TABLE scatt AS ( 
cellno pk1int , 
) ; 

CREATE TABLE body AS ( 
varno pk1int , 
anflag DATUM_FLAG_t , 
status STATUS_t , 
event1 DATUM_EVENT1_t , 
press pk9real , 
press_rl pk9real , 
obsvalue pk9real , 
biascorr pk9real , 
an_depar pk9real , 
fg_depar pk9real , 
fg_check [ 2 ] pk9real , 
) ; 

CREATE TABLE errstat AS ( 
obs_error pk9real , 
repres_error pk9real , 
fg_error pk9real , 
) ; 

CREATE TABLE update [ 1 : $NMXUPD ] AS ( 
hires pk9real , 
lores pk9real , 
) ; 

;
