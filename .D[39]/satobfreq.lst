


NVFORTRAN (Version     23.1)          02/24/2023  13:41:12      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:41:12      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: satobfreq.F90

(    1) SUBROUTINE SATOBFREQ(SATID,FREQ,ID_FREQ)
(    2) USE PARKIND1  ,ONLY : JPIM     ,JPRD
(    3) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(    4) 
(    5) 
(    6) !**** SUBROUTINE SATOBFREQ - CHANNEL ID FROM CHANNEL FREQUENCY FOR SATOB
(    7) !
(    8) !          LUEDER VON BREMEN, ECMWF          05/SEPT/2003
(    9) !
(   10) !     PURPOSE
(   11) !     -------
(   12) !     
(   13) !     WITH THE INTRODUCTION OF SATOBS FROM SEVERAL CHANNELS WITHIN THE SAME BAND 
(   14) !     IT GETS NECESSARY TO DISTINGUISH THESE FREQUENCIES WITHIN THE COMPUTATIONAL
(   15) !     METHOD. THEREFORE A FREQUENCY ID FOR EACH BAND IS CHOSEN. 
(   16) !     THE FREQUENCY ID IS DETERMINED IN THIS ROUTINE FOR EACH SATELLITE HAVING MORE 
(   17) !     ONE FREQUENCY PER BAND (COMPUTATIONAL METHOD). IT STARTS WITH METEOSAT SECOND 
(   18) !     GENERATION (MSG).
(   19) !
(   20) !     INTERFACE
(   21) !     ---------
(   22) !
(   23) !     ***CALL*SATOBFREQ(SATID,FREQ,ID_FREQ)
(   24) !     WHERE SATID   = SATELLITE IDENTIFIER
(   25) !           FREQ    = CHANNEL FREQUENCY 
(   26) !           ID_FREQ = ID (NUMBER) OF THE FREQUENCY WITHIN THE BAND
(   27) !
(   28) !     SATOBFREQ IS CALLED BY SUBROUTINE bufr2odb_satob (odb/bufr2odb) AND buxtract (obstat/src)
(   29) !
(   30) !*    METHOD






NVFORTRAN (Version     23.1)          02/24/2023  13:41:12      page 3

(   31) !     ------
(   32) !     
(   33) !     THE CHANNEL FREQUENCY IS COMPARED WITH THE KNOWN VALUES. IF A CHANNEL FREQUENCY 
(   34) !     CAN NOT BE SORTED, THE ID_FREQ KEEPS ZERO AND THIS CHANNEL WILL BE BLACKLISTED BY
(   35) !     THE 'notin' COMMAND IN THE BLACKLIST.
(   36) !
(   37) !*    EXTERNALS
(   38) !     ---------
(   39) 
(   40) !**   MODIFICATIONS
(   41) !     -------------
(   42) !     05/06/06   CLAIRE DELSOL  Added ID for MET-9 and GOES-11
(   43) !
(   44) !     06/2005 C. PAYAN : GOES11, Meteosat-9 added, sorted by increasing satid
(   45) 
(   46) INTEGER(KIND=JPIM), INTENT(IN)  :: SATID
(   47) REAL(KIND=JPRD), INTENT(IN)     :: FREQ                  ! Hz
(   48) INTEGER(KIND=JPIM), INTENT(OUT) :: ID_FREQ
(   49) REAL(KIND=JPRD),parameter       :: epsilon=0.00001D+15 ! Hz
(   50) 
(   51) REAL(KIND=JPRD) :: ZHOOK_HANDLE
(   52) 
(   53) !--------------------------------------------------------------------------------------
(   54) 
(   55) IF (LHOOK) CALL DR_HOOK('SATOBFREQ',0,ZHOOK_HANDLE)
(   56) 
(   57)          ID_FREQ=0
(   58)          if ((SATID == 55) .or. (SATID == 56) .or. (SATID == 57) .or. & ! Meteosat-8, Meteosat-9, Meteosat-10
(   59)           &  (SATID == 70)) then !Meteosat-11
(   60)             if(FREQ .gt. 0.4721142137D15-epsilon     .and. FREQ .lt. 0.4721142137D15+epsilon ) then
(   61)                ID_FREQ=1        ! VIS1
(   62)             elseif(FREQ .gt. 0.399723D15-epsilon .and. FREQ .lt. 0.399723D15+epsilon ) then
(   63)                ID_FREQ=3        ! VIS2 (high resolution)
(   64)             elseif(FREQ .gt. 0.3701142098D15-epsilon .and. FREQ .lt. 0.3701142098D15+epsilon ) then
(   65)                ID_FREQ=2        ! VIS3
(   66)             elseif(FREQ .gt. 0.4796679874D14-epsilon .and. FREQ .lt. 0.4796679874D14+epsilon ) then
(   67)                ID_FREQ=1        ! WV1
(   68)             elseif(FREQ .gt. 0.4078810064D14-epsilon .and. FREQ .lt. 0.4078810064D14+epsilon ) then
(   69)                ID_FREQ=2        ! WV2
(   70)             elseif(FREQ .gt. 0.344589D14-epsilon .and. FREQ .lt. 0.344589D14+epsilon ) then 
(   71)                ID_FREQ=1        ! IR1
(   72)             elseif(FREQ .gt. 0.310344D14-epsilon .and. FREQ .lt. 0.310344D14+epsilon ) then 
(   73)                ID_FREQ=2        ! IR2
(   74)             elseif(FREQ .gt. 0.2775860013D14-epsilon .and. FREQ .lt. 0.2775860013D14+epsilon ) then 
(   75)                ID_FREQ=3        ! IR3
(   76)             else 
(   77)                WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(   78)             endif
(   79)          endif
(   80) 
(   81)          if ((SATID == 254) .or. (SATID == 255) .or. (SATID == 256) .or. & ! GOES-10,11,12
(   82)           &  (SATID == 257) .or. (SATID == 258) .or. (SATID == 259)) then  ! GOES-13,14,15
(   83)             if(FREQ .gt. 0.461538D15-epsilon     .and. FREQ .lt. 0.461538D15+epsilon ) then
(   84)                ID_FREQ=1        ! VIS1 (0.65um)
(   85)             elseif(FREQ .gt. 0.405405D14-epsilon .and. FREQ .lt. 0.405405D14+epsilon ) then
(   86)                ID_FREQ=1        ! WV1 (7.4um)
(   87)             elseif(FREQ .gt. 0.428571D14-epsilon .and. FREQ .lt. 0.428571D14+epsilon ) then
(   88)                ID_FREQ=2        ! WV2 (7.0um)






NVFORTRAN (Version     23.1)          02/24/2023  13:41:12      page 4

(   89)             elseif(FREQ .gt. 0.441176D14-epsilon .and. FREQ .lt. 0.461219D14+epsilon ) then
(   90)                ID_FREQ=3        ! WV3 (6.8um)
(   91)             elseif(FREQ .gt. 0.280374D14-epsilon .and. FREQ .lt. 0.280374D14+epsilon ) then 
(   92)                ID_FREQ=1        ! IR1 (10.7um)
(   93)             elseif(FREQ .gt. 0.768699D14-epsilon .and. FREQ .lt. 0.768699D14+epsilon ) then 
(   94)                ID_FREQ=2        ! IR2 (3.9um)
(   95) !-- pollutes output --> removed by SS on 14-Dec-2005
(   96) !            else 
(   97) !               WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(   98)             endif
(   99)          endif
(  100)          
(  101)          if ((SATID == 270) .or. (SATID == 271)) then ! GOES-16,-17
(  102)             if(FREQ .gt. 0.4684257D15-epsilon     .and. FREQ .lt. 0.4684257D15+epsilon ) then
(  103)                ID_FREQ=1        ! VIS1 (0.64um)
(  104)             elseif(FREQ .gt. 0.408437D14-epsilon .and. FREQ .lt. 0.408437D14+epsilon ) then
(  105)                ID_FREQ=1        ! WV1 (7.4um)
(  106)             elseif(FREQ .gt. 0.431356D14-epsilon .and. FREQ .lt. 0.431356D14+epsilon ) then
(  107)                ID_FREQ=2        ! WV2 (7.0um)
(  108)             elseif(FREQ .gt. 0.484317D14-epsilon .and. FREQ .lt. 0.484317D14+epsilon ) then
(  109)                ID_FREQ=3        ! WV3 (6.15um)
(  110)             elseif(FREQ .gt. 0.267672D14-epsilon .and. FREQ .lt. 0.267672D14+epsilon ) then 
(  111)                ID_FREQ=1        ! IR1 (11.2um)
(  112)             elseif(FREQ .gt. 0.768699D14-epsilon .and. FREQ .lt. 0.768699D14+epsilon ) then 
(  113)                ID_FREQ=2        ! IR2 (3.9um)
(  114)             else 
(  115)                WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(  116)             endif
(  117)          endif
(  118) 
(  119)          if (SATID == 471) then ! INSAT-3D AMVs
(  120)             if(FREQ .gt. 0.4357D14-epsilon .and. FREQ .lt. 0.4357D14+epsilon ) then
(  121)                ID_FREQ=1        ! WV mixed
(  122)             elseif(FREQ .gt. 0.78299D14-epsilon .and. FREQ .lt. 0.78299D14+epsilon ) then
(  123)                ID_FREQ=2        ! IR2
(  124)             elseif(FREQ .gt. 0.277D14-epsilon .and. FREQ .lt.  0.277D14+epsilon ) then
(  125)                ID_FREQ=1        ! IR1
(  126)             elseif(FREQ .gt. 0.4600D15-epsilon .and. FREQ .lt.  0.4600D15+epsilon ) then
(  127)                ID_FREQ=1        ! VIS
(  128)             else 
(  129)                WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(  130)             endif
(  131)          endif
(  132) 
(  133)          if (SATID == 810) then  ! COMS AMVs
(  134)             ID_FREQ=1
(  135)             if(FREQ .gt. 0.8D14-epsilon .and. FREQ .lt. 0.8D14+epsilon ) then
(  136)                ID_FREQ=2        ! IR2 (3.75um)
(  137)             endif
(  138)          endif
(  139) 
(  140)          if ((SATID == 173)) then ! Himawari-8
(  141)             if(FREQ .gt. 0.46842570D15-epsilon     .and. FREQ .lt.  0.46842570D15+epsilon ) then
(  142)                ID_FREQ=1        ! VIS1
(  143)             elseif(FREQ .gt. 0.41067400D14-epsilon .and. FREQ .lt. 0.41067400D14+epsilon ) then
(  144)                ID_FREQ=1        ! WV1
(  145)             elseif(FREQ .gt. 0.43448100D14-epsilon .and. FREQ .lt.  0.43448100D14+epsilon ) then
(  146)                ID_FREQ=2        ! WV2






NVFORTRAN (Version     23.1)          02/24/2023  13:41:12      page 5

(  147)             elseif(FREQ .gt. 0.48353600D14-epsilon .and. FREQ .lt.  0.48353600D14+epsilon ) then
(  148)                ID_FREQ=3        ! WV3
(  149)             elseif(FREQ .gt. 0.28826100D14-epsilon .and. FREQ .lt. 0.28826100D14+epsilon ) then 
(  150)                ID_FREQ=1        ! IR1
(  151)             else 
(  152)                WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(  153)             endif
(  154)          endif
(  155) 
(  156) IF (LHOOK) CALL DR_HOOK('SATOBFREQ',1,ZHOOK_HANDLE)
(  157) 
(  158) END SUBROUTINE SATOBFREQ




















































NVFORTRAN (Version     23.1)          02/24/2023  13:41:12      page 6

(    1) # 1 "satobfreq.F90"
(    1) SUBROUTINE SATOBFREQ(SATID,FREQ,ID_FREQ)
(    2) USE PARKIND1  ,ONLY : JPIM     ,JPRD
(    3) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(    4) # 6 "satobfreq.F90"
(    6) !**** SUBROUTINE SATOBFREQ - CHANNEL ID FROM CHANNEL FREQUENCY FOR SATOB
(    7) !
(    8) !          LUEDER VON BREMEN, ECMWF          05/SEPT/2003
(    9) !
(   10) !     PURPOSE
(   11) !     -------
(   12) !     
(   13) !     WITH THE INTRODUCTION OF SATOBS FROM SEVERAL CHANNELS WITHIN THE SAME BAND 
(   14) !     IT GETS NECESSARY TO DISTINGUISH THESE FREQUENCIES WITHIN THE COMPUTATIONAL
(   15) !     METHOD. THEREFORE A FREQUENCY ID FOR EACH BAND IS CHOSEN. 
(   16) !     THE FREQUENCY ID IS DETERMINED IN THIS ROUTINE FOR EACH SATELLITE HAVING MORE 
(   17) !     ONE FREQUENCY PER BAND (COMPUTATIONAL METHOD). IT STARTS WITH METEOSAT SECOND 
(   18) !     GENERATION (MSG).
(   19) !
(   20) !     INTERFACE
(   21) !     ---------
(   22) !
(   23) !     ***CALL*SATOBFREQ(SATID,FREQ,ID_FREQ)
(   24) !     WHERE SATID   = SATELLITE IDENTIFIER
(   25) !           FREQ    = CHANNEL FREQUENCY 
(   26) !           ID_FREQ = ID (NUMBER) OF THE FREQUENCY WITHIN THE BAND
(   27) !
(   28) !     SATOBFREQ IS CALLED BY SUBROUTINE bufr2odb_satob (odb/bufr2odb) AND buxtract (obstat/src)
(   29) !
(   30) !*    METHOD
(   31) !     ------
(   32) !     
(   33) !     THE CHANNEL FREQUENCY IS COMPARED WITH THE KNOWN VALUES. IF A CHANNEL FREQUENCY 
(   34) !     CAN NOT BE SORTED, THE ID_FREQ KEEPS ZERO AND THIS CHANNEL WILL BE BLACKLISTED BY
(   35) !     THE 'notin' COMMAND IN THE BLACKLIST.
(   36) !
(   37) !*    EXTERNALS
(   38) !     ---------
(   39) # 40 "satobfreq.F90"
(   40) !**   MODIFICATIONS
(   41) !     -------------
(   42) !     05/06/06   CLAIRE DELSOL  Added ID for MET-9 and GOES-11
(   43) !
(   44) !     06/2005 C. PAYAN : GOES11, Meteosat-9 added, sorted by increasing satid
(   45) # 46 "satobfreq.F90"
(   46) INTEGER(KIND=JPIM), INTENT(IN)  :: SATID
(   47) REAL(KIND=JPRD), INTENT(IN)     :: FREQ                  ! Hz
(   48) INTEGER(KIND=JPIM), INTENT(OUT) :: ID_FREQ
(   49) REAL(KIND=JPRD),parameter       :: epsilon=0.00001D+15 ! Hz
(   50) # 51 "satobfreq.F90"
(   51) REAL(KIND=JPRD) :: ZHOOK_HANDLE
(   52) # 53 "satobfreq.F90"
(   53) !--------------------------------------------------------------------------------------
(   54) # 55 "satobfreq.F90"
(   55) IF (LHOOK) CALL DR_HOOK('SATOBFREQ',0,ZHOOK_HANDLE)
(   56) # 57 "satobfreq.F90"
(   57)          ID_FREQ=0
(   58)          if ((SATID == 55) .or. (SATID == 56) .or. (SATID == 57) .or. & ! Meteosat-8, Meteosat-9, Meteosat-10






NVFORTRAN (Version     23.1)          02/24/2023  13:41:12      page 7

(   59)           &  (SATID == 70)) then !Meteosat-11
(   60)             if(FREQ .gt. 0.4721142137D15-epsilon     .and. FREQ .lt. 0.4721142137D15+epsilon ) then
(   61)                ID_FREQ=1        ! VIS1
(   62)             elseif(FREQ .gt. 0.399723D15-epsilon .and. FREQ .lt. 0.399723D15+epsilon ) then
(   63)                ID_FREQ=3        ! VIS2 (high resolution)
(   64)             elseif(FREQ .gt. 0.3701142098D15-epsilon .and. FREQ .lt. 0.3701142098D15+epsilon ) then
(   65)                ID_FREQ=2        ! VIS3
(   66)             elseif(FREQ .gt. 0.4796679874D14-epsilon .and. FREQ .lt. 0.4796679874D14+epsilon ) then
(   67)                ID_FREQ=1        ! WV1
(   68)             elseif(FREQ .gt. 0.4078810064D14-epsilon .and. FREQ .lt. 0.4078810064D14+epsilon ) then
(   69)                ID_FREQ=2        ! WV2
(   70)             elseif(FREQ .gt. 0.344589D14-epsilon .and. FREQ .lt. 0.344589D14+epsilon ) then 
(   71)                ID_FREQ=1        ! IR1
(   72)             elseif(FREQ .gt. 0.310344D14-epsilon .and. FREQ .lt. 0.310344D14+epsilon ) then 
(   73)                ID_FREQ=2        ! IR2
(   74)             elseif(FREQ .gt. 0.2775860013D14-epsilon .and. FREQ .lt. 0.2775860013D14+epsilon ) then 
(   75)                ID_FREQ=3        ! IR3
(   76)             else 
(   77)                WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(   78)             endif
(   79)          endif
(   80) # 81 "satobfreq.F90"
(   81)          if ((SATID == 254) .or. (SATID == 255) .or. (SATID == 256) .or. & ! GOES-10,11,12
(   82)           &  (SATID == 257) .or. (SATID == 258) .or. (SATID == 259)) then  ! GOES-13,14,15
(   83)             if(FREQ .gt. 0.461538D15-epsilon     .and. FREQ .lt. 0.461538D15+epsilon ) then
(   84)                ID_FREQ=1        ! VIS1 (0.65um)
(   85)             elseif(FREQ .gt. 0.405405D14-epsilon .and. FREQ .lt. 0.405405D14+epsilon ) then
(   86)                ID_FREQ=1        ! WV1 (7.4um)
(   87)             elseif(FREQ .gt. 0.428571D14-epsilon .and. FREQ .lt. 0.428571D14+epsilon ) then
(   88)                ID_FREQ=2        ! WV2 (7.0um)
(   89)             elseif(FREQ .gt. 0.441176D14-epsilon .and. FREQ .lt. 0.461219D14+epsilon ) then
(   90)                ID_FREQ=3        ! WV3 (6.8um)
(   91)             elseif(FREQ .gt. 0.280374D14-epsilon .and. FREQ .lt. 0.280374D14+epsilon ) then 
(   92)                ID_FREQ=1        ! IR1 (10.7um)
(   93)             elseif(FREQ .gt. 0.768699D14-epsilon .and. FREQ .lt. 0.768699D14+epsilon ) then 
(   94)                ID_FREQ=2        ! IR2 (3.9um)
(   95) !-- pollutes output --> removed by SS on 14-Dec-2005
(   96) !            else 
(   97) !               WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(   98)             endif
(   99)          endif
(  100)          
(  101)          if ((SATID == 270) .or. (SATID == 271)) then ! GOES-16,-17
(  102)             if(FREQ .gt. 0.4684257D15-epsilon     .and. FREQ .lt. 0.4684257D15+epsilon ) then
(  103)                ID_FREQ=1        ! VIS1 (0.64um)
(  104)             elseif(FREQ .gt. 0.408437D14-epsilon .and. FREQ .lt. 0.408437D14+epsilon ) then
(  105)                ID_FREQ=1        ! WV1 (7.4um)
(  106)             elseif(FREQ .gt. 0.431356D14-epsilon .and. FREQ .lt. 0.431356D14+epsilon ) then
(  107)                ID_FREQ=2        ! WV2 (7.0um)
(  108)             elseif(FREQ .gt. 0.484317D14-epsilon .and. FREQ .lt. 0.484317D14+epsilon ) then
(  109)                ID_FREQ=3        ! WV3 (6.15um)
(  110)             elseif(FREQ .gt. 0.267672D14-epsilon .and. FREQ .lt. 0.267672D14+epsilon ) then 
(  111)                ID_FREQ=1        ! IR1 (11.2um)
(  112)             elseif(FREQ .gt. 0.768699D14-epsilon .and. FREQ .lt. 0.768699D14+epsilon ) then 
(  113)                ID_FREQ=2        ! IR2 (3.9um)
(  114)             else 
(  115)                WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(  116)             endif






NVFORTRAN (Version     23.1)          02/24/2023  13:41:12      page 8

(  117)          endif
(  118) # 119 "satobfreq.F90"
(  119)          if (SATID == 471) then ! INSAT-3D AMVs
(  120)             if(FREQ .gt. 0.4357D14-epsilon .and. FREQ .lt. 0.4357D14+epsilon ) then
(  121)                ID_FREQ=1        ! WV mixed
(  122)             elseif(FREQ .gt. 0.78299D14-epsilon .and. FREQ .lt. 0.78299D14+epsilon ) then
(  123)                ID_FREQ=2        ! IR2
(  124)             elseif(FREQ .gt. 0.277D14-epsilon .and. FREQ .lt.  0.277D14+epsilon ) then
(  125)                ID_FREQ=1        ! IR1
(  126)             elseif(FREQ .gt. 0.4600D15-epsilon .and. FREQ .lt.  0.4600D15+epsilon ) then
(  127)                ID_FREQ=1        ! VIS
(  128)             else 
(  129)                WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(  130)             endif
(  131)          endif
(  132) # 133 "satobfreq.F90"
(  133)          if (SATID == 810) then  ! COMS AMVs
(  134)             ID_FREQ=1
(  135)             if(FREQ .gt. 0.8D14-epsilon .and. FREQ .lt. 0.8D14+epsilon ) then
(  136)                ID_FREQ=2        ! IR2 (3.75um)
(  137)             endif
(  138)          endif
(  139) # 140 "satobfreq.F90"
(  140)          if ((SATID == 173)) then ! Himawari-8
(  141)             if(FREQ .gt. 0.46842570D15-epsilon     .and. FREQ .lt.  0.46842570D15+epsilon ) then
(  142)                ID_FREQ=1        ! VIS1
(  143)             elseif(FREQ .gt. 0.41067400D14-epsilon .and. FREQ .lt. 0.41067400D14+epsilon ) then
(  144)                ID_FREQ=1        ! WV1
(  145)             elseif(FREQ .gt. 0.43448100D14-epsilon .and. FREQ .lt.  0.43448100D14+epsilon ) then
(  146)                ID_FREQ=2        ! WV2
(  147)             elseif(FREQ .gt. 0.48353600D14-epsilon .and. FREQ .lt.  0.48353600D14+epsilon ) then
(  148)                ID_FREQ=3        ! WV3
(  149)             elseif(FREQ .gt. 0.28826100D14-epsilon .and. FREQ .lt. 0.28826100D14+epsilon ) then 
(  150)                ID_FREQ=1        ! IR1
(  151)             else 
(  152)                WRITE(*,*) '%E SATOBFREQ: channel frequency for',SATID,' has not been recognized',FREQ
(  153)             endif
(  154)          endif
(  155) # 156 "satobfreq.F90"
(  156) IF (LHOOK) CALL DR_HOOK('SATOBFREQ',1,ZHOOK_HANDLE)
(  157) # 158 "satobfreq.F90"
(  158) END SUBROUTINE SATOBFREQ
