


NVFORTRAN (Version     23.1)          02/24/2023  13:32:46      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:32:46      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: ptrgfu_type.F90

(    1) MODULE PTRGFU_TYPE
(    2) 
(    3) USE PARKIND1  ,ONLY : JPIM
(    4) 
(    5) IMPLICIT NONE
(    6) 
(    7) SAVE
(    8) 
(    9) !     ------------------------------------------------------------
(   10) 
(   11) !*    Pointers for cumulated fluxes diagnostics (CFU).
(   12) 
(   13) 
(   14) TYPE TCFUPTR
(   15) INTEGER(KIND=JPIM) :: MFCCQL        = 0 ! liquid condensation due to convection
(   16) INTEGER(KIND=JPIM) :: MFCCQN        = 0 ! solid condensation due to convection
(   17) INTEGER(KIND=JPIM) :: MFCHSP        = 0 ! heat in soil
(   18) INTEGER(KIND=JPIM) :: MFCL        = 0 ! latent heat
(   19) INTEGER(KIND=JPIM) :: MFCLL        = 0 ! liquid latent heat
(   20) INTEGER(KIND=JPIM) :: MFCLN        = 0 ! solid latent heat
(   21) INTEGER(KIND=JPIM) :: MFCSQL        = 0 ! large scale liquid condensation
(   22) INTEGER(KIND=JPIM) :: MFCSQN        = 0 ! large scale solid condensation
(   23) INTEGER(KIND=JPIM) :: MFCS        = 0 ! sensible heat
(   24) INTEGER(KIND=JPIM) :: MFDICQ        = 0 ! contribution of convection to q
(   25) INTEGER(KIND=JPIM) :: MFDICS        = 0 ! contribution of convection to (cp T)
(   26) INTEGER(KIND=JPIM) :: MFDISH        = 0 ! surface enthalpy (due to the dissipation of kinetic energy)
(   27) INTEGER(KIND=JPIM) :: MFDITQ        = 0 ! contribution of turbulence to T
(   28) INTEGER(KIND=JPIM) :: MFDITS        = 0 ! contribution of turbulence to (cp T)
(   29) INTEGER(KIND=JPIM) :: MFDUTP        = 0 ! filtered duration of total precipitations
(   30) INTEGER(KIND=JPIM) :: MFEVL        = 0 ! liquid evaporation






NVFORTRAN (Version     23.1)          02/24/2023  13:32:46      page 3

(   31) INTEGER(KIND=JPIM) :: MFEVN        = 0 ! snow evaporation
(   32) INTEGER(KIND=JPIM) :: MFEVV        = 0 ! evapotranspiration
(   33) INTEGER(KIND=JPIM) :: MFGEL        = 0 ! deep frost
(   34) INTEGER(KIND=JPIM) :: MFGELS        = 0 ! surface frost
(   35) INTEGER(KIND=JPIM) :: MFLASH        = 0 ! cumulative lighntning diagnotics
(   36) INTEGER(KIND=JPIM) :: MFLWSP        = 0 ! water in soil
(   37) INTEGER(KIND=JPIM) :: MFNEB        = 0 ! cloud cover
(   38) INTEGER(KIND=JPIM) :: MFNEBT        = 0 ! total cloudiness
(   39) INTEGER(KIND=JPIM) :: MFONTE        = 0 ! melt snow
(   40) INTEGER(KIND=JPIM) :: MFPLCG        = 0 ! convective graupel fall
(   41) INTEGER(KIND=JPIM) :: MFPLCH        = 0 ! convective hail fall
(   42) INTEGER(KIND=JPIM) :: MFPLCL        = 0 ! convective precipitation
(   43) INTEGER(KIND=JPIM) :: MFPLCN        = 0 ! convective snow fall
(   44) INTEGER(KIND=JPIM) :: MFPLSG        = 0 ! large scale graupel fall (stratiform)
(   45) INTEGER(KIND=JPIM) :: MFPLSH        = 0 ! large scale hail fall (stratiform)
(   46) INTEGER(KIND=JPIM) :: MFPLSL        = 0 ! large scale precipitation (stratiform)
(   47) INTEGER(KIND=JPIM) :: MFPLSN        = 0 ! large scale snow fall (stratiform)
(   48) INTEGER(KIND=JPIM) :: MFRSDNI        = 0 ! surface direct normal irradiance
(   49) INTEGER(KIND=JPIM) :: MFRSGNI        = 0 ! surface global normal irradiance
(   50) INTEGER(KIND=JPIM) :: MFRSOC0        = 0 ! top clear sky shortwave radiative
(   51) INTEGER(KIND=JPIM) :: MFRSOC1        = 0 ! surface clear sky shortwave radiative
(   52) INTEGER(KIND=JPIM) :: MFRSODS        = 0 ! surface down solar
(   53) INTEGER(KIND=JPIM) :: MFRSOLU        = 0 ! surface downward moon radiation
(   54) INTEGER(KIND=JPIM) :: MFRSOPS        = 0 ! surface parallel solar
(   55) INTEGER(KIND=JPIM) :: MFRSOPT        = 0 ! top parallel solar
(   56) INTEGER(KIND=JPIM) :: MFRSO        = 0 ! solar radiation
(   57) INTEGER(KIND=JPIM) :: MFRTHC0        = 0 ! top clear sky longwave radiative
(   58) INTEGER(KIND=JPIM) :: MFRTHC1        = 0 ! surface clear sky longwave radiative
(   59) INTEGER(KIND=JPIM) :: MFRTHDS        = 0 ! surface down thermic
(   60) INTEGER(KIND=JPIM) :: MFRTH        = 0 ! surface radiation
(   61) INTEGER(KIND=JPIM) :: MFTOPH        = 0 ! top mesospheric enthalpy (+ dissipation)
(   62) INTEGER(KIND=JPIM) :: MFTR        = 0 ! transpiration
(   63) INTEGER(KIND=JPIM) :: MNEBBAS        = 0 ! low cloud cover
(   64) INTEGER(KIND=JPIM) :: MNEBCON        = 0 ! convective cloud cover
(   65) INTEGER(KIND=JPIM) :: MNEBHAU        = 0 ! high cloud cover
(   66) INTEGER(KIND=JPIM) :: MNEBMOY        = 0 ! medium cloud cover
(   67) INTEGER(KIND=JPIM) :: MOZONT        = 0 ! total ozone
(   68) INTEGER(KIND=JPIM) :: MQICE        = 0 ! solid specific moisture
(   69) INTEGER(KIND=JPIM) :: MQLI        = 0 ! liquid specific moisture
(   70) INTEGER(KIND=JPIM) :: MQTOT        = 0 ! total precipitable water
(   71) INTEGER(KIND=JPIM) :: MRUISL        = 0 ! interception soil layer runoff
(   72) INTEGER(KIND=JPIM) :: MRUISP        = 0 ! deep soil runoff
(   73) INTEGER(KIND=JPIM) :: MRUISS        = 0 ! surface soil runoff
(   74) INTEGER(KIND=JPIM) :: MSNS        = 0 ! snow mass
(   75) INTEGER(KIND=JPIM) :: MSPRES        = 0 ! surface pressure
(   76) INTEGER(KIND=JPIM) :: MSTRCU        = 0 ! contribution of convection to U
(   77) INTEGER(KIND=JPIM) :: MSTRCV        = 0 ! contribution of convection to V
(   78) INTEGER(KIND=JPIM) :: MSTRDU        = 0 ! U-wind gravity wave stress
(   79) INTEGER(KIND=JPIM) :: MSTRDV        = 0 ! V-wind gravity wave stress
(   80) INTEGER(KIND=JPIM) :: MSTRTU        = 0 ! contribution of turbulence to U
(   81) INTEGER(KIND=JPIM) :: MSTRTV        = 0 ! contribution of turbulence to V
(   82) INTEGER(KIND=JPIM) :: MWS        = 0 ! soil moisture
(   83) END TYPE TCFUPTR
(   84) 
(   85) END MODULE PTRGFU_TYPE









NVFORTRAN (Version     23.1)          02/24/2023  13:32:46      page 4

(    1) # 1 "ptrgfu_type.F90"
(    1) MODULE PTRGFU_TYPE
(    2) # 3 "ptrgfu_type.F90"
(    3) USE PARKIND1  ,ONLY : JPIM
(    4) # 5 "ptrgfu_type.F90"
(    5) IMPLICIT NONE
(    6) # 7 "ptrgfu_type.F90"
(    7) SAVE
(    8) # 9 "ptrgfu_type.F90"
(    9) !     ------------------------------------------------------------
(   10) # 11 "ptrgfu_type.F90"
(   11) !*    Pointers for cumulated fluxes diagnostics (CFU).
(   12) # 14 "ptrgfu_type.F90"
(   14) TYPE TCFUPTR
(   15) INTEGER(KIND=JPIM) :: MFCCQL        = 0 ! liquid condensation due to convection
(   16) INTEGER(KIND=JPIM) :: MFCCQN        = 0 ! solid condensation due to convection
(   17) INTEGER(KIND=JPIM) :: MFCHSP        = 0 ! heat in soil
(   18) INTEGER(KIND=JPIM) :: MFCL        = 0 ! latent heat
(   19) INTEGER(KIND=JPIM) :: MFCLL        = 0 ! liquid latent heat
(   20) INTEGER(KIND=JPIM) :: MFCLN        = 0 ! solid latent heat
(   21) INTEGER(KIND=JPIM) :: MFCSQL        = 0 ! large scale liquid condensation
(   22) INTEGER(KIND=JPIM) :: MFCSQN        = 0 ! large scale solid condensation
(   23) INTEGER(KIND=JPIM) :: MFCS        = 0 ! sensible heat
(   24) INTEGER(KIND=JPIM) :: MFDICQ        = 0 ! contribution of convection to q
(   25) INTEGER(KIND=JPIM) :: MFDICS        = 0 ! contribution of convection to (cp T)
(   26) INTEGER(KIND=JPIM) :: MFDISH        = 0 ! surface enthalpy (due to the dissipation of kinetic energy)
(   27) INTEGER(KIND=JPIM) :: MFDITQ        = 0 ! contribution of turbulence to T
(   28) INTEGER(KIND=JPIM) :: MFDITS        = 0 ! contribution of turbulence to (cp T)
(   29) INTEGER(KIND=JPIM) :: MFDUTP        = 0 ! filtered duration of total precipitations
(   30) INTEGER(KIND=JPIM) :: MFEVL        = 0 ! liquid evaporation
(   31) INTEGER(KIND=JPIM) :: MFEVN        = 0 ! snow evaporation
(   32) INTEGER(KIND=JPIM) :: MFEVV        = 0 ! evapotranspiration
(   33) INTEGER(KIND=JPIM) :: MFGEL        = 0 ! deep frost
(   34) INTEGER(KIND=JPIM) :: MFGELS        = 0 ! surface frost
(   35) INTEGER(KIND=JPIM) :: MFLASH        = 0 ! cumulative lighntning diagnotics
(   36) INTEGER(KIND=JPIM) :: MFLWSP        = 0 ! water in soil
(   37) INTEGER(KIND=JPIM) :: MFNEB        = 0 ! cloud cover
(   38) INTEGER(KIND=JPIM) :: MFNEBT        = 0 ! total cloudiness
(   39) INTEGER(KIND=JPIM) :: MFONTE        = 0 ! melt snow
(   40) INTEGER(KIND=JPIM) :: MFPLCG        = 0 ! convective graupel fall
(   41) INTEGER(KIND=JPIM) :: MFPLCH        = 0 ! convective hail fall
(   42) INTEGER(KIND=JPIM) :: MFPLCL        = 0 ! convective precipitation
(   43) INTEGER(KIND=JPIM) :: MFPLCN        = 0 ! convective snow fall
(   44) INTEGER(KIND=JPIM) :: MFPLSG        = 0 ! large scale graupel fall (stratiform)
(   45) INTEGER(KIND=JPIM) :: MFPLSH        = 0 ! large scale hail fall (stratiform)
(   46) INTEGER(KIND=JPIM) :: MFPLSL        = 0 ! large scale precipitation (stratiform)
(   47) INTEGER(KIND=JPIM) :: MFPLSN        = 0 ! large scale snow fall (stratiform)
(   48) INTEGER(KIND=JPIM) :: MFRSDNI        = 0 ! surface direct normal irradiance
(   49) INTEGER(KIND=JPIM) :: MFRSGNI        = 0 ! surface global normal irradiance
(   50) INTEGER(KIND=JPIM) :: MFRSOC0        = 0 ! top clear sky shortwave radiative
(   51) INTEGER(KIND=JPIM) :: MFRSOC1        = 0 ! surface clear sky shortwave radiative
(   52) INTEGER(KIND=JPIM) :: MFRSODS        = 0 ! surface down solar
(   53) INTEGER(KIND=JPIM) :: MFRSOLU        = 0 ! surface downward moon radiation
(   54) INTEGER(KIND=JPIM) :: MFRSOPS        = 0 ! surface parallel solar
(   55) INTEGER(KIND=JPIM) :: MFRSOPT        = 0 ! top parallel solar
(   56) INTEGER(KIND=JPIM) :: MFRSO        = 0 ! solar radiation
(   57) INTEGER(KIND=JPIM) :: MFRTHC0        = 0 ! top clear sky longwave radiative
(   58) INTEGER(KIND=JPIM) :: MFRTHC1        = 0 ! surface clear sky longwave radiative






NVFORTRAN (Version     23.1)          02/24/2023  13:32:46      page 5

(   59) INTEGER(KIND=JPIM) :: MFRTHDS        = 0 ! surface down thermic
(   60) INTEGER(KIND=JPIM) :: MFRTH        = 0 ! surface radiation
(   61) INTEGER(KIND=JPIM) :: MFTOPH        = 0 ! top mesospheric enthalpy (+ dissipation)
(   62) INTEGER(KIND=JPIM) :: MFTR        = 0 ! transpiration
(   63) INTEGER(KIND=JPIM) :: MNEBBAS        = 0 ! low cloud cover
(   64) INTEGER(KIND=JPIM) :: MNEBCON        = 0 ! convective cloud cover
(   65) INTEGER(KIND=JPIM) :: MNEBHAU        = 0 ! high cloud cover
(   66) INTEGER(KIND=JPIM) :: MNEBMOY        = 0 ! medium cloud cover
(   67) INTEGER(KIND=JPIM) :: MOZONT        = 0 ! total ozone
(   68) INTEGER(KIND=JPIM) :: MQICE        = 0 ! solid specific moisture
(   69) INTEGER(KIND=JPIM) :: MQLI        = 0 ! liquid specific moisture
(   70) INTEGER(KIND=JPIM) :: MQTOT        = 0 ! total precipitable water
(   71) INTEGER(KIND=JPIM) :: MRUISL        = 0 ! interception soil layer runoff
(   72) INTEGER(KIND=JPIM) :: MRUISP        = 0 ! deep soil runoff
(   73) INTEGER(KIND=JPIM) :: MRUISS        = 0 ! surface soil runoff
(   74) INTEGER(KIND=JPIM) :: MSNS        = 0 ! snow mass
(   75) INTEGER(KIND=JPIM) :: MSPRES        = 0 ! surface pressure
(   76) INTEGER(KIND=JPIM) :: MSTRCU        = 0 ! contribution of convection to U
(   77) INTEGER(KIND=JPIM) :: MSTRCV        = 0 ! contribution of convection to V
(   78) INTEGER(KIND=JPIM) :: MSTRDU        = 0 ! U-wind gravity wave stress
(   79) INTEGER(KIND=JPIM) :: MSTRDV        = 0 ! V-wind gravity wave stress
(   80) INTEGER(KIND=JPIM) :: MSTRTU        = 0 ! contribution of turbulence to U
(   81) INTEGER(KIND=JPIM) :: MSTRTV        = 0 ! contribution of turbulence to V
(   82) INTEGER(KIND=JPIM) :: MWS        = 0 ! soil moisture
(   83) END TYPE TCFUPTR
(   84) # 85 "ptrgfu_type.F90"
(   85) END MODULE PTRGFU_TYPE
