


NVFORTRAN (Version     23.1)          02/24/2023  13:33:14      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:33:14      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: rtoc.F

(    1)       SUBROUTINE RTOC(REAL_V, CHAR_V, N)
(    2) !
(    3) !**** SUBROUTINE rtoc - To convert from 64-bit REAL to CHAR
(    4) !
(    5) !        S.Saarinen     ECMWF     27/6/95
(    6) !
(    7) !**   INTERFACE
(    8) !     ---------
(    9) !
(   10) !        CALL rtoc(real_v, char_v, n)
(   11) !     WHERE:
(   12) !           real_v = 64-bit REAL-vector (INPUT) of n elements
(   13) !                    each holding one ASCII-value [0..255]
(   14) !                    of a character
(   15) !           char_v = A character-string (OUTPUT) where the result of
(   16) !                    each ASCII to CHAR()-conversion goes
(   17) !           n      = length of the REAL-vector and character-string
(   18) !
(   19) !
(   20) !-----------------------------------------------------------------------
(   21) !
(   22)       USE PARKIND1, ONLY : JPIM
(   23)       IMPLICIT NONE
(   24)       INTEGER(KIND=JPIM) :: N
(   25) !-- The following MUST be 64-bit REALs [i.e. REAL(8) on Fortran-90]
(   26) !#ifdef F90
(   27) !      real(8) real_v(n)
(   28) !#else
(   29)       REAL(KIND=8) :: REAL_V(N)
(   30) !#endif






NVFORTRAN (Version     23.1)          02/24/2023  13:33:14      page 3

(   31)       CHARACTER(LEN=*) :: CHAR_V
(   32)       INTEGER(KIND=JPIM) :: I
(   33) 
(   34)       DO I=1,N
(   35)          CHAR_V(I:I) = CHAR(INT(REAL_V(I)))
(   36)       ENDDO
(   37)       ENDSUBROUTINE RTOC

























































NVFORTRAN (Version     23.1)          02/24/2023  13:33:14      page 4

(    1) # 1 "rtoc.F"
(    1)       SUBROUTINE RTOC(REAL_V, CHAR_V, N)
(    2) !
(    3) !**** SUBROUTINE rtoc - To convert from 64-bit REAL to CHAR
(    4) !
(    5) !        S.Saarinen     ECMWF     27/6/95
(    6) !
(    7) !**   INTERFACE
(    8) !     ---------
(    9) !
(   10) !        CALL rtoc(real_v, char_v, n)
(   11) !     WHERE:
(   12) !           real_v = 64-bit REAL-vector (INPUT) of n elements
(   13) !                    each holding one ASCII-value [0..255]
(   14) !                    of a character
(   15) !           char_v = A character-string (OUTPUT) where the result of
(   16) !                    each ASCII to CHAR()-conversion goes
(   17) !           n      = length of the REAL-vector and character-string
(   18) !
(   19) !
(   20) !-----------------------------------------------------------------------
(   21) !
(   22)       USE PARKIND1, ONLY : JPIM
(   23)       IMPLICIT NONE
(   24)       INTEGER(KIND=JPIM) :: N
(   25) !-- The following MUST be 64-bit REALs [i.e. REAL(8) on Fortran-90]
(   26) !#ifdef F90
(   27) !      real(8) real_v(n)
(   28) !#else
(   29)       REAL(KIND=8) :: REAL_V(N)
(   30) !#endif
(   31)       CHARACTER(LEN=*) :: CHAR_V
(   32)       INTEGER(KIND=JPIM) :: I
(   33) # 34 "rtoc.F"
(   34)       DO I=1,N
(   35)          CHAR_V(I:I) = CHAR(INT(REAL_V(I)))
(   36)       ENDDO
(   37)       ENDSUBROUTINE RTOC
