


NVFORTRAN (Version     23.1)          02/24/2023  13:38:02      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:38:02      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: uncompact.F90

(    1) SUBROUTINE UNCOMPACT(PVALCO_COMPACT,KNELEM,KBITEXPONENT,KBITRADICAL,KPACK)
(    2) 
(    3) USE PARKIND1 , ONLY : JPRB, JPRM
(    4) USE YOMHOOK  , ONLY : LHOOK, DR_HOOK
(    5) 
(    6) IMPLICIT NONE
(    7) 
(    8) INTEGER(KIND=4) :: KNELEM
(    9) REAL(KIND=JPRB) :: PVALCO_COMPACT(KNELEM)
(   10) REAL(KIND=JPRB) :: ZCOEF,VALMIN,VALMAX
(   11) INTEGER(KIND=4) :: KBITEXPONENT,KBITRADICAL
(   12) INTEGER(KIND=8) :: KPACK(KNELEM)
(   13) 
(   14) REAL(KIND=JPRM) :: ZTMPBUF
(   15) INTEGER(KIND=4) :: ITMPBUF
(   16) INTEGER(KIND=8) :: ICMPBUF
(   17) INTEGER(KIND=4),ALLOCATABLE :: IBUF(:)
(   18) INTEGER(KIND=4) :: IPROMA,IPTRTAB,IPTRBIT,IENDBIT
(   19) 
(   20) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   21) 
(   22) EQUIVALENCE(ZTMPBUF,ITMPBUF)
(   23) 
(   24) IF (LHOOK) CALL DR_HOOK('UNCOMPACT',0,ZHOOK_HANDLE)
(   25) 
(   26) !SOLUTION 1
(   27) !IPTRBIT=0
(   28) !IPTRTAB=1
(   29) !DO IPROMA=1,KNELEM
(   30) !  ITMPBUF=KPACK(IPROMA)






NVFORTRAN (Version     23.1)          02/24/2023  13:38:02      page 3

(   31) !   PVALCO_COMPACT(IPROMA)=ZTMPBUF
(   32) !END DO
(   33) 
(   34) !SOLUTION 2
(   35) ITMPBUF=IBITS(KPACK(1),0,32)
(   36) VALMIN=ZTMPBUF
(   37) ITMPBUF=IBITS(KPACK(1),32,32)
(   38) VALMAX=ZTMPBUF
(   39) !PRINT*,VALMIN," ",VALMAX
(   40) IF (VALMAX-VALMIN<=0.0) THEN
(   41)    PVALCO_COMPACT(1:KNELEM)=VALMIN
(   42) ELSE
(   43)    IPTRTAB=2
(   44)    IPTRBIT=0
(   45)    ZCOEF=(2**KBITRADICAL-1)
(   46)    DO IPROMA=2,KNELEM+1
(   47)       IF (IPTRBIT+KBITRADICAL<64) THEN
(   48)          ICMPBUF=IBITS(KPACK(IPTRTAB),IPTRBIT,KBITRADICAL)
(   49)          IPTRBIT=IPTRBIT+KBITRADICAL
(   50)       ELSE
(   51)          IENDBIT=64-IPTRBIT
(   52)          ICMPBUF=IBITS(KPACK(IPTRTAB),IPTRBIT,IENDBIT)+ISHFT(IBITS(KPACK(IPTRTAB+1),0,KBITRADICAL-IENDBIT),IENDBIT)
(   53)          IPTRTAB=IPTRTAB+1
(   54)          IPTRBIT=KBITRADICAL-IENDBIT
(   55)          
(   56)       END IF
(   57)       
(   58)       PVALCO_COMPACT(IPROMA-1)=ICMPBUF*(VALMAX-VALMIN)/ZCOEF+VALMIN
(   59)       !PRINT*,PVALCO_COMPACT(IPROMA-1)
(   60)    END DO
(   61) END IF
(   62) 
(   63) 
(   64) !SOLUTION 3 CA MARCHE PAS BIEN
(   65) !ALLOCATE(IBUF(KNELEM))
(   66) !DO IPROMA=1,KNELEM
(   67) !          IF (IPTRBIT+KBITRADICAL+2+KBITEXPONENT<64) THEN
(   68) !             IBUF(IPROMA)=IBITS(KPACK(IPTRTAB),IPTRBIT,KBITRADICAL+2+KBITEXPONENT)
(   69) !             IPTRBIT=IPTRBIT+KBITRADICAL+2+KBITEXPONENT
(   70)              
(   71) !          ELSE
(   72) !             IENDBIT=64-IPTRBIT
(   73) !             IBUF(IPROMA)=IBITS(KPACK(IPTRTAB),IPTRBIT,IENDBIT)
(   74) !             IPTRTAB=IPTRTAB+1
(   75) !             IBUF(IPROMA)=IBUF(IPROMA)+ISHFT(IBITS(KPACK(IPTRTAB),0,KBITRADICAL+2+KBITEXPONENT-IENDBIT),IENDBIT)
(   76) !             IPTRBIT=KBITRADICAL+2+KBITEXPONENT-IENDBIT
(   77) !          END IF
(   78) !       END DO
(   79) !WRITE(6,*) 'DEBUG UNCOMPACT',IBUF(1)
(   80) !DO IPROMA=1,KNELEM
(   81) !ITMPBUF=0
(   82) !ITMPBUF=ISHFT(IBITS(IBUF(IPROMA),0,KBITRADICAL),23-KBITRADICAL)+ISHFT(IBITS(IBUF(IPROMA),KBITRADICAL,KBITEXPONENT),23)&
(   83) !+ISHFT(2**(7-KBITEXPONENT)-1+IBITS(IBUF(IPROMA),KBITRADICAL+KBITEXPONENT,1),23+KBITEXPONENT)&
(   84) !&+ISHFT(IBITS(IBUF(IPROMA),KBITRADICAL+KBITEXPONENT+1,1),31)
(   85) !PVALCO_COMPACT(IPROMA)=ZTMPBUF
(   86) !END DO
(   87) 
(   88) IF (LHOOK) CALL DR_HOOK('UNCOMPACT',1,ZHOOK_HANDLE)






NVFORTRAN (Version     23.1)          02/24/2023  13:38:02      page 4

(   89) 
(   90) END SUBROUTINE UNCOMPACT






























































NVFORTRAN (Version     23.1)          02/24/2023  13:38:02      page 5

(    1) # 1 "uncompact.F90"
(    1) SUBROUTINE UNCOMPACT(PVALCO_COMPACT,KNELEM,KBITEXPONENT,KBITRADICAL,KPACK)
(    2) # 3 "uncompact.F90"
(    3) USE PARKIND1 , ONLY : JPRB, JPRM
(    4) USE YOMHOOK  , ONLY : LHOOK, DR_HOOK
(    5) # 6 "uncompact.F90"
(    6) IMPLICIT NONE
(    7) # 8 "uncompact.F90"
(    8) INTEGER(KIND=4) :: KNELEM
(    9) REAL(KIND=JPRB) :: PVALCO_COMPACT(KNELEM)
(   10) REAL(KIND=JPRB) :: ZCOEF,VALMIN,VALMAX
(   11) INTEGER(KIND=4) :: KBITEXPONENT,KBITRADICAL
(   12) INTEGER(KIND=8) :: KPACK(KNELEM)
(   13) # 14 "uncompact.F90"
(   14) REAL(KIND=JPRM) :: ZTMPBUF
(   15) INTEGER(KIND=4) :: ITMPBUF
(   16) INTEGER(KIND=8) :: ICMPBUF
(   17) INTEGER(KIND=4),ALLOCATABLE :: IBUF(:)
(   18) INTEGER(KIND=4) :: IPROMA,IPTRTAB,IPTRBIT,IENDBIT
(   19) # 20 "uncompact.F90"
(   20) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   21) # 22 "uncompact.F90"
(   22) EQUIVALENCE(ZTMPBUF,ITMPBUF)
(   23) # 24 "uncompact.F90"
(   24) IF (LHOOK) CALL DR_HOOK('UNCOMPACT',0,ZHOOK_HANDLE)
(   25) # 26 "uncompact.F90"
(   26) !SOLUTION 1
(   27) !IPTRBIT=0
(   28) !IPTRTAB=1
(   29) !DO IPROMA=1,KNELEM
(   30) !  ITMPBUF=KPACK(IPROMA)
(   31) !   PVALCO_COMPACT(IPROMA)=ZTMPBUF
(   32) !END DO
(   33) # 34 "uncompact.F90"
(   34) !SOLUTION 2
(   35) ITMPBUF=IBITS(KPACK(1),0,32)
(   36) VALMIN=ZTMPBUF
(   37) ITMPBUF=IBITS(KPACK(1),32,32)
(   38) VALMAX=ZTMPBUF
(   39) !PRINT*,VALMIN," ",VALMAX
(   40) IF (VALMAX-VALMIN<=0.0) THEN
(   41)    PVALCO_COMPACT(1:KNELEM)=VALMIN
(   42) ELSE
(   43)    IPTRTAB=2
(   44)    IPTRBIT=0
(   45)    ZCOEF=(2**KBITRADICAL-1)
(   46)    DO IPROMA=2,KNELEM+1
(   47)       IF (IPTRBIT+KBITRADICAL<64) THEN
(   48)          ICMPBUF=IBITS(KPACK(IPTRTAB),IPTRBIT,KBITRADICAL)
(   49)          IPTRBIT=IPTRBIT+KBITRADICAL
(   50)       ELSE
(   51)          IENDBIT=64-IPTRBIT
(   52)          ICMPBUF=IBITS(KPACK(IPTRTAB),IPTRBIT,IENDBIT)+ISHFT(IBITS(KPACK(IPTRTAB+1),0,KBITRADICAL-IENDBIT),IENDBIT)
(   53)          IPTRTAB=IPTRTAB+1
(   54)          IPTRBIT=KBITRADICAL-IENDBIT
(   55)          
(   56)       END IF
(   57)       






NVFORTRAN (Version     23.1)          02/24/2023  13:38:02      page 6

(   58)       PVALCO_COMPACT(IPROMA-1)=ICMPBUF*(VALMAX-VALMIN)/ZCOEF+VALMIN
(   59)       !PRINT*,PVALCO_COMPACT(IPROMA-1)
(   60)    END DO
(   61) END IF
(   62) # 64 "uncompact.F90"
(   64) !SOLUTION 3 CA MARCHE PAS BIEN
(   65) !ALLOCATE(IBUF(KNELEM))
(   66) !DO IPROMA=1,KNELEM
(   67) !          IF (IPTRBIT+KBITRADICAL+2+KBITEXPONENT<64) THEN
(   68) !             IBUF(IPROMA)=IBITS(KPACK(IPTRTAB),IPTRBIT,KBITRADICAL+2+KBITEXPONENT)
(   69) !             IPTRBIT=IPTRBIT+KBITRADICAL+2+KBITEXPONENT
(   70)              
(   71) !          ELSE
(   72) !             IENDBIT=64-IPTRBIT
(   73) !             IBUF(IPROMA)=IBITS(KPACK(IPTRTAB),IPTRBIT,IENDBIT)
(   74) !             IPTRTAB=IPTRTAB+1
(   75) !             IBUF(IPROMA)=IBUF(IPROMA)+ISHFT(IBITS(KPACK(IPTRTAB),0,KBITRADICAL+2+KBITEXPONENT-IENDBIT),IENDBIT)
(   76) !             IPTRBIT=KBITRADICAL+2+KBITEXPONENT-IENDBIT
(   77) !          END IF
(   78) !       END DO
(   79) !WRITE(6,*) 'DEBUG UNCOMPACT',IBUF(1)
(   80) !DO IPROMA=1,KNELEM
(   81) !ITMPBUF=0
(   82) !ITMPBUF=ISHFT(IBITS(IBUF(IPROMA),0,KBITRADICAL),23-KBITRADICAL)+ISHFT(IBITS(IBUF(IPROMA),KBITRADICAL,KBITEXPONENT),23)&
(   83) !+ISHFT(2**(7-KBITEXPONENT)-1+IBITS(IBUF(IPROMA),KBITRADICAL+KBITEXPONENT,1),23+KBITEXPONENT)&
(   84) !&+ISHFT(IBITS(IBUF(IPROMA),KBITRADICAL+KBITEXPONENT+1,1),31)
(   85) !PVALCO_COMPACT(IPROMA)=ZTMPBUF
(   86) !END DO
(   87) # 88 "uncompact.F90"
(   88) IF (LHOOK) CALL DR_HOOK('UNCOMPACT',1,ZHOOK_HANDLE)
(   89) # 90 "uncompact.F90"
(   90) END SUBROUTINE UNCOMPACT
