


NVFORTRAN (Version     23.1)          02/24/2023  13:33:22      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:33:22      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: itor.F

(    1)       SUBROUTINE ITOR(INT_V, REAL_V, N)
(    2) !
(    3) !**** SUBROUTINE itor - To convert from INTEGER to 64-bit REAL
(    4) !
(    5) !        S.Saarinen     ECMWF     27/6/95
(    6) !
(    7) !**   INTERFACE
(    8) !     ---------
(    9) !
(   10) !        CALL itor(int_v, real_v, n)
(   11) !     WHERE:
(   12) !           int_v  = Integer vector (INPUT) of n elements:
(   13) !                    Only 32-bit range is accepted i.e.
(   14) !                    [-2147483648 ... 2147483647] which is the same as
(   15) !                    [-2**31 ... 2**31 - 1]
(   16) !           real_v = 64-bit REAL-vector (OUTPUT) of n elements
(   17) !                    each holding one integer value after conversion
(   18) !           n      = length of the vectors
(   19) !
(   20) !
(   21) !-----------------------------------------------------------------------
(   22) !
(   23)       USE PARKIND1, ONLY : JPIM
(   24)       IMPLICIT NONE
(   25)       INTEGER(KIND=JPIM) :: N
(   26) !-- The following MUST be 64-bit REALs [i.e. REAL(8) on Fortran-90]
(   27)       REAL(KIND=8) :: REAL_V(N)
(   28)       INTEGER(KIND=JPIM) :: INT_V(N)
(   29)       INTEGER(KIND=JPIM) :: I
(   30) 






NVFORTRAN (Version     23.1)          02/24/2023  13:33:22      page 3

(   31)       DO I=1,N
(   32)          REAL_V(I) = MIN(MAX(-2147483647_JPIM,INT_V(I)),2147483647_JPIM)
(   33)       ENDDO
(   34) 
(   35)       RETURN
(   36)       ENDSUBROUTINE ITOR


























































NVFORTRAN (Version     23.1)          02/24/2023  13:33:22      page 4

(    1) # 1 "itor.F"
(    1)       SUBROUTINE ITOR(INT_V, REAL_V, N)
(    2) !
(    3) !**** SUBROUTINE itor - To convert from INTEGER to 64-bit REAL
(    4) !
(    5) !        S.Saarinen     ECMWF     27/6/95
(    6) !
(    7) !**   INTERFACE
(    8) !     ---------
(    9) !
(   10) !        CALL itor(int_v, real_v, n)
(   11) !     WHERE:
(   12) !           int_v  = Integer vector (INPUT) of n elements:
(   13) !                    Only 32-bit range is accepted i.e.
(   14) !                    [-2147483648 ... 2147483647] which is the same as
(   15) !                    [-2**31 ... 2**31 - 1]
(   16) !           real_v = 64-bit REAL-vector (OUTPUT) of n elements
(   17) !                    each holding one integer value after conversion
(   18) !           n      = length of the vectors
(   19) !
(   20) !
(   21) !-----------------------------------------------------------------------
(   22) !
(   23)       USE PARKIND1, ONLY : JPIM
(   24)       IMPLICIT NONE
(   25)       INTEGER(KIND=JPIM) :: N
(   26) !-- The following MUST be 64-bit REALs [i.e. REAL(8) on Fortran-90]
(   27)       REAL(KIND=8) :: REAL_V(N)
(   28)       INTEGER(KIND=JPIM) :: INT_V(N)
(   29)       INTEGER(KIND=JPIM) :: I
(   30) # 31 "itor.F"
(   31)       DO I=1,N
(   32)          REAL_V(I) = MIN(MAX(-2147483647_JPIM,INT_V(I)),2147483647_JPIM)
(   33)       ENDDO
(   34) # 35 "itor.F"
(   35)       RETURN
(   36)       ENDSUBROUTINE ITOR
