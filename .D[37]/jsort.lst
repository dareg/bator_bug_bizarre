


NVFORTRAN (Version     23.1)          02/24/2023  13:33:35      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:33:35      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: jsort.F

(    1) #ifdef RS6K
(    2) 
(    3) !-- Thanks to John Hague (IBM) and Deborah Salmond (ECMWF) -- 2002
(    4) !   real --> real*8 by Sami Saarinen, ECMWF, 16-Jan-2004
(    5) 
(    6)       SUBROUTINE JDSORT(N, ISTRIDE, IPTR, C, INDEX)
(    7) !
(    8) !**C* *JDSORT* - interface to IBM essl dsorts
(    9) !
(   10) !**C  INTERFACE.
(   11) !     ----------
(   12) !
(   13) !          *CALL* *JDSORT(N,ISTRIDE, IPTR, C, INDEX)
(   14) !           N = number of elements to be sorted
(   15) !           ISTRIDE = stride
(   16) !           IPTR = start address
(   17) !           C = array to be sorted
(   18) !           INDEX = index into array
(   19) !
(   20)       USE PARKIND1, ONLY : JPRB
(   21) 
(   22)       IMPLICIT NONE
(   23)       INTEGER N,ISTRIDE, IPTR
(   24)       REAL(KIND=JPRB) :: C(*)
(   25)       INTEGER INDEX(N)
(   26) 
(   27) ! local variables
(   28) 
(   29)       INTEGER I,J,IXX(N),IX(N)
(   30)       REAL(KIND=JPRB) :: CC(N)






NVFORTRAN (Version     23.1)          02/24/2023  13:33:35      page 3

(   31)       REAL(KIND=JPRB) :: W(N/2+1)
(   32) 
(   33)       DO I=1,N
(   34)         J=(I-1)*ISTRIDE+1
(   35)         CC(I)=C(IPTR+(INDEX(I)-1)*ISTRIDE)
(   36)         IXX(I)=INDEX(I)
(   37)       ENDDO
(   38)       CALL DSORTS(CC,1,N,IX,W,SIZE(W))
(   39)       DO I=1,N
(   40)         INDEX(I)=IXX(IX(I))
(   41)       ENDDO
(   42)       RETURN
(   43)       END SUBROUTINE JDSORT
(   44) 
(   45) 
(   46)       SUBROUTINE JISORT(N, ISTRIDE, IPTR, C, INDEX)
(   47) !
(   48) !**** *JISORT* - interface to IBM essl isorts
(   49) !
(   50) !**   INTERFACE.
(   51) !     ----------
(   52) !
(   53) !          *CALL* *JISORT(N,ISTRIDE, IPTR, C, INDEX)
(   54) !           N = number of elements to be sorted
(   55) !           ISTRIDE = stride
(   56) !           IPTR = start address
(   57) !           C = array to be sorted
(   58) !           INDEX = index into array
(   59) !
(   60)       IMPLICIT NONE
(   61)       INTEGER N,ISTRIDE, IPTR
(   62)       INTEGER C(*),INDEX(N)
(   63) 
(   64) ! local variables
(   65) 
(   66)       INTEGER CC(N)
(   67)       INTEGER I,J,IXX(N),IX(N)
(   68)       INTEGER W(N/2+1)
(   69) 
(   70)       DO I=1,N
(   71)         J=(I-1)*ISTRIDE+1
(   72)         CC(I)=C(IPTR+(INDEX(I)-1)*ISTRIDE)
(   73)         IXX(I)=INDEX(I)
(   74)       ENDDO
(   75)       CALL ISORTS(CC,1,N,IX,W,SIZE(W))
(   76)       DO I=1,N
(   77)         INDEX(I)=IXX(IX(I))
(   78)       ENDDO
(   79)       RETURN
(   80)       END SUBROUTINE JISORT
(   81) #else
(   82) !-- other machines --
(   83)       SUBROUTINE JSORT_DUMMY()
(   84)       END SUBROUTINE JSORT_DUMMY
(   85) #endif
(   86) 








NVFORTRAN (Version     23.1)          02/24/2023  13:33:35      page 4

(    1) # 1 "jsort.F"
(    1) # 82 "jsort.F"
(   82) !-- other machines --
(   83)       SUBROUTINE JSORT_DUMMY()
(   84)       END SUBROUTINE JSORT_DUMMY
