


NVFORTRAN (Version     23.1)          02/24/2023  13:39:19      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:39:19      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: compact.F90

(    1) SUBROUTINE COMPACT(PVALCO_COMPACT,KNELEM,KBITEXPONENT,KBITRADICAL,KPACK)
(    2) 
(    3) USE PARKIND1 , ONLY : JPRB
(    4) USE YOMHOOK  , ONLY : LHOOK, DR_HOOK
(    5) 
(    6) IMPLICIT NONE
(    7) 
(    8) INTEGER(KIND=4) :: KNELEM
(    9) REAL(KIND=8) :: PVALCO_COMPACT(KNELEM)
(   10) REAL(KIND=8) :: ZCOEF,VALMIN,VALMAX
(   11) INTEGER(KIND=4) :: KBITEXPONENT,KBITRADICAL
(   12) INTEGER(KIND=8) :: KPACK(KNELEM)
(   13) 
(   14) REAL(KIND=4) :: ZTMPBUF
(   15) INTEGER(KIND=4) :: ITMPBUF
(   16) INTEGER(KIND=8) :: ICMPBUF,ILENGTH
(   17) INTEGER(KIND=4),ALLOCATABLE :: IBUF(:)
(   18) INTEGER(KIND=4) :: IPROMA,IPTRTAB,IPTRBIT,IENDBIT,I4B0,I4B1
(   19) INTEGER(KIND=2) :: I2B0,I2B1,I2B2,I2B3
(   20) 
(   21) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   22) 
(   23) EQUIVALENCE(ZTMPBUF,ITMPBUF)
(   24) 
(   25) IF (LHOOK) CALL DR_HOOK('COMPACT',0,ZHOOK_HANDLE)
(   26) 
(   27) !SOLUTION 1 CA MARCHE MAIS CA COMPRESSE PAS TELLEMENT
(   28) !DO IPROMA=1,KNELEM
(   29) !   ZTMPBUF=PVALCO_COMPACT(IPROMA)
(   30) !   KPACK(IPROMA)=ITMPBUF






NVFORTRAN (Version     23.1)          02/24/2023  13:39:19      page 3

(   31) !END DO
(   32) 
(   33) !SOLUTION 2
(   34) KPACK=0
(   35) VALMIN=MINVAL(PVALCO_COMPACT(1:KNELEM))
(   36) ZTMPBUF=VALMIN
(   37) I4B0=ITMPBUF
(   38) VALMAX=MAXVAL(PVALCO_COMPACT(1:KNELEM))
(   39) ZTMPBUF=VALMAX
(   40) ICMPBUF=ITMPBUF
(   41) KPACK(1)=ISHFT(ICMPBUF,32)
(   42) KPACK(1)=KPACK(1)+I4B0
(   43) ILENGTH=1
(   44) ZCOEF=(2**KBITRADICAL-1)
(   45) IPTRBIT=0
(   46) IPTRTAB=2
(   47) IF (VALMAX-VALMIN<=0.0) THEN
(   48) !WRITE(6,*) 'DEBUG COMPACT VALMAX-VALMIN inf zero'
(   49) !WRITE(6,*) 'DEBUG COMPACT',VALMAX,VALMIN
(   50) !WRITE(6,*) 'DEBUG COMPACT',PVALCO_COMPACT(1:10)
(   51) !CALL ABORT('DIVISION PAR ZERO')
(   52) KNELEM=1
(   53) ELSE
(   54) 
(   55) DO IPROMA=1,KNELEM
(   56) ICMPBUF=(PVALCO_COMPACT(IPROMA)-VALMIN)/(VALMAX-VALMIN)*ZCOEF
(   57) !PRINT*, ICMPBUF
(   58) !WRITE(*,"32I1") (IBITS(ICMPBUF,II,1),II=0,63)
(   59) 
(   60) IF (IPTRBIT+KBITRADICAL<64) THEN
(   61) KPACK(IPTRTAB)=KPACK(IPTRTAB)+ISHFT(IBITS(ICMPBUF,0,KBITRADICAL),IPTRBIT)
(   62) IPTRBIT=IPTRBIT+KBITRADICAL
(   63) ELSE
(   64) IENDBIT=64-IPTRBIT
(   65) KPACK(IPTRTAB)=KPACK(IPTRTAB)+ISHFT(IBITS(ICMPBUF,0,IENDBIT),IPTRBIT)
(   66) IPTRTAB=IPTRTAB+1
(   67) IPTRBIT=0
(   68) KPACK(IPTRTAB)=IBITS(ICMPBUF,IENDBIT,KBITRADICAL-IENDBIT)
(   69) IPTRBIT=KBITRADICAL-IENDBIT
(   70) END IF
(   71) END DO
(   72) !WRITE(*,"32I1") (IBITS(KPACK(2),II,1),II=0,63)
(   73) KNELEM=IPTRTAB+1
(   74) END IF
(   75) 
(   76) !SOLUTION 3 CA MARCHE PAS BIEN
(   77) !ALLOCATE(IBUF(KNELEM))
(   78) !IBUF=0
(   79) 
(   80) !DO IPROMA=1,KNELEM
(   81) !   ZTMPBUF=PVALCO_COMPACT(IPROMA)
(   82) !   IBUF(IPROMA)=IBITS(ITMPBUF,23-KBITRADICAL,KBITRADICAL)&
(   83) !        &+ISHFT(IBITS(ITMPBUF,23,KBITEXPONENT),KBITRADICAL)&
(   84) !        &+ISHFT(IBITS(ITMPBUF,30,2),KBITRADICAL+KBITEXPONENT)
(   85) !END DO
(   86) 
(   87) !WRITE(6,*) 'DEBUG COMPACT',IBUF(1)
(   88) 






NVFORTRAN (Version     23.1)          02/24/2023  13:39:19      page 4

(   89) !IPTRBIT=0
(   90) !IPTRTAB=1
(   91) !KPACK=0
(   92) !DO IPROMA=1,KNELEM
(   93) !!WRITE(6,*) 'DEBUG COMAPCT 4',IPROMA
(   94) !!CALL FLUSH(6)
(   95) !   IF (IPTRBIT+KBITRADICAL+2+KBITEXPONENT<64) THEN
(   96) !      ICMPBUF=IBUF(IPROMA)
(   97) !      KPACK(IPTRTAB)=KPACK(IPTRTAB)+ISHFT(IBITS(ICMPBUF,0,KBITRADICAL+2+KBITEXPONENT),(IPTRBIT))
(   98) !      IPTRBIT=IPTRBIT+KBITRADICAL+2+KBITEXPONENT
(   99) !      
(  100) !   ELSE
(  101) !      IENDBIT=64-IPTRBIT
(  102) !      ICMPBUF=IBUF(IPROMA)
(  103)       
(  104) !      KPACK(IPTRTAB)=KPACK(IPTRTAB)+ISHFT(IBITS(ICMPBUF,0,IENDBIT),(IPTRBIT))
(  105) !      IPTRBIT=0
(  106) !      IPTRTAB=IPTRTAB+1
(  107) !      KPACK(IPTRTAB)=IBITS(ICMPBUF,IENDBIT,KBITRADICAL+2+KBITEXPONENT-IENDBIT)
(  108) !      IPTRBIT=IPTRBIT+KBITRADICAL+2+KBITEXPONENT-IENDBIT
(  109) !   END IF
(  110) !   KNELEM=IPTRTAB
(  111) !END DO
(  112) 
(  113) IF (LHOOK) CALL DR_HOOK('COMPACT',1,ZHOOK_HANDLE)
(  114) 
(  115) END SUBROUTINE COMPACT





































NVFORTRAN (Version     23.1)          02/24/2023  13:39:19      page 5

(    1) # 1 "compact.F90"
(    1) SUBROUTINE COMPACT(PVALCO_COMPACT,KNELEM,KBITEXPONENT,KBITRADICAL,KPACK)
(    2) # 3 "compact.F90"
(    3) USE PARKIND1 , ONLY : JPRB
(    4) USE YOMHOOK  , ONLY : LHOOK, DR_HOOK
(    5) # 6 "compact.F90"
(    6) IMPLICIT NONE
(    7) # 8 "compact.F90"
(    8) INTEGER(KIND=4) :: KNELEM
(    9) REAL(KIND=8) :: PVALCO_COMPACT(KNELEM)
(   10) REAL(KIND=8) :: ZCOEF,VALMIN,VALMAX
(   11) INTEGER(KIND=4) :: KBITEXPONENT,KBITRADICAL
(   12) INTEGER(KIND=8) :: KPACK(KNELEM)
(   13) # 14 "compact.F90"
(   14) REAL(KIND=4) :: ZTMPBUF
(   15) INTEGER(KIND=4) :: ITMPBUF
(   16) INTEGER(KIND=8) :: ICMPBUF,ILENGTH
(   17) INTEGER(KIND=4),ALLOCATABLE :: IBUF(:)
(   18) INTEGER(KIND=4) :: IPROMA,IPTRTAB,IPTRBIT,IENDBIT,I4B0,I4B1
(   19) INTEGER(KIND=2) :: I2B0,I2B1,I2B2,I2B3
(   20) # 21 "compact.F90"
(   21) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   22) # 23 "compact.F90"
(   23) EQUIVALENCE(ZTMPBUF,ITMPBUF)
(   24) # 25 "compact.F90"
(   25) IF (LHOOK) CALL DR_HOOK('COMPACT',0,ZHOOK_HANDLE)
(   26) # 27 "compact.F90"
(   27) !SOLUTION 1 CA MARCHE MAIS CA COMPRESSE PAS TELLEMENT
(   28) !DO IPROMA=1,KNELEM
(   29) !   ZTMPBUF=PVALCO_COMPACT(IPROMA)
(   30) !   KPACK(IPROMA)=ITMPBUF
(   31) !END DO
(   32) # 33 "compact.F90"
(   33) !SOLUTION 2
(   34) KPACK=0
(   35) VALMIN=MINVAL(PVALCO_COMPACT(1:KNELEM))
(   36) ZTMPBUF=VALMIN
(   37) I4B0=ITMPBUF
(   38) VALMAX=MAXVAL(PVALCO_COMPACT(1:KNELEM))
(   39) ZTMPBUF=VALMAX
(   40) ICMPBUF=ITMPBUF
(   41) KPACK(1)=ISHFT(ICMPBUF,32)
(   42) KPACK(1)=KPACK(1)+I4B0
(   43) ILENGTH=1
(   44) ZCOEF=(2**KBITRADICAL-1)
(   45) IPTRBIT=0
(   46) IPTRTAB=2
(   47) IF (VALMAX-VALMIN<=0.0) THEN
(   48) !WRITE(6,*) 'DEBUG COMPACT VALMAX-VALMIN inf zero'
(   49) !WRITE(6,*) 'DEBUG COMPACT',VALMAX,VALMIN
(   50) !WRITE(6,*) 'DEBUG COMPACT',PVALCO_COMPACT(1:10)
(   51) !CALL ABORT('DIVISION PAR ZERO')
(   52) KNELEM=1
(   53) ELSE
(   54) # 55 "compact.F90"
(   55) DO IPROMA=1,KNELEM
(   56) ICMPBUF=(PVALCO_COMPACT(IPROMA)-VALMIN)/(VALMAX-VALMIN)*ZCOEF
(   57) !PRINT*, ICMPBUF






NVFORTRAN (Version     23.1)          02/24/2023  13:39:19      page 6

(   58) !WRITE(*,"32I1") (IBITS(ICMPBUF,II,1),II=0,63)
(   59) # 60 "compact.F90"
(   60) IF (IPTRBIT+KBITRADICAL<64) THEN
(   61) KPACK(IPTRTAB)=KPACK(IPTRTAB)+ISHFT(IBITS(ICMPBUF,0,KBITRADICAL),IPTRBIT)
(   62) IPTRBIT=IPTRBIT+KBITRADICAL
(   63) ELSE
(   64) IENDBIT=64-IPTRBIT
(   65) KPACK(IPTRTAB)=KPACK(IPTRTAB)+ISHFT(IBITS(ICMPBUF,0,IENDBIT),IPTRBIT)
(   66) IPTRTAB=IPTRTAB+1
(   67) IPTRBIT=0
(   68) KPACK(IPTRTAB)=IBITS(ICMPBUF,IENDBIT,KBITRADICAL-IENDBIT)
(   69) IPTRBIT=KBITRADICAL-IENDBIT
(   70) END IF
(   71) END DO
(   72) !WRITE(*,"32I1") (IBITS(KPACK(2),II,1),II=0,63)
(   73) KNELEM=IPTRTAB+1
(   74) END IF
(   75) # 76 "compact.F90"
(   76) !SOLUTION 3 CA MARCHE PAS BIEN
(   77) !ALLOCATE(IBUF(KNELEM))
(   78) !IBUF=0
(   79) # 80 "compact.F90"
(   80) !DO IPROMA=1,KNELEM
(   81) !   ZTMPBUF=PVALCO_COMPACT(IPROMA)
(   82) !   IBUF(IPROMA)=IBITS(ITMPBUF,23-KBITRADICAL,KBITRADICAL)&
(   83) !        &+ISHFT(IBITS(ITMPBUF,23,KBITEXPONENT),KBITRADICAL)&
(   84) !        &+ISHFT(IBITS(ITMPBUF,30,2),KBITRADICAL+KBITEXPONENT)
(   85) !END DO
(   86) # 87 "compact.F90"
(   87) !WRITE(6,*) 'DEBUG COMPACT',IBUF(1)
(   88) # 89 "compact.F90"
(   89) !IPTRBIT=0
(   90) !IPTRTAB=1
(   91) !KPACK=0
(   92) !DO IPROMA=1,KNELEM
(   93) !!WRITE(6,*) 'DEBUG COMAPCT 4',IPROMA
(   94) !!CALL FLUSH(6)
(   95) !   IF (IPTRBIT+KBITRADICAL+2+KBITEXPONENT<64) THEN
(   96) !      ICMPBUF=IBUF(IPROMA)
(   97) !      KPACK(IPTRTAB)=KPACK(IPTRTAB)+ISHFT(IBITS(ICMPBUF,0,KBITRADICAL+2+KBITEXPONENT),(IPTRBIT))
(   98) !      IPTRBIT=IPTRBIT+KBITRADICAL+2+KBITEXPONENT
(   99) !      
(  100) !   ELSE
(  101) !      IENDBIT=64-IPTRBIT
(  102) !      ICMPBUF=IBUF(IPROMA)
(  103)       
(  104) !      KPACK(IPTRTAB)=KPACK(IPTRTAB)+ISHFT(IBITS(ICMPBUF,0,IENDBIT),(IPTRBIT))
(  105) !      IPTRBIT=0
(  106) !      IPTRTAB=IPTRTAB+1
(  107) !      KPACK(IPTRTAB)=IBITS(ICMPBUF,IENDBIT,KBITRADICAL+2+KBITEXPONENT-IENDBIT)
(  108) !      IPTRBIT=IPTRBIT+KBITRADICAL+2+KBITEXPONENT-IENDBIT
(  109) !   END IF
(  110) !   KNELEM=IPTRTAB
(  111) !END DO
(  112) # 113 "compact.F90"
(  113) IF (LHOOK) CALL DR_HOOK('COMPACT',1,ZHOOK_HANDLE)
(  114) # 115 "compact.F90"
(  115) END SUBROUTINE COMPACT



