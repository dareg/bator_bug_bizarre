


NVFORTRAN (Version     23.1)          02/24/2023  13:41:31      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:41:31      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: lnkdb.F90

(    1) SUBROUTINE lnkdb(kparent, kpa, kchild, kch, klink, kret)
(    2) 
(    3) USE PARKIND1  ,ONLY : JPIM     ,JPRD
(    4) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(    5) 
(    6) implicit none
(    7) 
(    8) INTEGER(KIND=JPIM), intent(in)  :: kpa, kch
(    9) INTEGER(KIND=JPIM), intent(in)  :: kparent(kpa), kchild(kch)
(   10) INTEGER(KIND=JPIM), intent(out) :: klink(kpa+1), kret
(   11) 
(   12) !-- Correct code (even if some parents have no childs)
(   13) INTEGER(KIND=JPIM) :: actlen(kpa) ! automatic array
(   14) INTEGER(KIND=JPIM) :: jpa, icount, target
(   15) INTEGER(KIND=JPIM) :: jchstart, jchend, jch
(   16) REAL(KIND=JPRD) :: ZHOOK_HANDLE
(   17) 
(   18) IF (LHOOK) CALL DR_HOOK('LNKDB',0,ZHOOK_HANDLE)
(   19) kret = 0
(   20) if (kpa > 0) then
(   21)   jchend = 0
(   22)   do jpa=1,kpa
(   23)     target = kparent(jpa)
(   24)     jchstart = jchend + 1
(   25)     icount = 0
(   26)     do jch=jchstart,kch
(   27)       if (kchild(jch) /= target) exit
(   28)       icount = icount + 1
(   29)     enddo
(   30)     actlen(jpa) = icount






NVFORTRAN (Version     23.1)          02/24/2023  13:41:31      page 3

(   31)     jchend = jchend + icount
(   32)   enddo
(   33)   klink(1) = 1
(   34)   do jpa=2,kpa+1
(   35)     klink(jpa) = klink(jpa-1) + actlen(jpa-1)
(   36)   enddo
(   37)   kret = kpa+1
(   38) endif
(   39) IF (LHOOK) CALL DR_HOOK('LNKDB',1,ZHOOK_HANDLE)
(   40) 
(   41) END SUBROUTINE lnkdb





















































NVFORTRAN (Version     23.1)          02/24/2023  13:41:31      page 4

(    1) # 1 "lnkdb.F90"
(    1) SUBROUTINE lnkdb(kparent, kpa, kchild, kch, klink, kret)
(    2) # 3 "lnkdb.F90"
(    3) USE PARKIND1  ,ONLY : JPIM     ,JPRD
(    4) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(    5) # 6 "lnkdb.F90"
(    6) implicit none
(    7) # 8 "lnkdb.F90"
(    8) INTEGER(KIND=JPIM), intent(in)  :: kpa, kch
(    9) INTEGER(KIND=JPIM), intent(in)  :: kparent(kpa), kchild(kch)
(   10) INTEGER(KIND=JPIM), intent(out) :: klink(kpa+1), kret
(   11) # 12 "lnkdb.F90"
(   12) !-- Correct code (even if some parents have no childs)
(   13) INTEGER(KIND=JPIM) :: actlen(kpa) ! automatic array
(   14) INTEGER(KIND=JPIM) :: jpa, icount, target
(   15) INTEGER(KIND=JPIM) :: jchstart, jchend, jch
(   16) REAL(KIND=JPRD) :: ZHOOK_HANDLE
(   17) # 18 "lnkdb.F90"
(   18) IF (LHOOK) CALL DR_HOOK('LNKDB',0,ZHOOK_HANDLE)
(   19) kret = 0
(   20) if (kpa > 0) then
(   21)   jchend = 0
(   22)   do jpa=1,kpa
(   23)     target = kparent(jpa)
(   24)     jchstart = jchend + 1
(   25)     icount = 0
(   26)     do jch=jchstart,kch
(   27)       if (kchild(jch) /= target) exit
(   28)       icount = icount + 1
(   29)     enddo
(   30)     actlen(jpa) = icount
(   31)     jchend = jchend + icount
(   32)   enddo
(   33)   klink(1) = 1
(   34)   do jpa=2,kpa+1
(   35)     klink(jpa) = klink(jpa-1) + actlen(jpa-1)
(   36)   enddo
(   37)   kret = kpa+1
(   38) endif
(   39) IF (LHOOK) CALL DR_HOOK('LNKDB',1,ZHOOK_HANDLE)
(   40) # 41 "lnkdb.F90"
(   41) END SUBROUTINE lnkdb
