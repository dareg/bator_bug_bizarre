


NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_gwf.F90

(    1) !depfile:gwf.F90
(    2) MODULE MODI_GWF 
(    3) INTERFACE
(    4)       SUBROUTINE GWF (TPG,                                                &
(    5)                       KLON,KLAT,OPRINT,PTSTEP_RUN,PTSTEP,OMASK,PNUM_AQUI, &
(    6)                       PDRAIN,PLEN,PWIDTH,PHC_BED,PTOPO_RIV,PTAUG,         &
(    7)                       PAREA,PTRANS,PWEFF,PTABGW_F,PTABGW_H,PHS,           &
(    8)                       PHGROUND,PHG_OLD,PSURF_STO,PQGCELL,PWTD,PFWTD,      &
(    9)                       PHGHS,PGOUT,PGNEG,                                  &
(   10)                       PGSTO_ALL,PGSTO2_ALL,PGIN_ALL,PGOUT_ALL             )
(   11) USE MODD_TRIP_GRID, ONLY : TRIP_GRID_t
(   12) TYPE(TRIP_GRID_t), INTENT(INOUT) :: TPG
(   13) INTEGER,              INTENT(IN)    :: KLON
(   14) INTEGER,              INTENT(IN)    :: KLAT
(   15) LOGICAL,              INTENT(IN)    :: OPRINT
(   16) REAL,                 INTENT(IN)    :: PTSTEP_RUN
(   17) REAL,                 INTENT(IN)    :: PTSTEP
(   18) LOGICAL, DIMENSION(:,:), INTENT(IN) :: OMASK      ! Aquifer mask
(   19) REAL, DIMENSION(:,:), INTENT(IN)    :: PNUM_AQUI  ! Aquifer ref number
(   20) REAL, DIMENSION(:,:), INTENT(IN)    :: PDRAIN     ! Input drainage                [kg/s]
(   21) REAL, DIMENSION(:,:), INTENT(IN)    :: PLEN       ! river length                  [m]
(   22) REAL, DIMENSION(:,:), INTENT(IN)    :: PWIDTH     ! river widths                  [m]
(   23) REAL, DIMENSION(:,:), INTENT(IN)    :: PHC_BED    ! River bed depth               [m]
(   24) REAL, DIMENSION(:,:), INTENT(IN)    :: PTOPO_RIV  ! River elevatation             [m]
(   25) REAL, DIMENSION(:,:), INTENT(IN)    :: PTAUG      ! ground water transfer time    [s]
(   26) REAL, DIMENSION(:,:), INTENT(IN)    :: PAREA      ! Grid-cell area                [m2]
(   27) REAL, DIMENSION(:,:), INTENT(IN)    :: PTRANS     ! Transmissivity                [m2/s]
(   28) REAL, DIMENSION(:,:), INTENT(IN)    :: PWEFF      ! Effective porosity            [-]
(   29) REAL, DIMENSION(:,:,:), INTENT(IN)  :: PTABGW_F   !  Groundwater fraction         [-]
(   30) REAL, DIMENSION(:,:,:), INTENT(IN)  :: PTABGW_H   ! Topo height                   [m]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 3

(   31) REAL, DIMENSION(:,:), INTENT(IN)    :: PHS        ! river height at t             [m]
(   32) REAL, DIMENSION(:,:), INTENT(INOUT) :: PHGROUND   ! water table elevation         [m]
(   33) REAL, DIMENSION(:,:), INTENT(INOUT) :: PHG_OLD    ! water table elevation at t-1  [m]
(   34) REAL, DIMENSION(:,:), INTENT(INOUT), OPTIONAL :: PSURF_STO  ! river channel storage at t    [kg]
(   35) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PQGCELL
(   36) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PWTD
(   37) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PFWTD
(   38) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PHGHS
(   39) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PGOUT
(   40) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PGNEG
(   41) REAL,                 INTENT(OUT), OPTIONAL   :: PGSTO_ALL
(   42) REAL,                 INTENT(OUT), OPTIONAL   :: PGSTO2_ALL
(   43) REAL,                 INTENT(OUT), OPTIONAL   :: PGIN_ALL
(   44) REAL,                 INTENT(OUT), OPTIONAL   :: PGOUT_ALL
(   45) INTEGER, PARAMETER    :: IITERMAX = 100
(   46) END SUBROUTINE GWF
(   47) 
(   48) END INTERFACE
(   49) END MODULE MODI_GWF 













































NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 4

(    1) # 1 "modi_gwf.F90"
(    1) !depfile:gwf.F90
(    2) MODULE MODI_GWF 
(    3) INTERFACE
(    4)       SUBROUTINE GWF (TPG,                                                &
(    5)                       KLON,KLAT,OPRINT,PTSTEP_RUN,PTSTEP,OMASK,PNUM_AQUI, &
(    6)                       PDRAIN,PLEN,PWIDTH,PHC_BED,PTOPO_RIV,PTAUG,         &
(    7)                       PAREA,PTRANS,PWEFF,PTABGW_F,PTABGW_H,PHS,           &
(    8)                       PHGROUND,PHG_OLD,PSURF_STO,PQGCELL,PWTD,PFWTD,      &
(    9)                       PHGHS,PGOUT,PGNEG,                                  &
(   10)                       PGSTO_ALL,PGSTO2_ALL,PGIN_ALL,PGOUT_ALL             )
(   11) USE MODD_TRIP_GRID, ONLY : TRIP_GRID_t
(   12) TYPE(TRIP_GRID_t), INTENT(INOUT) :: TPG
(   13) INTEGER,              INTENT(IN)    :: KLON
(   14) INTEGER,              INTENT(IN)    :: KLAT
(   15) LOGICAL,              INTENT(IN)    :: OPRINT
(   16) REAL,                 INTENT(IN)    :: PTSTEP_RUN
(   17) REAL,                 INTENT(IN)    :: PTSTEP
(   18) LOGICAL, DIMENSION(:,:), INTENT(IN) :: OMASK      ! Aquifer mask
(   19) REAL, DIMENSION(:,:), INTENT(IN)    :: PNUM_AQUI  ! Aquifer ref number
(   20) REAL, DIMENSION(:,:), INTENT(IN)    :: PDRAIN     ! Input drainage                [kg/s]
(   21) REAL, DIMENSION(:,:), INTENT(IN)    :: PLEN       ! river length                  [m]
(   22) REAL, DIMENSION(:,:), INTENT(IN)    :: PWIDTH     ! river widths                  [m]
(   23) REAL, DIMENSION(:,:), INTENT(IN)    :: PHC_BED    ! River bed depth               [m]
(   24) REAL, DIMENSION(:,:), INTENT(IN)    :: PTOPO_RIV  ! River elevatation             [m]
(   25) REAL, DIMENSION(:,:), INTENT(IN)    :: PTAUG      ! ground water transfer time    [s]
(   26) REAL, DIMENSION(:,:), INTENT(IN)    :: PAREA      ! Grid-cell area                [m2]
(   27) REAL, DIMENSION(:,:), INTENT(IN)    :: PTRANS     ! Transmissivity                [m2/s]
(   28) REAL, DIMENSION(:,:), INTENT(IN)    :: PWEFF      ! Effective porosity            [-]
(   29) REAL, DIMENSION(:,:,:), INTENT(IN)  :: PTABGW_F   !  Groundwater fraction         [-]
(   30) REAL, DIMENSION(:,:,:), INTENT(IN)  :: PTABGW_H   ! Topo height                   [m]
(   31) REAL, DIMENSION(:,:), INTENT(IN)    :: PHS        ! river height at t             [m]
(   32) REAL, DIMENSION(:,:), INTENT(INOUT) :: PHGROUND   ! water table elevation         [m]
(   33) REAL, DIMENSION(:,:), INTENT(INOUT) :: PHG_OLD    ! water table elevation at t-1  [m]
(   34) REAL, DIMENSION(:,:), INTENT(INOUT), OPTIONAL :: PSURF_STO  ! river channel storage at t    [kg]
(   35) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PQGCELL
(   36) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PWTD
(   37) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PFWTD
(   38) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PHGHS
(   39) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PGOUT
(   40) REAL, DIMENSION(:,:), INTENT(OUT), OPTIONAL   :: PGNEG
(   41) REAL,                 INTENT(OUT), OPTIONAL   :: PGSTO_ALL
(   42) REAL,                 INTENT(OUT), OPTIONAL   :: PGSTO2_ALL
(   43) REAL,                 INTENT(OUT), OPTIONAL   :: PGIN_ALL
(   44) REAL,                 INTENT(OUT), OPTIONAL   :: PGOUT_ALL
(   45) INTEGER, PARAMETER    :: IITERMAX = 100
(   46) END SUBROUTINE GWF
(   47) # 48 "modi_gwf.F90"
(   48) END INTERFACE
(   49) END MODULE MODI_GWF 
