


NVFORTRAN (Version     23.1)          02/24/2023  13:51:51      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:51:51      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_isba.F90

(    1) !depfile:isba.F90
(    2) MODULE MODI_ISBA
(    3) INTERFACE
(    4)       SUBROUTINE ISBA(IO, KK, PK, PEK, G, AG, DK, DEK, DMK, TPTIME, PPOI, PABC, &
(    5)                       PIACAN,OMEB, PTSTEP, HIMPLICIT_WIND, PZREF, PUREF,        &
(    6)                       PDIRCOSZW,PCVHEATF, PSLOPE_DIR, PIMPWET,PIMPDRY,          &
(    7)                       PTA, PQA, PEXNA, PRHOA, PPS, PEXNS, PRR, PSR, PZENITH,    &
(    8)                       PAZIM, PSCA_SW, PSW_RAD, PLW_RAD, PVMOD, PVDIR,           &
(    9)                       PPEW_A_COEF, PPEW_B_COEF,                                 &
(   10)                       PPET_A_COEF, PPEQ_A_COEF, PPET_B_COEF, PPEQ_B_COEF, AT,   &
(   11)                       PALBNIR_TVEG, PALBVIS_TVEG, PALBNIR_TSOIL, PALBVIS_TSOIL, &
(   12)                       PPALPHAN, PZ0G_WITHOUT_SNOW, PZ0_MEBV, PZ0H_MEBV,         &
(   13)                       PZ0EFF_MEBV, PZ0_MEBN, PZ0H_MEBN, PZ0EFF_MEBN, PTDEEP_A,  &
(   14)                       PCSP, PFFG_NOSNOW, PFFV_NOSNOW, PEMIST, PUSTAR, PAC_AGG,  &
(   15)                       PHU_AGG, PRESP_BIOMASS_INST, PDEEP_FLUX, PIRRIG_GR,       &
(   16)                       KTAB_SYT, P_DIR_SW, P_SCA_SW)
(   17) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   18) USE MODD_ISBA_n, ONLY : ISBA_K_t, ISBA_P_t, ISBA_PE_t
(   19) USE MODD_SFX_GRID_n, ONLY : GRID_t
(   20) USE MODD_AGRI_n, ONLY : AGRI_t
(   21) USE MODD_DIAG_n, ONLY : DIAG_t
(   22) USE MODD_DIAG_EVAP_ISBA_n, ONLY : DIAG_EVAP_ISBA_t
(   23) USE MODD_DIAG_MISC_ISBA_n, ONLY : DIAG_MISC_ISBA_t
(   24) USE MODD_TYPE_DATE_SURF, ONLY : DATE_TIME
(   25) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   26) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   27) TYPE(ISBA_K_t), INTENT(INOUT) :: KK
(   28) TYPE(ISBA_P_t), INTENT(INOUT) :: PK
(   29) TYPE(ISBA_PE_t), INTENT(INOUT) :: PEK
(   30) TYPE(GRID_t), INTENT(INOUT) :: G






NVFORTRAN (Version     23.1)          02/24/2023  13:51:51      page 3

(   31) TYPE(AGRI_t), INTENT(INOUT) :: AG
(   32) TYPE(DIAG_t), INTENT(INOUT) :: DK
(   33) TYPE(DIAG_EVAP_ISBA_t), INTENT(INOUT) :: DEK
(   34) TYPE(DIAG_MISC_ISBA_t), INTENT(INOUT) :: DMK
(   35) TYPE(DATE_TIME), INTENT(IN)       :: TPTIME     ! current date and time
(   36) REAL, DIMENSION(:),    INTENT(IN) :: PPOI       ! Gaussian weights (as above)
(   37) REAL, DIMENSION(:), INTENT(INOUT) :: PABC       ! abscissa needed for integration
(   38) REAL, DIMENSION(:,:),   INTENT(OUT) :: PIACAN   ! PAR in the canopy at different gauss level
(   39) LOGICAL, INTENT(IN)                 :: OMEB     ! True = patch with multi-energy balance 
(   40) REAL,                 INTENT(IN)  :: PTSTEP     ! timestep of the integration
(   41) CHARACTER(LEN=*),     INTENT(IN)  :: HIMPLICIT_WIND   ! wind implicitation option
(   42) REAL,                 INTENT(IN) :: PCVHEATF 
(   43) REAL, DIMENSION(:),   INTENT(IN) :: PZREF       ! normal distance of the first
(   44) REAL, DIMENSION(:),   INTENT(IN) :: PUREF       ! reference height of the wind
(   45) REAL, DIMENSION(:),   INTENT(IN) ::  PDIRCOSZW  ! Director Cosinus along z
(   46) REAL, DIMENSION(:),   INTENT(IN) ::  PSLOPE_DIR ! Slope direction
(   47) REAL, DIMENSION(:), INTENT(IN)  :: PTA        ! Temperature
(   48) REAL, DIMENSION(:), INTENT(IN)  :: PQA        ! specific humidity
(   49) REAL, DIMENSION(:), INTENT(IN)  :: PEXNA      ! Exner function
(   50) REAL, DIMENSION(:), INTENT(IN)  :: PRHOA      ! air density
(   51) REAL, DIMENSION(:), INTENT(IN)  :: PPS        ! Pressure
(   52) REAL, DIMENSION(:), INTENT(IN)  :: PEXNS      ! Exner function
(   53) REAL, DIMENSION(:), INTENT(IN)  :: PRR        ! Rain rate (in kg/m2/s)
(   54) REAL, DIMENSION(:), INTENT(IN)  :: PSR        ! Snow rate (in kg/m2/s)
(   55) REAL, DIMENSION(:), INTENT(IN)  :: PZENITH    ! solar zenith angle
(   56) REAL, DIMENSION(:), INTENT(IN)  :: PAZIM     ! azimuthal angle      (radian from North, clockwise)
(   57) REAL, DIMENSION(:), INTENT(IN)  :: PSW_RAD    ! solar   incoming radiation on slope
(   58) REAL, DIMENSION(:), INTENT(IN)  :: PSCA_SW    ! solar diffuse incoming radiation on slope
(   59) REAL, DIMENSION(:), INTENT(IN)  :: PLW_RAD    ! thermal incoming radiation
(   60) REAL, DIMENSION(:,:), INTENT(IN):: P_DIR_SW  ! solar direct spectral incoming radiation on slope
(   61) REAL, DIMENSION(:,:), INTENT(IN):: P_SCA_SW ! solar diffuse spectral incoming radiation on slope
(   62) REAL, DIMENSION(:), INTENT(IN)  :: PVMOD      ! modulus of the wind
(   63) REAL, DIMENSION(:), INTENT(IN)  :: PVDIR      ! wind direction
(   64) REAL, DIMENSION(:), INTENT(IN)  :: PPEW_A_COEF, PPEW_B_COEF, &
(   65)                                    PPET_A_COEF, PPEQ_A_COEF, &
(   66)                                    PPET_B_COEF, PPEQ_B_COEF  
(   67) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   68) REAL, DIMENSION(:), INTENT(IN)  :: PALBNIR_TVEG  ! tot albedo of vegetation in NIR (needed for LM_TR)
(   69) REAL, DIMENSION(:), INTENT(IN)  :: PALBVIS_TVEG  ! tot albedo of vegetation in VIS
(   70) REAL, DIMENSION(:), INTENT(IN)  :: PALBNIR_TSOIL ! tot albedo of bare soil in NIR
(   71) REAL, DIMENSION(:), INTENT(IN)  :: PALBVIS_TSOIL ! tot albedo of bare soil in VIS
(   72) REAL, DIMENSION(:), INTENT(IN)    :: PPALPHAN           ! snow/canopy transition coefficient
(   73) REAL, DIMENSION(:), INTENT(IN)    :: PZ0G_WITHOUT_SNOW  ! roughness length for momentum at snow-free canopy floor
(   74) REAL, DIMENSION(:), INTENT(IN)    :: PZ0_MEBV           ! roughness length for momentum over MEB vegetation part of patch
(   75) REAL, DIMENSION(:), INTENT(IN)    :: PZ0H_MEBV          ! roughness length for heat over MEB vegetation part of path
(   76) REAL, DIMENSION(:), INTENT(IN)    :: PZ0EFF_MEBV        ! roughness length for momentum over MEB vegetation part of patch
(   77) REAL, DIMENSION(:), INTENT(IN)    :: PZ0_MEBN           ! roughness length for momentum over MEB snow part of patch
(   78) REAL, DIMENSION(:), INTENT(IN)    :: PZ0H_MEBN          ! roughness length for heat over MEB snow part of path
(   79) REAL, DIMENSION(:), INTENT(IN)    :: PZ0EFF_MEBN        ! roughness length for momentum over MEB snow part of patch
(   80) REAL, DIMENSION(:), INTENT(IN)  :: PTDEEP_A       ! Deep soil temperature (prescribed)
(   81) REAL, DIMENSION(:),    INTENT(IN) :: PCSP       ! atmospheric CO2 concentration
(   82) REAL, DIMENSION(:,:),    INTENT(IN) :: PIMPWET  ! flux of wet deposit for each impurity type 
(   83) REAL, DIMENSION(:,:),    INTENT(IN) :: PIMPDRY  ! flux of dry deposit for each impurity type 
(   84) REAL, DIMENSION(:), INTENT(IN)   :: PFFG_NOSNOW ! Without snow (ES)
(   85) REAL, DIMENSION(:), INTENT(IN)   :: PFFV_NOSNOW ! Without snow (ES)
(   86) REAL, DIMENSION(:), INTENT(OUT) :: PEMIST     ! grid-area surface emissivity
(   87) REAL, DIMENSION(:), INTENT(OUT) :: PUSTAR     ! friction velocity
(   88) REAL, DIMENSION(:),  INTENT(OUT) :: PAC_AGG  ! aggregated aerodynamic conductance






NVFORTRAN (Version     23.1)          02/24/2023  13:51:51      page 4

(   89) REAL, DIMENSION(:),  INTENT(OUT) :: PHU_AGG  ! aggregated relative humidity
(   90) REAL, DIMENSION(:,:),   INTENT(OUT) :: PRESP_BIOMASS_INST  ! instantaneous biomass respiration (kgCO2/kgair m/s)
(   91) REAL, DIMENSION(:),     INTENT(OUT) :: PDEEP_FLUX ! Heat flux at bottom of ISBA (W/m2)
(   92) REAL   ,DIMENSION(:),INTENT(IN)    :: PIRRIG_GR ! ground irrigation rate (kg/m2/s)
(   93) INTEGER , DIMENSION(:), INTENT(IN)   ::  KTAB_SYT    ! Array of index defining opposite points for Sytron
(   94) END SUBROUTINE ISBA
(   95) 
(   96) END INTERFACE
(   97) END MODULE MODI_ISBA























































NVFORTRAN (Version     23.1)          02/24/2023  13:51:51      page 5

(    1) # 1 "modi_isba.F90"
(    1) !depfile:isba.F90
(    2) MODULE MODI_ISBA
(    3) INTERFACE
(    4)       SUBROUTINE ISBA(IO, KK, PK, PEK, G, AG, DK, DEK, DMK, TPTIME, PPOI, PABC, &
(    5)                       PIACAN,OMEB, PTSTEP, HIMPLICIT_WIND, PZREF, PUREF,        &
(    6)                       PDIRCOSZW,PCVHEATF, PSLOPE_DIR, PIMPWET,PIMPDRY,          &
(    7)                       PTA, PQA, PEXNA, PRHOA, PPS, PEXNS, PRR, PSR, PZENITH,    &
(    8)                       PAZIM, PSCA_SW, PSW_RAD, PLW_RAD, PVMOD, PVDIR,           &
(    9)                       PPEW_A_COEF, PPEW_B_COEF,                                 &
(   10)                       PPET_A_COEF, PPEQ_A_COEF, PPET_B_COEF, PPEQ_B_COEF, AT,   &
(   11)                       PALBNIR_TVEG, PALBVIS_TVEG, PALBNIR_TSOIL, PALBVIS_TSOIL, &
(   12)                       PPALPHAN, PZ0G_WITHOUT_SNOW, PZ0_MEBV, PZ0H_MEBV,         &
(   13)                       PZ0EFF_MEBV, PZ0_MEBN, PZ0H_MEBN, PZ0EFF_MEBN, PTDEEP_A,  &
(   14)                       PCSP, PFFG_NOSNOW, PFFV_NOSNOW, PEMIST, PUSTAR, PAC_AGG,  &
(   15)                       PHU_AGG, PRESP_BIOMASS_INST, PDEEP_FLUX, PIRRIG_GR,       &
(   16)                       KTAB_SYT, P_DIR_SW, P_SCA_SW)
(   17) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   18) USE MODD_ISBA_n, ONLY : ISBA_K_t, ISBA_P_t, ISBA_PE_t
(   19) USE MODD_SFX_GRID_n, ONLY : GRID_t
(   20) USE MODD_AGRI_n, ONLY : AGRI_t
(   21) USE MODD_DIAG_n, ONLY : DIAG_t
(   22) USE MODD_DIAG_EVAP_ISBA_n, ONLY : DIAG_EVAP_ISBA_t
(   23) USE MODD_DIAG_MISC_ISBA_n, ONLY : DIAG_MISC_ISBA_t
(   24) USE MODD_TYPE_DATE_SURF, ONLY : DATE_TIME
(   25) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   26) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   27) TYPE(ISBA_K_t), INTENT(INOUT) :: KK
(   28) TYPE(ISBA_P_t), INTENT(INOUT) :: PK
(   29) TYPE(ISBA_PE_t), INTENT(INOUT) :: PEK
(   30) TYPE(GRID_t), INTENT(INOUT) :: G
(   31) TYPE(AGRI_t), INTENT(INOUT) :: AG
(   32) TYPE(DIAG_t), INTENT(INOUT) :: DK
(   33) TYPE(DIAG_EVAP_ISBA_t), INTENT(INOUT) :: DEK
(   34) TYPE(DIAG_MISC_ISBA_t), INTENT(INOUT) :: DMK
(   35) TYPE(DATE_TIME), INTENT(IN)       :: TPTIME     ! current date and time
(   36) REAL, DIMENSION(:),    INTENT(IN) :: PPOI       ! Gaussian weights (as above)
(   37) REAL, DIMENSION(:), INTENT(INOUT) :: PABC       ! abscissa needed for integration
(   38) REAL, DIMENSION(:,:),   INTENT(OUT) :: PIACAN   ! PAR in the canopy at different gauss level
(   39) LOGICAL, INTENT(IN)                 :: OMEB     ! True = patch with multi-energy balance 
(   40) REAL,                 INTENT(IN)  :: PTSTEP     ! timestep of the integration
(   41) CHARACTER(LEN=*),     INTENT(IN)  :: HIMPLICIT_WIND   ! wind implicitation option
(   42) REAL,                 INTENT(IN) :: PCVHEATF 
(   43) REAL, DIMENSION(:),   INTENT(IN) :: PZREF       ! normal distance of the first
(   44) REAL, DIMENSION(:),   INTENT(IN) :: PUREF       ! reference height of the wind
(   45) REAL, DIMENSION(:),   INTENT(IN) ::  PDIRCOSZW  ! Director Cosinus along z
(   46) REAL, DIMENSION(:),   INTENT(IN) ::  PSLOPE_DIR ! Slope direction
(   47) REAL, DIMENSION(:), INTENT(IN)  :: PTA        ! Temperature
(   48) REAL, DIMENSION(:), INTENT(IN)  :: PQA        ! specific humidity
(   49) REAL, DIMENSION(:), INTENT(IN)  :: PEXNA      ! Exner function
(   50) REAL, DIMENSION(:), INTENT(IN)  :: PRHOA      ! air density
(   51) REAL, DIMENSION(:), INTENT(IN)  :: PPS        ! Pressure
(   52) REAL, DIMENSION(:), INTENT(IN)  :: PEXNS      ! Exner function
(   53) REAL, DIMENSION(:), INTENT(IN)  :: PRR        ! Rain rate (in kg/m2/s)
(   54) REAL, DIMENSION(:), INTENT(IN)  :: PSR        ! Snow rate (in kg/m2/s)
(   55) REAL, DIMENSION(:), INTENT(IN)  :: PZENITH    ! solar zenith angle
(   56) REAL, DIMENSION(:), INTENT(IN)  :: PAZIM     ! azimuthal angle      (radian from North, clockwise)
(   57) REAL, DIMENSION(:), INTENT(IN)  :: PSW_RAD    ! solar   incoming radiation on slope






NVFORTRAN (Version     23.1)          02/24/2023  13:51:51      page 6

(   58) REAL, DIMENSION(:), INTENT(IN)  :: PSCA_SW    ! solar diffuse incoming radiation on slope
(   59) REAL, DIMENSION(:), INTENT(IN)  :: PLW_RAD    ! thermal incoming radiation
(   60) REAL, DIMENSION(:,:), INTENT(IN):: P_DIR_SW  ! solar direct spectral incoming radiation on slope
(   61) REAL, DIMENSION(:,:), INTENT(IN):: P_SCA_SW ! solar diffuse spectral incoming radiation on slope
(   62) REAL, DIMENSION(:), INTENT(IN)  :: PVMOD      ! modulus of the wind
(   63) REAL, DIMENSION(:), INTENT(IN)  :: PVDIR      ! wind direction
(   64) REAL, DIMENSION(:), INTENT(IN)  :: PPEW_A_COEF, PPEW_B_COEF, &
(   65)                                    PPET_A_COEF, PPEQ_A_COEF, &
(   66)                                    PPET_B_COEF, PPEQ_B_COEF  
(   67) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   68) REAL, DIMENSION(:), INTENT(IN)  :: PALBNIR_TVEG  ! tot albedo of vegetation in NIR (needed for LM_TR)
(   69) REAL, DIMENSION(:), INTENT(IN)  :: PALBVIS_TVEG  ! tot albedo of vegetation in VIS
(   70) REAL, DIMENSION(:), INTENT(IN)  :: PALBNIR_TSOIL ! tot albedo of bare soil in NIR
(   71) REAL, DIMENSION(:), INTENT(IN)  :: PALBVIS_TSOIL ! tot albedo of bare soil in VIS
(   72) REAL, DIMENSION(:), INTENT(IN)    :: PPALPHAN           ! snow/canopy transition coefficient
(   73) REAL, DIMENSION(:), INTENT(IN)    :: PZ0G_WITHOUT_SNOW  ! roughness length for momentum at snow-free canopy floor
(   74) REAL, DIMENSION(:), INTENT(IN)    :: PZ0_MEBV           ! roughness length for momentum over MEB vegetation part of patch
(   75) REAL, DIMENSION(:), INTENT(IN)    :: PZ0H_MEBV          ! roughness length for heat over MEB vegetation part of path
(   76) REAL, DIMENSION(:), INTENT(IN)    :: PZ0EFF_MEBV        ! roughness length for momentum over MEB vegetation part of patch
(   77) REAL, DIMENSION(:), INTENT(IN)    :: PZ0_MEBN           ! roughness length for momentum over MEB snow part of patch
(   78) REAL, DIMENSION(:), INTENT(IN)    :: PZ0H_MEBN          ! roughness length for heat over MEB snow part of path
(   79) REAL, DIMENSION(:), INTENT(IN)    :: PZ0EFF_MEBN        ! roughness length for momentum over MEB snow part of patch
(   80) REAL, DIMENSION(:), INTENT(IN)  :: PTDEEP_A       ! Deep soil temperature (prescribed)
(   81) REAL, DIMENSION(:),    INTENT(IN) :: PCSP       ! atmospheric CO2 concentration
(   82) REAL, DIMENSION(:,:),    INTENT(IN) :: PIMPWET  ! flux of wet deposit for each impurity type 
(   83) REAL, DIMENSION(:,:),    INTENT(IN) :: PIMPDRY  ! flux of dry deposit for each impurity type 
(   84) REAL, DIMENSION(:), INTENT(IN)   :: PFFG_NOSNOW ! Without snow (ES)
(   85) REAL, DIMENSION(:), INTENT(IN)   :: PFFV_NOSNOW ! Without snow (ES)
(   86) REAL, DIMENSION(:), INTENT(OUT) :: PEMIST     ! grid-area surface emissivity
(   87) REAL, DIMENSION(:), INTENT(OUT) :: PUSTAR     ! friction velocity
(   88) REAL, DIMENSION(:),  INTENT(OUT) :: PAC_AGG  ! aggregated aerodynamic conductance
(   89) REAL, DIMENSION(:),  INTENT(OUT) :: PHU_AGG  ! aggregated relative humidity
(   90) REAL, DIMENSION(:,:),   INTENT(OUT) :: PRESP_BIOMASS_INST  ! instantaneous biomass respiration (kgCO2/kgair m/s)
(   91) REAL, DIMENSION(:),     INTENT(OUT) :: PDEEP_FLUX ! Heat flux at bottom of ISBA (W/m2)
(   92) REAL   ,DIMENSION(:),INTENT(IN)    :: PIRRIG_GR ! ground irrigation rate (kg/m2/s)
(   93) INTEGER , DIMENSION(:), INTENT(IN)   ::  KTAB_SYT    ! Array of index defining opposite points for Sytron
(   94) END SUBROUTINE ISBA
(   95) # 96 "modi_isba.F90"
(   96) END INTERFACE
(   97) END MODULE MODI_ISBA
