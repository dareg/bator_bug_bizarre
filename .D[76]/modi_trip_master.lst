


NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_trip_master.F90

(    1) !###################################################################
(    2) PROGRAM TRIP_MASTER
(    3) !###################################################################
(    4) !
(    5) !
(    6) !!****  *TRIP_MASTER*  
(    7) !!
(    8) !!    PURPOSE
(    9) !!    -------
(   10) !!   
(   11) !!    Driver for TRIP from CNRM
(   12) !!      
(   13) !!    REFERENCE
(   14) !!    ---------
(   15) !!      
(   16) !!    AUTHOR
(   17) !!    ------
(   18) !!      B. Decharme
(   19) !!
(   20) !!    MODIFICATIONS
(   21) !!    -------------
(   22) !!      Original    06/08
(   23) !!      S.Sénési    08/11/16 : interface to XIOS 
(   24) !-------------------------------------------------------------------------------
(   25) !
(   26) !*       0.     DECLARATIONS
(   27) !               ------------
(   28) !
(   29) USE MODD_SURFEX_TRIP_n
(   30) USE MODD_OFF_TRIP_n






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 3

(   31) !
(   32) USE MODD_TRIP_LISTING
(   33) !
(   34) USE MODN_TRIP_RUN, ONLY : LRESTART, LPRINT, LWR_DIAG,  &
(   35)                           XTSTEP_RUN, XTSTEP_DIAG
(   36) !
(   37) USE MODD_TRIP_PAR, ONLY : XUNDEF, NUNDEF, XDAY
(   38) !
(   39) USE MODE_RW_TRIP
(   40) !
(   41) USE MODI_READ_NAM_TRIP_RUN
(   42) USE MODI_READ_NAM_TRIP
(   43) USE MODI_READ_NAM_TRIP_GRID
(   44) !
(   45) USE MODI_ABORT_TRIP
(   46) USE MODI_GET_TRIP_GRID_CONF
(   47) !
(   48) USE MODI_INIT_TRIP
(   49) USE MODI_INIT_TRIP_PAR
(   50) USE MODI_TRIP_RUN_CONF
(   51) USE MODI_TRIP_RESTART
(   52) USE MODI_TRIP_DIAG_RUN
(   53) USE MODI_TRIP_RUN
(   54) !
(   55) USE MODI_TRIP_OASIS_INIT
(   56) USE MODI_TRIP_OASIS_READ_NAM
(   57) USE MODI_TRIP_OASIS_DEFINE
(   58) USE MODI_TRIP_OASIS_END
(   59) !
(   60) USE MODI_TRIP_XIOS_INIT
(   61) !
(   62) #ifdef SFX_MPI
(   63) #ifdef SFX_MPL
(   64) USE MPL_DATA_MODULE, ONLY : LMPLUSERCOMM, MPLUSERCOMM
(   65) #endif
(   66) #endif
(   67) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   68) USE PARKIND1  ,ONLY : JPRB
(   69) !
(   70) IMPLICIT NONE
(   71) !
(   72) #if defined CPLOASIS || defined WXIOS
(   73) INCLUDE 'mpif.h'
(   74) #endif
(   75) !
(   76) INTEGER                           :: IYEAR               ! current year         (UTC)
(   77) INTEGER                           :: IMONTH              ! current month        (UTC)
(   78) INTEGER                           :: IDAY                ! current day          (UTC)
(   79) REAL                              :: ZTIME               ! current time           (s)
(   80) REAL                              :: ZRUNTIME            ! total simulated time   (s)
(   81) !
(   82) INTEGER                           :: INB_TSTEP_RUN       ! number of time step in the run
(   83) INTEGER                           :: ILON                ! Number of longitude
(   84) INTEGER                           :: ILAT                ! Number of latittude
(   85) !
(   86) INTEGER                           :: INB_OL              ! number of time step if forcing offline
(   87) INTEGER                           :: ILON_OL             ! Number of longitude if forcing offline
(   88) INTEGER                           :: ILAT_OL             ! Number of latittude if forcing offline






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 4

(   89) !
(   90) INTEGER                           :: IERR                ! Error value
(   91) INTEGER                           :: INPROC              ! Number of processes
(   92) INTEGER                           :: IRANK               ! Local process number
(   93) INTEGER                           :: ILOCAL_COMM         ! Local communicator
(   94) LOGICAL                           :: GOASIS              ! OASIS used(default=.false.)
(   95) LOGICAL                           :: GXIOS               ! XIOS used(default=.false.)
(   96) !
(   97) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   98) !
(   99) ! --------------------------------------------------------------------------------------
(  100) ! * 0. MPI and OASIS must be initialized before any DR_HOOK call
(  101) ! --------------------------------------------------------------------------------------
(  102) !
(  103)  CALL TRIP_OASIS_INIT(GOASIS,GXIOS,ILOCAL_COMM,PRUNTIME=ZRUNTIME)
(  104) !
(  105) #ifdef SFX_MPI
(  106) #ifdef SFX_MPL
(  107) IF (ILOCAL_COMM/=0) THEN
(  108)   LMPLUSERCOMM = .TRUE.
(  109)   MPLUSERCOMM = ILOCAL_COMM
(  110) ENDIF
(  111) #endif
(  112) #endif
(  113) !
(  114) ! --------------------------------------------------------------------------------------
(  115) ! * 1. Alloc trip variables and open listing
(  116) ! --------------------------------------------------------------------------------------
(  117) !
(  118) IF (LHOOK) CALL DR_HOOK('TRIP_MASTER',0,ZHOOK_HANDLE)
(  119) !
(  120)  CALL TRIP_ALLOC_LIST(1)
(  121) !
(  122)  CALL INIT_TRIP_PAR
(  123) !
(  124) OPEN(UNIT=NLISTING,FILE=CLISTING,FORM='FORMATTED',ACTION='WRITE')
(  125) !
(  126) ! --------------------------------------------------------------------------------------
(  127) ! * 2. Check run attributes
(  128) ! --------------------------------------------------------------------------------------
(  129) !
(  130) !Inquire if trip is parallel or not: TRIP is only a monoprocess model for now
(  131) !
(  132) INPROC = NUNDEF
(  133) IRANK  = NUNDEF
(  134) !
(  135) #ifdef CPLOASIS || WXIOS
NVFORTRAN-W-0951-Extraneous tokens ignored following # directive (modi_trip_master.F90: 135)
(  136) IF (ILOCAL_COMM==0) THEN
(  137)   ILOCAL_COMM = MPI_COMM_WORLD
(  138) ENDIF
(  139)  CALL MPI_COMM_SIZE(ILOCAL_COMM,INPROC,IERR)
(  140)  CALL MPI_COMM_RANK(ILOCAL_COMM,IRANK,IERR)  
(  141) !
(  142) IF(INPROC==NUNDEF.OR.IRANK==NUNDEF)THEN
(  143)   WRITE(NLISTING,*)'TRIP_MASTER: PROBLEM WITH MPI, INPROC = ',INPROC
(  144)   WRITE(NLISTING,*)'TRIP_MASTER: PROBLEM WITH MPI, IRANK  = ',IRANK
(  145)   CALL ABORT_TRIP('TRIP_MASTER: PROBLEM WITH MPI')






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 5

(  146) ENDIF
(  147) #endif
(  148) !
(  149) IF(INPROC>1.AND.INPROC<NUNDEF)THEN
(  150)   WRITE(NLISTING,*)'TRIP_MASTER: TRIP NOT YET PARALLELIZED, NPROC SHOULD BE 1'
(  151)   CALL ABORT_TRIP('TRIP_MASTER: TRIP NOT YET PARALLELIZED')
(  152) ENDIF
(  153) !
(  154) IF(GOASIS)THEN
(  155)   WRITE(NLISTING,*) '!!!!!!!!!!!!!!!!!!!!!!!'
(  156)   WRITE(NLISTING,*) '    OASIS is used      ' 
(  157)   WRITE(NLISTING,*) '                       '
(  158)   WRITE(NLISTING,*) 'Number of processes   :', INPROC
(  159)   WRITE(NLISTING,*) 'Local process number  :', IRANK
(  160)   WRITE(NLISTING,*) 'Local communicator    :', ILOCAL_COMM
(  161)   WRITE(NLISTING,*) '!!!!!!!!!!!!!!!!!!!!!!!'
(  162)   WRITE(NLISTING,*) '                       '
(  163) ELSE
(  164)   WRITE(NLISTING,*) '!!!!!!!!!!!!!!!!!!!!!!!'
(  165)   WRITE(NLISTING,*) '   TRIP run offline    ' 
(  166)   WRITE(NLISTING,*) '!!!!!!!!!!!!!!!!!!!!!!!'
(  167)   WRITE(NLISTING,*) '                       '
(  168) ENDIF
(  169) !
(  170) ! --------------------------------------------------------------------------------------
(  171) ! * 3. read namelists
(  172) ! --------------------------------------------------------------------------------------
(  173) !
(  174)  CALL READ_NAM_TRIP_RUN(NLISTING)
(  175) !
(  176)  CALL READ_NAM_TRIP(NLISTING)
(  177) !
(  178) IF(GOASIS)THEN
(  179)   CALL TRIP_OASIS_READ_NAM(NLISTING,ZRUNTIME)
(  180) ENDIF
(  181) !
(  182) ! --------------------------------------------------------------------------------------
(  183) ! * 4. TRIP initializations
(  184) ! --------------------------------------------------------------------------------------
(  185) !
(  186) YTRIP_CUR => YTRIP_LIST(1)
(  187) !
(  188)  CALL READ_NAM_TRIP_GRID(YTRIP_CUR%TPG,NLISTING)
(  189) !
(  190)  CALL INIT_TRIP(YTRIP_CUR%TPDG, YTRIP_CUR%TP, YTRIP_CUR%TPG, &
(  191)                IYEAR,IMONTH,IDAY,ZTIME,ILON,ILAT,XTSTEP_RUN, &
(  192)                XTSTEP_DIAG,LRESTART,GXIOS)
(  193) !
(  194) ! --------------------------------------------------------------------------------------
(  195) ! * 5. TRIP - OASIS  grid, partitions and local field definitions
(  196) ! --------------------------------------------------------------------------------------
(  197) !
(  198) IF(GOASIS)THEN
(  199)   CALL TRIP_OASIS_DEFINE(NLISTING,ILON,ILAT)
(  200) ENDIF
(  201) !
(  202) ! --------------------------------------------------------------------------------------
(  203) ! * 5.2 XIOS init






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 6

(  204) ! --------------------------------------------------------------------------------------
(  205) !
(  206) #ifdef WXIOS
(  207) IF (GXIOS) THEN 
(  208)    CALL TRIP_XIOS_INIT(YTRIP_CUR%TPG,ILOCAL_COMM,ILON,ILAT,&
(  209)                        IYEAR,IMONTH,IDAY,ZTIME)
(  210) ENDIF
(  211) #endif
(  212) !
(  213) ! --------------------------------------------------------------------------------------
(  214) ! * 6. Get run configuration
(  215) ! --------------------------------------------------------------------------------------
(  216) !
(  217)  CALL TRIP_RUN_CONF(NLISTING,GOASIS,IYEAR,IMONTH,IDAY,ZTIME, &
(  218)                    ILON,ILAT,INB_TSTEP_RUN,ZRUNTIME         )
(  219) !
(  220) IF(GOASIS)THEN
(  221)   INB_OL  = 0
(  222)   ILON_OL = 0
(  223)   ILAT_OL = 0
(  224) ELSE
(  225)   INB_OL  = INB_TSTEP_RUN
(  226)   ILON_OL = ILON
(  227)   ILAT_OL = ILAT
(  228) ENDIF
(  229) !
(  230) ! --------------------------------------------------------------------------------------
(  231) ! * 7. Read and prepare drainage and runoff if offline
(  232) ! --------------------------------------------------------------------------------------
(  233) !
(  234)  CALL TRIP_RUN(YTRIP_CUR%TPDG, YTRIP_CUR%TP, YTRIP_CUR%TPG, &
(  235)               GOASIS,GXIOS,                     &
(  236)               NLISTING,ILON,ILAT,INB_TSTEP_RUN, &
(  237)               ZRUNTIME,ILON_OL,ILAT_OL,INB_OL,  &
(  238)               IYEAR,IMONTH,IDAY,ZTIME           )
(  239) !
(  240) !-------------------------------------------------------------------------------
(  241) ! * 9. Store run mean diagnostic and write restart
(  242) !-------------------------------------------------------------------------------
(  243) !
(  244) IF (GXIOS) THEN 
(  245)    CALL WRITE_TRIP(NLISTING,'dummy.nc','areacellr',YTRIP_CUR%TPG%GMASK,YTRIP_CUR%TPG%XAREA,OXIOS=.TRUE.)
(  246) ELSEIF(LWR_DIAG)THEN
(  247)    CALL TRIP_DIAG_RUN(YTRIP_CUR%TPDG, YTRIP_CUR%TPG, &
(  248)                       NLISTING,ILON,ILAT,ZRUNTIME)
(  249) ENDIF
(  250) !
(  251) IF(LRESTART)THEN
(  252)    CALL TRIP_RESTART(YTRIP_CUR%TP, YTRIP_CUR%TPG, &
(  253)                      NLISTING,IYEAR,IMONTH,IDAY,ZTIME,ILON,ILAT)
(  254) ENDIF
(  255) !
(  256) ! --------------------------------------------------------------------------------------
(  257) ! * 10. End of run
(  258) ! --------------------------------------------------------------------------------------
(  259) !
(  260)  CLOSE(NLISTING)
(  261) !






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 7

(  262) WRITE(*,*) ' '
(  263) WRITE(*,*) '    ------------------------------'
(  264) WRITE(*,*) '    | TRIP MASTER ENDS CORRECTLY |'
(  265) WRITE(*,*) '    ------------------------------'
(  266) WRITE(*,*) ' '
(  267) !
(  268)  CALL TRIP_DEALLO_LIST
(  269) !
(  270) IF (LHOOK) CALL DR_HOOK('TRIP_MASTER',1,ZHOOK_HANDLE)
(  271) !
(  272) ! --------------------------------------------------------------------------------------
(  273) ! * 11. MPI and OASIS must be finalized after the last DR_HOOK call
(  274) ! --------------------------------------------------------------------------------------
(  275) !
(  276) CALL TRIP_OASIS_END(GOASIS,GXIOS)
(  277) !
(  278) !-------------------------------------------------------------------------------
(  279) END PROGRAM TRIP_MASTER














































NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 8

(    1) # 1 "modi_trip_master.F90"
(    1) !###################################################################
(    2) PROGRAM TRIP_MASTER
(    3) !###################################################################
(    4) !
(    5) !
(    6) !!****  *TRIP_MASTER*  
(    7) !!
(    8) !!    PURPOSE
(    9) !!    -------
(   10) !!   
(   11) !!    Driver for TRIP from CNRM
(   12) !!      
(   13) !!    REFERENCE
(   14) !!    ---------
(   15) !!      
(   16) !!    AUTHOR
(   17) !!    ------
(   18) !!      B. Decharme
(   19) !!
(   20) !!    MODIFICATIONS
(   21) !!    -------------
(   22) !!      Original    06/08
(   23) !!      S.Sénési    08/11/16 : interface to XIOS 
(   24) !-------------------------------------------------------------------------------
(   25) !
(   26) !*       0.     DECLARATIONS
(   27) !               ------------
(   28) !
(   29) USE MODD_SURFEX_TRIP_n
(   30) USE MODD_OFF_TRIP_n
(   31) !
(   32) USE MODD_TRIP_LISTING
(   33) !
(   34) USE MODN_TRIP_RUN, ONLY : LRESTART, LPRINT, LWR_DIAG,  &
(   35)                           XTSTEP_RUN, XTSTEP_DIAG
(   36) !
(   37) USE MODD_TRIP_PAR, ONLY : XUNDEF, NUNDEF, XDAY
(   38) !
(   39) USE MODE_RW_TRIP
(   40) !
(   41) USE MODI_READ_NAM_TRIP_RUN
(   42) USE MODI_READ_NAM_TRIP
(   43) USE MODI_READ_NAM_TRIP_GRID
(   44) !
(   45) USE MODI_ABORT_TRIP
(   46) USE MODI_GET_TRIP_GRID_CONF
(   47) !
(   48) USE MODI_INIT_TRIP
(   49) USE MODI_INIT_TRIP_PAR
(   50) USE MODI_TRIP_RUN_CONF
(   51) USE MODI_TRIP_RESTART
(   52) USE MODI_TRIP_DIAG_RUN
(   53) USE MODI_TRIP_RUN
(   54) !
(   55) USE MODI_TRIP_OASIS_INIT
(   56) USE MODI_TRIP_OASIS_READ_NAM
(   57) USE MODI_TRIP_OASIS_DEFINE






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 9

(   58) USE MODI_TRIP_OASIS_END
(   59) !
(   60) USE MODI_TRIP_XIOS_INIT
(   61) !
(   62) # 67 "modi_trip_master.F90"
(   67) USE YOMHOOK   ,ONLY : LHOOK,   DR_HOOK
(   68) USE PARKIND1  ,ONLY : JPRB
(   69) !
(   70) IMPLICIT NONE
(   71) !
(   72) # 75 "modi_trip_master.F90"
(   75) !
(   76) INTEGER                           :: IYEAR               ! current year         (UTC)
(   77) INTEGER                           :: IMONTH              ! current month        (UTC)
(   78) INTEGER                           :: IDAY                ! current day          (UTC)
(   79) REAL                              :: ZTIME               ! current time           (s)
(   80) REAL                              :: ZRUNTIME            ! total simulated time   (s)
(   81) !
(   82) INTEGER                           :: INB_TSTEP_RUN       ! number of time step in the run
(   83) INTEGER                           :: ILON                ! Number of longitude
(   84) INTEGER                           :: ILAT                ! Number of latittude
(   85) !
(   86) INTEGER                           :: INB_OL              ! number of time step if forcing offline
(   87) INTEGER                           :: ILON_OL             ! Number of longitude if forcing offline
(   88) INTEGER                           :: ILAT_OL             ! Number of latittude if forcing offline
(   89) !
(   90) INTEGER                           :: IERR                ! Error value
(   91) INTEGER                           :: INPROC              ! Number of processes
(   92) INTEGER                           :: IRANK               ! Local process number
(   93) INTEGER                           :: ILOCAL_COMM         ! Local communicator
(   94) LOGICAL                           :: GOASIS              ! OASIS used(default=.false.)
(   95) LOGICAL                           :: GXIOS               ! XIOS used(default=.false.)
(   96) !
(   97) REAL(KIND=JPRB) :: ZHOOK_HANDLE
(   98) !
(   99) ! --------------------------------------------------------------------------------------
(  100) ! * 0. MPI and OASIS must be initialized before any DR_HOOK call
(  101) ! --------------------------------------------------------------------------------------
(  102) !
(  103)  CALL TRIP_OASIS_INIT(GOASIS,GXIOS,ILOCAL_COMM,PRUNTIME=ZRUNTIME)
(  104) !
(  105) # 113 "modi_trip_master.F90"
(  113) !
(  114) ! --------------------------------------------------------------------------------------
(  115) ! * 1. Alloc trip variables and open listing
(  116) ! --------------------------------------------------------------------------------------
(  117) !
(  118) IF (LHOOK) CALL DR_HOOK('TRIP_MASTER',0,ZHOOK_HANDLE)
(  119) !
(  120)  CALL TRIP_ALLOC_LIST(1)
(  121) !
(  122)  CALL INIT_TRIP_PAR
(  123) !
(  124) OPEN(UNIT=NLISTING,FILE=CLISTING,FORM='FORMATTED',ACTION='WRITE')
(  125) !
(  126) ! --------------------------------------------------------------------------------------
(  127) ! * 2. Check run attributes
(  128) ! --------------------------------------------------------------------------------------






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 10

(  129) !
(  130) !Inquire if trip is parallel or not: TRIP is only a monoprocess model for now
(  131) !
(  132) INPROC = NUNDEF
(  133) IRANK  = NUNDEF
(  134) !
(  135) # 148 "modi_trip_master.F90"
(  148) !
(  149) IF(INPROC>1.AND.INPROC<NUNDEF)THEN
(  150)   WRITE(NLISTING,*)'TRIP_MASTER: TRIP NOT YET PARALLELIZED, NPROC SHOULD BE 1'
(  151)   CALL ABORT_TRIP('TRIP_MASTER: TRIP NOT YET PARALLELIZED')
(  152) ENDIF
(  153) !
(  154) IF(GOASIS)THEN
(  155)   WRITE(NLISTING,*) '!!!!!!!!!!!!!!!!!!!!!!!'
(  156)   WRITE(NLISTING,*) '    OASIS is used      ' 
(  157)   WRITE(NLISTING,*) '                       '
(  158)   WRITE(NLISTING,*) 'Number of processes   :', INPROC
(  159)   WRITE(NLISTING,*) 'Local process number  :', IRANK
(  160)   WRITE(NLISTING,*) 'Local communicator    :', ILOCAL_COMM
(  161)   WRITE(NLISTING,*) '!!!!!!!!!!!!!!!!!!!!!!!'
(  162)   WRITE(NLISTING,*) '                       '
(  163) ELSE
(  164)   WRITE(NLISTING,*) '!!!!!!!!!!!!!!!!!!!!!!!'
(  165)   WRITE(NLISTING,*) '   TRIP run offline    ' 
(  166)   WRITE(NLISTING,*) '!!!!!!!!!!!!!!!!!!!!!!!'
(  167)   WRITE(NLISTING,*) '                       '
(  168) ENDIF
(  169) !
(  170) ! --------------------------------------------------------------------------------------
(  171) ! * 3. read namelists
(  172) ! --------------------------------------------------------------------------------------
(  173) !
(  174)  CALL READ_NAM_TRIP_RUN(NLISTING)
(  175) !
(  176)  CALL READ_NAM_TRIP(NLISTING)
(  177) !
(  178) IF(GOASIS)THEN
(  179)   CALL TRIP_OASIS_READ_NAM(NLISTING,ZRUNTIME)
(  180) ENDIF
(  181) !
(  182) ! --------------------------------------------------------------------------------------
(  183) ! * 4. TRIP initializations
(  184) ! --------------------------------------------------------------------------------------
(  185) !
(  186) YTRIP_CUR => YTRIP_LIST(1)
(  187) !
(  188)  CALL READ_NAM_TRIP_GRID(YTRIP_CUR%TPG,NLISTING)
(  189) !
(  190)  CALL INIT_TRIP(YTRIP_CUR%TPDG, YTRIP_CUR%TP, YTRIP_CUR%TPG, &
(  191)                IYEAR,IMONTH,IDAY,ZTIME,ILON,ILAT,XTSTEP_RUN, &
(  192)                XTSTEP_DIAG,LRESTART,GXIOS)
(  193) !
(  194) ! --------------------------------------------------------------------------------------
(  195) ! * 5. TRIP - OASIS  grid, partitions and local field definitions
(  196) ! --------------------------------------------------------------------------------------
(  197) !
(  198) IF(GOASIS)THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 11

(  199)   CALL TRIP_OASIS_DEFINE(NLISTING,ILON,ILAT)
(  200) ENDIF
(  201) !
(  202) ! --------------------------------------------------------------------------------------
(  203) ! * 5.2 XIOS init
(  204) ! --------------------------------------------------------------------------------------
(  205) !
(  206) # 212 "modi_trip_master.F90"
(  212) !
(  213) ! --------------------------------------------------------------------------------------
(  214) ! * 6. Get run configuration
(  215) ! --------------------------------------------------------------------------------------
(  216) !
(  217)  CALL TRIP_RUN_CONF(NLISTING,GOASIS,IYEAR,IMONTH,IDAY,ZTIME, &
(  218)                    ILON,ILAT,INB_TSTEP_RUN,ZRUNTIME         )
(  219) !
(  220) IF(GOASIS)THEN
(  221)   INB_OL  = 0
(  222)   ILON_OL = 0
(  223)   ILAT_OL = 0
(  224) ELSE
(  225)   INB_OL  = INB_TSTEP_RUN
(  226)   ILON_OL = ILON
(  227)   ILAT_OL = ILAT
(  228) ENDIF
(  229) !
(  230) ! --------------------------------------------------------------------------------------
(  231) ! * 7. Read and prepare drainage and runoff if offline
(  232) ! --------------------------------------------------------------------------------------
(  233) !
(  234)  CALL TRIP_RUN(YTRIP_CUR%TPDG, YTRIP_CUR%TP, YTRIP_CUR%TPG, &
(  235)               GOASIS,GXIOS,                     &
(  236)               NLISTING,ILON,ILAT,INB_TSTEP_RUN, &
(  237)               ZRUNTIME,ILON_OL,ILAT_OL,INB_OL,  &
(  238)               IYEAR,IMONTH,IDAY,ZTIME           )
(  239) !
(  240) !-------------------------------------------------------------------------------
(  241) ! * 9. Store run mean diagnostic and write restart
(  242) !-------------------------------------------------------------------------------
(  243) !
(  244) IF (GXIOS) THEN 
(  245)    CALL WRITE_TRIP(NLISTING,'dummy.nc','areacellr',YTRIP_CUR%TPG%GMASK,YTRIP_CUR%TPG%XAREA,OXIOS=.TRUE.)
(  246) ELSEIF(LWR_DIAG)THEN
(  247)    CALL TRIP_DIAG_RUN(YTRIP_CUR%TPDG, YTRIP_CUR%TPG, &
(  248)                       NLISTING,ILON,ILAT,ZRUNTIME)
(  249) ENDIF
(  250) !
(  251) IF(LRESTART)THEN
(  252)    CALL TRIP_RESTART(YTRIP_CUR%TP, YTRIP_CUR%TPG, &
(  253)                      NLISTING,IYEAR,IMONTH,IDAY,ZTIME,ILON,ILAT)
(  254) ENDIF
(  255) !
(  256) ! --------------------------------------------------------------------------------------
(  257) ! * 10. End of run
(  258) ! --------------------------------------------------------------------------------------
(  259) !
(  260)  CLOSE(NLISTING)
(  261) !






NVFORTRAN (Version     23.1)          02/24/2023  13:58:30      page 12

(  262) WRITE(*,*) ' '
(  263) WRITE(*,*) '    ------------------------------'
(  264) WRITE(*,*) '    | TRIP MASTER ENDS CORRECTLY |'
(  265) WRITE(*,*) '    ------------------------------'
(  266) WRITE(*,*) ' '
(  267) !
(  268)  CALL TRIP_DEALLO_LIST
(  269) !
(  270) IF (LHOOK) CALL DR_HOOK('TRIP_MASTER',1,ZHOOK_HANDLE)
(  271) !
(  272) ! --------------------------------------------------------------------------------------
(  273) ! * 11. MPI and OASIS must be finalized after the last DR_HOOK call
(  274) ! --------------------------------------------------------------------------------------
(  275) !
(  276) CALL TRIP_OASIS_END(GOASIS,GXIOS)
(  277) !
(  278) !-------------------------------------------------------------------------------
(  279) END PROGRAM TRIP_MASTER
