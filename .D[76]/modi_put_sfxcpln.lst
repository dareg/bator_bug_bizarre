


NVFORTRAN (Version     23.1)          02/24/2023  13:57:04      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:57:04      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_put_sfxcpln.F90

(    1) !depfile:put_sfxcpln.F90
(    2) MODULE MODI_PUT_SFXCPL_n 
(    3) INTERFACE
(    4) SUBROUTINE PUT_SFXCPL_n (F, IM, S, U, W, TM, GDM, GRM, &
(    5)                          HPROGRAM,KI,KSW,PSW_BANDS,PZENITH, &
(    6)                         PLAND_WTD,PLAND_FWTD,PLAND_FFLOOD, &
(    7)                         PLAND_PIFLOOD,PSEA_SST,PSEA_UCU,   &
(    8)                         PSEA_VCU,PSEAICE_SIT,PSEAICE_CVR,  &
(    9)                         PSEAICE_ALB,PTSRAD,                &
(   10)                         PDIR_ALB,PSCA_ALB,PEMIS,PTSURF     )  
(   11) USE MODD_FLAKE_n, ONLY : FLAKE_t
(   12) USE MODD_SURFEX_n, ONLY : ISBA_MODEL_t, &
(   13)                           TEB_MODEL_t, &
(   14)                           TEB_GARDEN_MODEL_t,TEB_GREENROOF_MODEL_t
(   15) USE MODD_SEAFLUX_n, ONLY : SEAFLUX_t
(   16) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   17) USE MODD_WATFLUX_n, ONLY : WATFLUX_t
(   18) TYPE(FLAKE_t), INTENT(INOUT) :: F
(   19) TYPE(ISBA_MODEL_t), INTENT(INOUT) :: IM
(   20) TYPE(SEAFLUX_t), INTENT(INOUT) :: S
(   21) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   22) TYPE(WATFLUX_t), INTENT(INOUT) :: W
(   23) TYPE(TEB_MODEL_t),        INTENT(INOUT) :: TM
(   24) TYPE(TEB_GARDEN_MODEL_t), INTENT(INOUT) :: GDM
(   25) TYPE(TEB_GREENROOF_MODEL_t), INTENT(INOUT) :: GRM
(   26) CHARACTER(LEN=6),        INTENT(IN)  :: HPROGRAM
(   27) INTEGER,                 INTENT(IN)  :: KI      ! number of points
(   28) INTEGER,                 INTENT(IN)  :: KSW     ! number of bands
(   29) REAL, DIMENSION(KI),      INTENT(IN) :: PZENITH
(   30) REAL, DIMENSION(KSW),     INTENT(IN) :: PSW_BANDS ! mean wavelength of each shortwave band (m)






NVFORTRAN (Version     23.1)          02/24/2023  13:57:04      page 3

(   31) REAL, DIMENSION(KI),      INTENT(IN) :: PLAND_WTD     ! Land water table depth (m)
(   32) REAL, DIMENSION(KI),      INTENT(IN) :: PLAND_FWTD    ! Land grid-cell fraction of water table rise (-)
(   33) REAL, DIMENSION(KI),      INTENT(IN) :: PLAND_FFLOOD  ! Land Floodplains fraction (-)
(   34) REAL, DIMENSION(KI),      INTENT(IN) :: PLAND_PIFLOOD ! Land Potential flood infiltration (kg/m2)
(   35) REAL, DIMENSION(KI),      INTENT(IN) :: PSEA_SST ! Sea surface temperature (K)
(   36) REAL, DIMENSION(KI),      INTENT(IN) :: PSEA_UCU ! Sea u-current stress (Pa)
(   37) REAL, DIMENSION(KI),      INTENT(IN) :: PSEA_VCU ! Sea v-current stress (Pa)
(   38) REAL, DIMENSION(KI),      INTENT(IN) :: PSEAICE_SIT ! Sea-ice Temperature (K)
(   39) REAL, DIMENSION(KI),      INTENT(IN) :: PSEAICE_CVR ! Sea-ice cover (-)
(   40) REAL, DIMENSION(KI),      INTENT(IN) :: PSEAICE_ALB ! Sea-ice albedo (-)
(   41) REAL, DIMENSION(KI),     INTENT(OUT) :: PTSRAD   ! Total radiative temperature see by the atmosphere
(   42) REAL, DIMENSION(KI),     INTENT(OUT) :: PTSURF   ! Total surface temperature see by the atmosphere
(   43) REAL, DIMENSION(KI),     INTENT(OUT) :: PEMIS    ! Total emissivity see by the atmosphere
(   44) REAL, DIMENSION(KI,KSW), INTENT(OUT) :: PDIR_ALB ! Total direct albedo see by the atmosphere
(   45) REAL, DIMENSION(KI,KSW), INTENT(OUT) :: PSCA_ALB ! Total diffus albedo see by the atmosphere
(   46) END SUBROUTINE PUT_SFXCPL_n
(   47) 
(   48) END INTERFACE
(   49) END MODULE MODI_PUT_SFXCPL_n 













































NVFORTRAN (Version     23.1)          02/24/2023  13:57:04      page 4

(    1) # 1 "modi_put_sfxcpln.F90"
(    1) !depfile:put_sfxcpln.F90
(    2) MODULE MODI_PUT_SFXCPL_n 
(    3) INTERFACE
(    4) SUBROUTINE PUT_SFXCPL_n (F, IM, S, U, W, TM, GDM, GRM, &
(    5)                          HPROGRAM,KI,KSW,PSW_BANDS,PZENITH, &
(    6)                         PLAND_WTD,PLAND_FWTD,PLAND_FFLOOD, &
(    7)                         PLAND_PIFLOOD,PSEA_SST,PSEA_UCU,   &
(    8)                         PSEA_VCU,PSEAICE_SIT,PSEAICE_CVR,  &
(    9)                         PSEAICE_ALB,PTSRAD,                &
(   10)                         PDIR_ALB,PSCA_ALB,PEMIS,PTSURF     )  
(   11) USE MODD_FLAKE_n, ONLY : FLAKE_t
(   12) USE MODD_SURFEX_n, ONLY : ISBA_MODEL_t, &
(   13)                           TEB_MODEL_t, &
(   14)                           TEB_GARDEN_MODEL_t,TEB_GREENROOF_MODEL_t
(   15) USE MODD_SEAFLUX_n, ONLY : SEAFLUX_t
(   16) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   17) USE MODD_WATFLUX_n, ONLY : WATFLUX_t
(   18) TYPE(FLAKE_t), INTENT(INOUT) :: F
(   19) TYPE(ISBA_MODEL_t), INTENT(INOUT) :: IM
(   20) TYPE(SEAFLUX_t), INTENT(INOUT) :: S
(   21) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   22) TYPE(WATFLUX_t), INTENT(INOUT) :: W
(   23) TYPE(TEB_MODEL_t),        INTENT(INOUT) :: TM
(   24) TYPE(TEB_GARDEN_MODEL_t), INTENT(INOUT) :: GDM
(   25) TYPE(TEB_GREENROOF_MODEL_t), INTENT(INOUT) :: GRM
(   26) CHARACTER(LEN=6),        INTENT(IN)  :: HPROGRAM
(   27) INTEGER,                 INTENT(IN)  :: KI      ! number of points
(   28) INTEGER,                 INTENT(IN)  :: KSW     ! number of bands
(   29) REAL, DIMENSION(KI),      INTENT(IN) :: PZENITH
(   30) REAL, DIMENSION(KSW),     INTENT(IN) :: PSW_BANDS ! mean wavelength of each shortwave band (m)
(   31) REAL, DIMENSION(KI),      INTENT(IN) :: PLAND_WTD     ! Land water table depth (m)
(   32) REAL, DIMENSION(KI),      INTENT(IN) :: PLAND_FWTD    ! Land grid-cell fraction of water table rise (-)
(   33) REAL, DIMENSION(KI),      INTENT(IN) :: PLAND_FFLOOD  ! Land Floodplains fraction (-)
(   34) REAL, DIMENSION(KI),      INTENT(IN) :: PLAND_PIFLOOD ! Land Potential flood infiltration (kg/m2)
(   35) REAL, DIMENSION(KI),      INTENT(IN) :: PSEA_SST ! Sea surface temperature (K)
(   36) REAL, DIMENSION(KI),      INTENT(IN) :: PSEA_UCU ! Sea u-current stress (Pa)
(   37) REAL, DIMENSION(KI),      INTENT(IN) :: PSEA_VCU ! Sea v-current stress (Pa)
(   38) REAL, DIMENSION(KI),      INTENT(IN) :: PSEAICE_SIT ! Sea-ice Temperature (K)
(   39) REAL, DIMENSION(KI),      INTENT(IN) :: PSEAICE_CVR ! Sea-ice cover (-)
(   40) REAL, DIMENSION(KI),      INTENT(IN) :: PSEAICE_ALB ! Sea-ice albedo (-)
(   41) REAL, DIMENSION(KI),     INTENT(OUT) :: PTSRAD   ! Total radiative temperature see by the atmosphere
(   42) REAL, DIMENSION(KI),     INTENT(OUT) :: PTSURF   ! Total surface temperature see by the atmosphere
(   43) REAL, DIMENSION(KI),     INTENT(OUT) :: PEMIS    ! Total emissivity see by the atmosphere
(   44) REAL, DIMENSION(KI,KSW), INTENT(OUT) :: PDIR_ALB ! Total direct albedo see by the atmosphere
(   45) REAL, DIMENSION(KI,KSW), INTENT(OUT) :: PSCA_ALB ! Total diffus albedo see by the atmosphere
(   46) END SUBROUTINE PUT_SFXCPL_n
(   47) # 48 "modi_put_sfxcpln.F90"
(   48) END INTERFACE
(   49) END MODULE MODI_PUT_SFXCPL_n 
