


NVFORTRAN (Version     23.1)          02/24/2023  13:55:31      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:55:31      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_read_pgd_isban.F90

(    1) !depfile:read_pgd_isban.F90
(    2) MODULE MODI_READ_PGD_ISBA_n 
(    3) INTERFACE
(    4)       SUBROUTINE READ_PGD_ISBA_n (CHI, DTCO, DTV, DTZ, GB, IG, ISS, IO, S, K, &
(    5)                                   UG, U, USS, GCP, SV, HPROGRAM, OLAND_USE, TPDATE_END)
(    6) USE MODD_CH_ISBA_n, ONLY : CH_ISBA_t
(    7) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(    8) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(    9) USE MODD_DATA_TSZ0_n, ONLY : DATA_TSZ0_t
(   10) USE MODD_GR_BIOG_n, ONLY : GR_BIOG_t
(   11) USE MODD_SFX_GRID_n, ONLY : GRID_t
(   12) USE MODD_SSO_n, ONLY : SSO_t
(   13) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   14) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t
(   15) USE MODD_SURF_ATM_GRID_n, ONLY : SURF_ATM_GRID_t
(   16) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   17) USE MODD_SSO_n, ONLY : SSO_t
(   18) USE MODD_GRID_CONF_PROJ_n, ONLY : GRID_CONF_PROJ_t
(   19) USE MODD_SV_n, ONLY : SV_t
(   20) USE MODD_TYPE_DATE_SURF
(   21) TYPE(CH_ISBA_t), INTENT(INOUT) :: CHI
(   22) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   23) TYPE(DATA_ISBA_t), INTENT(INOUT) :: DTV
(   24) TYPE(DATA_TSZ0_t), INTENT(INOUT) :: DTZ
(   25) TYPE(GR_BIOG_t), INTENT(INOUT) :: GB
(   26) TYPE(GRID_t), INTENT(INOUT) :: IG
(   27) TYPE(SSO_t), INTENT(INOUT) :: ISS
(   28) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   29) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   30) TYPE(ISBA_K_t), INTENT(INOUT) :: K






NVFORTRAN (Version     23.1)          02/24/2023  13:55:31      page 3

(   31) TYPE(SURF_ATM_GRID_t), INTENT(INOUT) :: UG
(   32) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   33) TYPE(SSO_t), INTENT(INOUT) :: USS
(   34) TYPE(GRID_CONF_PROJ_t),INTENT(INOUT) :: GCP
(   35) TYPE(SV_t), INTENT(INOUT) :: SV
(   36) CHARACTER(LEN=6),  INTENT(IN)  :: HPROGRAM ! calling program
(   37) LOGICAL,           INTENT(IN)  :: OLAND_USE ! 
(   38) TYPE(DATE), INTENT(IN) :: TPDATE_END
(   39) END SUBROUTINE READ_PGD_ISBA_n
(   40) 
(   41) END INTERFACE
(   42) END MODULE MODI_READ_PGD_ISBA_n 




















































NVFORTRAN (Version     23.1)          02/24/2023  13:55:31      page 4

(    1) # 1 "modi_read_pgd_isban.F90"
(    1) !depfile:read_pgd_isban.F90
(    2) MODULE MODI_READ_PGD_ISBA_n 
(    3) INTERFACE
(    4)       SUBROUTINE READ_PGD_ISBA_n (CHI, DTCO, DTV, DTZ, GB, IG, ISS, IO, S, K, &
(    5)                                   UG, U, USS, GCP, SV, HPROGRAM, OLAND_USE, TPDATE_END)
(    6) USE MODD_CH_ISBA_n, ONLY : CH_ISBA_t
(    7) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(    8) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(    9) USE MODD_DATA_TSZ0_n, ONLY : DATA_TSZ0_t
(   10) USE MODD_GR_BIOG_n, ONLY : GR_BIOG_t
(   11) USE MODD_SFX_GRID_n, ONLY : GRID_t
(   12) USE MODD_SSO_n, ONLY : SSO_t
(   13) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   14) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t
(   15) USE MODD_SURF_ATM_GRID_n, ONLY : SURF_ATM_GRID_t
(   16) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   17) USE MODD_SSO_n, ONLY : SSO_t
(   18) USE MODD_GRID_CONF_PROJ_n, ONLY : GRID_CONF_PROJ_t
(   19) USE MODD_SV_n, ONLY : SV_t
(   20) USE MODD_TYPE_DATE_SURF
(   21) TYPE(CH_ISBA_t), INTENT(INOUT) :: CHI
(   22) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   23) TYPE(DATA_ISBA_t), INTENT(INOUT) :: DTV
(   24) TYPE(DATA_TSZ0_t), INTENT(INOUT) :: DTZ
(   25) TYPE(GR_BIOG_t), INTENT(INOUT) :: GB
(   26) TYPE(GRID_t), INTENT(INOUT) :: IG
(   27) TYPE(SSO_t), INTENT(INOUT) :: ISS
(   28) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   29) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   30) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   31) TYPE(SURF_ATM_GRID_t), INTENT(INOUT) :: UG
(   32) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   33) TYPE(SSO_t), INTENT(INOUT) :: USS
(   34) TYPE(GRID_CONF_PROJ_t),INTENT(INOUT) :: GCP
(   35) TYPE(SV_t), INTENT(INOUT) :: SV
(   36) CHARACTER(LEN=6),  INTENT(IN)  :: HPROGRAM ! calling program
(   37) LOGICAL,           INTENT(IN)  :: OLAND_USE ! 
(   38) TYPE(DATE), INTENT(IN) :: TPDATE_END
(   39) END SUBROUTINE READ_PGD_ISBA_n
(   40) # 41 "modi_read_pgd_isban.F90"
(   41) END INTERFACE
(   42) END MODULE MODI_READ_PGD_ISBA_n 
