


NVFORTRAN (Version     23.1)          02/24/2023  13:32:17      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:32:17      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_read_nam_pgd_cover.F90

(    1) !depfile:read_nam_pgd_cover.F90
(    2) MODULE MODI_READ_NAM_PGD_COVER
(    3) INTERFACE
(    4)       SUBROUTINE READ_NAM_PGD_COVER(HPROGRAM, HCOVER, HFILETYPE, PUNIF_COVER,  &
(    5)                                     PRM_COVER, PRM_COAST, PRM_LAKE, ORM_RIVER, &
(    6)                                     PRM_SEA, OORCA_GRID, PLAT_ANT, OIMP_COVER )  
(    7) CHARACTER(LEN=6),    INTENT(IN)    :: HPROGRAM    ! Type of program
(    8) CHARACTER(LEN=28),   INTENT(OUT)   :: HCOVER      ! file name for cover types
(    9) CHARACTER(LEN=6),    INTENT(OUT)   :: HFILETYPE   ! data file type
(   10) REAL, DIMENSION(:),  INTENT(OUT)   :: PUNIF_COVER ! value of each cover (cover will be uniform on the horizontal)
(   11) REAL,                INTENT(OUT)   :: PRM_COVER   ! limit of coverage under which the cover is removed. Default is 1.E-6
(   12) REAL,                INTENT(OUT)   :: PRM_COAST   ! limit of coast coverage
(   13) REAL,                INTENT(OUT)   :: PRM_LAKE    ! limit of inland lake coverage                                       
(   14) LOGICAL,             INTENT(OUT)   :: ORM_RIVER   ! delete river coverage                                       
(   15) REAL,                INTENT(OUT)   :: PRM_SEA     ! limit of sea coverage
(   16) LOGICAL,             INTENT(OUT)   :: OORCA_GRID  ! flag to compatibility between Surfex and Orca grid 
(   17) REAL,                INTENT(OUT)   :: PLAT_ANT    ! Lattitude limit from Orca grid (Antartic)
(   18) LOGICAL,             INTENT(OUT)   :: OIMP_COVER  ! Imposed values for Cover from another PGD file
(   19) END SUBROUTINE READ_NAM_PGD_COVER
(   20) 
(   21) END INTERFACE
(   22) END MODULE MODI_READ_NAM_PGD_COVER














NVFORTRAN (Version     23.1)          02/24/2023  13:32:17      page 3

(    1) # 1 "modi_read_nam_pgd_cover.F90"
(    1) !depfile:read_nam_pgd_cover.F90
(    2) MODULE MODI_READ_NAM_PGD_COVER
(    3) INTERFACE
(    4)       SUBROUTINE READ_NAM_PGD_COVER(HPROGRAM, HCOVER, HFILETYPE, PUNIF_COVER,  &
(    5)                                     PRM_COVER, PRM_COAST, PRM_LAKE, ORM_RIVER, &
(    6)                                     PRM_SEA, OORCA_GRID, PLAT_ANT, OIMP_COVER )  
(    7) CHARACTER(LEN=6),    INTENT(IN)    :: HPROGRAM    ! Type of program
(    8) CHARACTER(LEN=28),   INTENT(OUT)   :: HCOVER      ! file name for cover types
(    9) CHARACTER(LEN=6),    INTENT(OUT)   :: HFILETYPE   ! data file type
(   10) REAL, DIMENSION(:),  INTENT(OUT)   :: PUNIF_COVER ! value of each cover (cover will be uniform on the horizontal)
(   11) REAL,                INTENT(OUT)   :: PRM_COVER   ! limit of coverage under which the cover is removed. Default is 1.E-6
(   12) REAL,                INTENT(OUT)   :: PRM_COAST   ! limit of coast coverage
(   13) REAL,                INTENT(OUT)   :: PRM_LAKE    ! limit of inland lake coverage                                       
(   14) LOGICAL,             INTENT(OUT)   :: ORM_RIVER   ! delete river coverage                                       
(   15) REAL,                INTENT(OUT)   :: PRM_SEA     ! limit of sea coverage
(   16) LOGICAL,             INTENT(OUT)   :: OORCA_GRID  ! flag to compatibility between Surfex and Orca grid 
(   17) REAL,                INTENT(OUT)   :: PLAT_ANT    ! Lattitude limit from Orca grid (Antartic)
(   18) LOGICAL,             INTENT(OUT)   :: OIMP_COVER  ! Imposed values for Cover from another PGD file
(   19) END SUBROUTINE READ_NAM_PGD_COVER
(   20) # 21 "modi_read_nam_pgd_cover.F90"
(   21) END INTERFACE
(   22) END MODULE MODI_READ_NAM_PGD_COVER
