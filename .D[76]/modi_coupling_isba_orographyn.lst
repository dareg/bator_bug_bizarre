


NVFORTRAN (Version     23.1)          02/24/2023  13:58:07      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:58:07      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_coupling_isba_orographyn.F90

(    1) !depfile:coupling_isba_orographyn.F90
(    2) MODULE MODI_COUPLING_ISBA_OROGRAPHY_n 
(    3) INTERFACE
(    4) SUBROUTINE COUPLING_ISBA_OROGRAPHY_n (DTCO, UG, U, USS, SB, NAG, CHI, NCHI, DTV, ID, NGB, GB, &
(    5)                                       ISS, NISS, IG, NIG, IO, S, K, NK, NP, NPE, AT, NDST,    &
(    6)                                       SLT, HPROGRAM, HCOUPLING, PTSTEP,                       &
(    7)                                       KYEAR, KMONTH, KDAY, PTIME, KI, KSV, KSW, PTSUN,        &
(    8)                                       PZENITH, PZENITH2, PAZIM, PZREF, PUREF, PZS, PU, PV,    &
(    9)                                       PQA, PTA, PRHOA, PSV, PCO2,PIMPWET,PIMPDRY, HSV, PRAIN, &
(   10)                                       PSNOW, PLW,     &
(   11)                                       PDIR_SW, PSCA_SW, PSW_BANDS, PPS, PPA, PSFTQ, PSFTH,    &
(   12)                                       PSFTS, PSFCO2, PSFU, PSFV, PTRAD, PDIR_ALB, PSCA_ALB,   &
(   13)                                       PEMIS, PTSURF, PZ0, PZ0H, PQSURF, PPEW_A_COEF,          &
(   14)                                       PPEW_B_COEF, PPET_A_COEF, PPEQ_A_COEF, PPET_B_COEF,     &
(   15)                                       PPEQ_B_COEF, HTEST   )  
(   16) USE MODD_AGRI_n, ONLY : AGRI_NP_t
(   17) USE MODD_CH_ISBA_n, ONLY : CH_ISBA_t, CH_ISBA_NP_t
(   18) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   19) USE MODD_SURFEX_n, ONLY : ISBA_DIAG_t
(   20) USE MODD_GR_BIOG_n, ONLY : GR_BIOG_t, GR_BIOG_NP_t
(   21) USE MODD_SSO_n, ONLY : SSO_t, SSO_NP_t
(   22) USE MODD_SFX_GRID_n, ONLY : GRID_t, GRID_NP_t
(   23) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   24) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t, ISBA_NK_t, ISBA_NP_t, ISBA_NPE_t
(   25) USE MODD_PREP_SNOW, ONLY : NIMPUR
(   26) USE MODD_DST_n, ONLY : DST_NP_t
(   27) USE MODD_CANOPY_n, ONLY : CANOPY_t
(   28) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(   29) USE MODD_SURF_ATM_GRID_n, ONLY : SURF_ATM_GRID_t
(   30) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t






NVFORTRAN (Version     23.1)          02/24/2023  13:58:07      page 3

(   31) USE MODD_SSO_n, ONLY : SSO_t, SSO_NP_t
(   32) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   33) USE MODD_SLT_n, ONLY : SLT_t
(   34) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   35) TYPE(AGRI_NP_t), INTENT(INOUT) :: NAG
(   36) TYPE(CH_ISBA_t), INTENT(INOUT) :: CHI
(   37) TYPE(CH_ISBA_NP_t), INTENT(INOUT) :: NCHI
(   38) TYPE(DATA_ISBA_t), INTENT(INOUT) :: DTV
(   39) TYPE(ISBA_DIAG_t), INTENT(INOUT) :: ID
(   40) TYPE(GR_BIOG_NP_t), INTENT(INOUT) :: NGB
(   41) TYPE(GR_BIOG_t), INTENT(INOUT) :: GB
(   42) TYPE(SSO_t), INTENT(INOUT) :: ISS 
(   43) TYPE(SSO_NP_t), INTENT(INOUT) :: NISS
(   44) TYPE(GRID_t), INTENT(INOUT) :: IG
(   45) TYPE(GRID_NP_t), INTENT(INOUT) :: NIG
(   46) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   47) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   48) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   49) TYPE(ISBA_NK_t), INTENT(INOUT) :: NK
(   50) TYPE(ISBA_NP_t), INTENT(INOUT) :: NP
(   51) TYPE(ISBA_NPE_t), INTENT(INOUT) ::NPE
(   52) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   53) TYPE(DST_NP_t), INTENT(INOUT) :: NDST
(   54) TYPE(CANOPY_t), INTENT(INOUT) :: SB
(   55) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   56) TYPE(SURF_ATM_GRID_t), INTENT(INOUT) :: UG
(   57) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   58) TYPE(SSO_t), INTENT(INOUT) :: USS
(   59) TYPE(SLT_t), INTENT(INOUT) :: SLT
(   60)  CHARACTER(LEN=6),    INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   61)  CHARACTER(LEN=1),    INTENT(IN)  :: HCOUPLING ! type of coupling
(   62) INTEGER,             INTENT(IN)  :: KYEAR     ! current year (UTC)
(   63) INTEGER,             INTENT(IN)  :: KMONTH    ! current month (UTC)
(   64) INTEGER,             INTENT(IN)  :: KDAY      ! current day (UTC)
(   65) REAL,                INTENT(IN)  :: PTIME     ! current time since midnight (UTC, s)
(   66) INTEGER,             INTENT(IN)  :: KI        ! number of points
(   67) INTEGER,             INTENT(IN)  :: KSV       ! number of scalars
(   68) INTEGER,             INTENT(IN)  :: KSW       ! number of short-wave spectral bands
(   69) REAL, DIMENSION(KI), INTENT(IN)  :: PTSUN     ! solar time                    (s from midnight)
(   70) REAL,                INTENT(IN)  :: PTSTEP    ! atmospheric time-step                 (s)
(   71) REAL, DIMENSION(KI), INTENT(IN)  :: PZREF     ! height of T,q forcing                 (m)
(   72) REAL, DIMENSION(KI), INTENT(IN)  :: PUREF     ! height of wind forcing                (m)
(   73) REAL, DIMENSION(KI), INTENT(IN)  :: PTA       ! air temperature forcing               (K)
(   74) REAL, DIMENSION(KI), INTENT(IN)  :: PQA       ! air humidity forcing                  (kg/m3)
(   75) REAL, DIMENSION(KI), INTENT(IN)  :: PRHOA     ! air density                           (kg/m3)
(   76) REAL, DIMENSION(KI,KSV),INTENT(IN) :: PSV     ! scalar variables
(   77)  CHARACTER(LEN=6), DIMENSION(KSV),INTENT(IN):: HSV  ! name of all scalar variables
(   78) REAL, DIMENSION(KI), INTENT(IN)  :: PU        ! zonal wind                            (m/s)
(   79) REAL, DIMENSION(KI), INTENT(IN)  :: PV        ! meridian wind                         (m/s)
(   80) REAL, DIMENSION(KI,KSW),INTENT(IN) :: PDIR_SW ! direct  solar radiation (on horizontal surf.)
(   81) REAL, DIMENSION(KI,KSW),INTENT(IN) :: PSCA_SW ! diffuse solar radiation (on horizontal surf.)
(   82) REAL, DIMENSION(KSW),INTENT(IN)  :: PSW_BANDS ! mean wavelength of each shortwave band (m)
(   83) REAL, DIMENSION(KI), INTENT(IN)  :: PZENITH   ! zenithal angle at t  (radian from the vertical)
(   84) REAL, DIMENSION(KI), INTENT(IN)  :: PZENITH2  ! zenithal angle at t+1(radian from the vertical)
(   85) REAL, DIMENSION(KI), INTENT(IN)  :: PAZIM     ! azimuthal angle      (radian from North, clockwise)
(   86) REAL, DIMENSION(KI), INTENT(IN)  :: PLW       ! longwave radiation (on horizontal surf.)
(   87) REAL, DIMENSION(KI), INTENT(IN)  :: PPS       ! pressure at atmospheric model surface (Pa)
(   88) REAL, DIMENSION(KI), INTENT(IN)  :: PPA       ! pressure at forcing level             (Pa)






NVFORTRAN (Version     23.1)          02/24/2023  13:58:07      page 4

(   89) REAL, DIMENSION(KI), INTENT(IN)  :: PZS       ! atmospheric model orography           (m)
(   90) REAL, DIMENSION(KI), INTENT(IN)  :: PCO2      ! CO2 concentration in the air          (kg/m3)
(   91) REAL, DIMENSION(KI,NIMPUR), INTENT(IN) :: PIMPWET ! Wet impur deposition
(   92) REAL, DIMENSION(KI,NIMPUR), INTENT(IN) :: PIMPDRY ! Dry impur deposition
(   93) REAL, DIMENSION(KI), INTENT(IN)  :: PSNOW     ! snow precipitation                    (kg/m2/s)
(   94) REAL, DIMENSION(KI), INTENT(IN)  :: PRAIN     ! liquid precipitation                  (kg/m2/s)
(   95) REAL, DIMENSION(KI), INTENT(OUT) :: PSFTH     ! flux of heat                          (W/m2)
(   96) REAL, DIMENSION(KI), INTENT(OUT) :: PSFTQ     ! flux of water vapor                   (kg/m2/s)
(   97) REAL, DIMENSION(KI), INTENT(OUT) :: PSFU      ! zonal momentum flux                   (Pa)
(   98) REAL, DIMENSION(KI), INTENT(OUT) :: PSFV      ! meridian momentum flux                (Pa)
(   99) REAL, DIMENSION(KI), INTENT(OUT) :: PSFCO2    ! flux of CO2                           (m/s*kg_CO2/kg_air)
(  100) REAL, DIMENSION(KI,KSV),INTENT(OUT):: PSFTS   ! flux of scalar var.                   (kg/m2/s)
(  101) REAL, DIMENSION(KI), INTENT(OUT) :: PTRAD     ! radiative temperature                 (K)
(  102) REAL, DIMENSION(KI,KSW),INTENT(OUT):: PDIR_ALB! direct albedo for each spectral band  (-)
(  103) REAL, DIMENSION(KI,KSW),INTENT(OUT):: PSCA_ALB! diffuse albedo for each spectral band (-)
(  104) REAL, DIMENSION(KI), INTENT(OUT) :: PEMIS     ! emissivity                            (-)
(  105) REAL, DIMENSION(KI), INTENT(OUT) :: PTSURF    ! surface effective temperature         (K)
(  106) REAL, DIMENSION(KI), INTENT(OUT) :: PZ0       ! roughness length for momentum         (m)
(  107) REAL, DIMENSION(KI), INTENT(OUT) :: PZ0H      ! roughness length for heat             (m)
(  108) REAL, DIMENSION(KI), INTENT(OUT) :: PQSURF    ! specific humidity at surface          (kg/kg)
(  109) REAL, DIMENSION(KI), INTENT(IN) :: PPEW_A_COEF! implicit coefficients
(  110) REAL, DIMENSION(KI), INTENT(IN) :: PPEW_B_COEF! needed if HCOUPLING='I'
(  111) REAL, DIMENSION(KI), INTENT(IN) :: PPET_A_COEF
(  112) REAL, DIMENSION(KI), INTENT(IN) :: PPEQ_A_COEF
(  113) REAL, DIMENSION(KI), INTENT(IN) :: PPET_B_COEF
(  114) REAL, DIMENSION(KI), INTENT(IN) :: PPEQ_B_COEF
(  115)  CHARACTER(LEN=2),    INTENT(IN) :: HTEST ! must be equal to 'OK'
(  116) END SUBROUTINE COUPLING_ISBA_OROGRAPHY_n
(  117) 
(  118) END INTERFACE
(  119) END MODULE MODI_COUPLING_ISBA_OROGRAPHY_n 

































NVFORTRAN (Version     23.1)          02/24/2023  13:58:07      page 5

(    1) # 1 "modi_coupling_isba_orographyn.F90"
(    1) !depfile:coupling_isba_orographyn.F90
(    2) MODULE MODI_COUPLING_ISBA_OROGRAPHY_n 
(    3) INTERFACE
(    4) SUBROUTINE COUPLING_ISBA_OROGRAPHY_n (DTCO, UG, U, USS, SB, NAG, CHI, NCHI, DTV, ID, NGB, GB, &
(    5)                                       ISS, NISS, IG, NIG, IO, S, K, NK, NP, NPE, AT, NDST,    &
(    6)                                       SLT, HPROGRAM, HCOUPLING, PTSTEP,                       &
(    7)                                       KYEAR, KMONTH, KDAY, PTIME, KI, KSV, KSW, PTSUN,        &
(    8)                                       PZENITH, PZENITH2, PAZIM, PZREF, PUREF, PZS, PU, PV,    &
(    9)                                       PQA, PTA, PRHOA, PSV, PCO2,PIMPWET,PIMPDRY, HSV, PRAIN, &
(   10)                                       PSNOW, PLW,     &
(   11)                                       PDIR_SW, PSCA_SW, PSW_BANDS, PPS, PPA, PSFTQ, PSFTH,    &
(   12)                                       PSFTS, PSFCO2, PSFU, PSFV, PTRAD, PDIR_ALB, PSCA_ALB,   &
(   13)                                       PEMIS, PTSURF, PZ0, PZ0H, PQSURF, PPEW_A_COEF,          &
(   14)                                       PPEW_B_COEF, PPET_A_COEF, PPEQ_A_COEF, PPET_B_COEF,     &
(   15)                                       PPEQ_B_COEF, HTEST   )  
(   16) USE MODD_AGRI_n, ONLY : AGRI_NP_t
(   17) USE MODD_CH_ISBA_n, ONLY : CH_ISBA_t, CH_ISBA_NP_t
(   18) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   19) USE MODD_SURFEX_n, ONLY : ISBA_DIAG_t
(   20) USE MODD_GR_BIOG_n, ONLY : GR_BIOG_t, GR_BIOG_NP_t
(   21) USE MODD_SSO_n, ONLY : SSO_t, SSO_NP_t
(   22) USE MODD_SFX_GRID_n, ONLY : GRID_t, GRID_NP_t
(   23) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   24) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t, ISBA_NK_t, ISBA_NP_t, ISBA_NPE_t
(   25) USE MODD_PREP_SNOW, ONLY : NIMPUR
(   26) USE MODD_DST_n, ONLY : DST_NP_t
(   27) USE MODD_CANOPY_n, ONLY : CANOPY_t
(   28) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(   29) USE MODD_SURF_ATM_GRID_n, ONLY : SURF_ATM_GRID_t
(   30) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   31) USE MODD_SSO_n, ONLY : SSO_t, SSO_NP_t
(   32) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   33) USE MODD_SLT_n, ONLY : SLT_t
(   34) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   35) TYPE(AGRI_NP_t), INTENT(INOUT) :: NAG
(   36) TYPE(CH_ISBA_t), INTENT(INOUT) :: CHI
(   37) TYPE(CH_ISBA_NP_t), INTENT(INOUT) :: NCHI
(   38) TYPE(DATA_ISBA_t), INTENT(INOUT) :: DTV
(   39) TYPE(ISBA_DIAG_t), INTENT(INOUT) :: ID
(   40) TYPE(GR_BIOG_NP_t), INTENT(INOUT) :: NGB
(   41) TYPE(GR_BIOG_t), INTENT(INOUT) :: GB
(   42) TYPE(SSO_t), INTENT(INOUT) :: ISS 
(   43) TYPE(SSO_NP_t), INTENT(INOUT) :: NISS
(   44) TYPE(GRID_t), INTENT(INOUT) :: IG
(   45) TYPE(GRID_NP_t), INTENT(INOUT) :: NIG
(   46) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   47) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   48) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   49) TYPE(ISBA_NK_t), INTENT(INOUT) :: NK
(   50) TYPE(ISBA_NP_t), INTENT(INOUT) :: NP
(   51) TYPE(ISBA_NPE_t), INTENT(INOUT) ::NPE
(   52) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   53) TYPE(DST_NP_t), INTENT(INOUT) :: NDST
(   54) TYPE(CANOPY_t), INTENT(INOUT) :: SB
(   55) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   56) TYPE(SURF_ATM_GRID_t), INTENT(INOUT) :: UG
(   57) TYPE(SURF_ATM_t), INTENT(INOUT) :: U






NVFORTRAN (Version     23.1)          02/24/2023  13:58:07      page 6

(   58) TYPE(SSO_t), INTENT(INOUT) :: USS
(   59) TYPE(SLT_t), INTENT(INOUT) :: SLT
(   60)  CHARACTER(LEN=6),    INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   61)  CHARACTER(LEN=1),    INTENT(IN)  :: HCOUPLING ! type of coupling
(   62) INTEGER,             INTENT(IN)  :: KYEAR     ! current year (UTC)
(   63) INTEGER,             INTENT(IN)  :: KMONTH    ! current month (UTC)
(   64) INTEGER,             INTENT(IN)  :: KDAY      ! current day (UTC)
(   65) REAL,                INTENT(IN)  :: PTIME     ! current time since midnight (UTC, s)
(   66) INTEGER,             INTENT(IN)  :: KI        ! number of points
(   67) INTEGER,             INTENT(IN)  :: KSV       ! number of scalars
(   68) INTEGER,             INTENT(IN)  :: KSW       ! number of short-wave spectral bands
(   69) REAL, DIMENSION(KI), INTENT(IN)  :: PTSUN     ! solar time                    (s from midnight)
(   70) REAL,                INTENT(IN)  :: PTSTEP    ! atmospheric time-step                 (s)
(   71) REAL, DIMENSION(KI), INTENT(IN)  :: PZREF     ! height of T,q forcing                 (m)
(   72) REAL, DIMENSION(KI), INTENT(IN)  :: PUREF     ! height of wind forcing                (m)
(   73) REAL, DIMENSION(KI), INTENT(IN)  :: PTA       ! air temperature forcing               (K)
(   74) REAL, DIMENSION(KI), INTENT(IN)  :: PQA       ! air humidity forcing                  (kg/m3)
(   75) REAL, DIMENSION(KI), INTENT(IN)  :: PRHOA     ! air density                           (kg/m3)
(   76) REAL, DIMENSION(KI,KSV),INTENT(IN) :: PSV     ! scalar variables
(   77)  CHARACTER(LEN=6), DIMENSION(KSV),INTENT(IN):: HSV  ! name of all scalar variables
(   78) REAL, DIMENSION(KI), INTENT(IN)  :: PU        ! zonal wind                            (m/s)
(   79) REAL, DIMENSION(KI), INTENT(IN)  :: PV        ! meridian wind                         (m/s)
(   80) REAL, DIMENSION(KI,KSW),INTENT(IN) :: PDIR_SW ! direct  solar radiation (on horizontal surf.)
(   81) REAL, DIMENSION(KI,KSW),INTENT(IN) :: PSCA_SW ! diffuse solar radiation (on horizontal surf.)
(   82) REAL, DIMENSION(KSW),INTENT(IN)  :: PSW_BANDS ! mean wavelength of each shortwave band (m)
(   83) REAL, DIMENSION(KI), INTENT(IN)  :: PZENITH   ! zenithal angle at t  (radian from the vertical)
(   84) REAL, DIMENSION(KI), INTENT(IN)  :: PZENITH2  ! zenithal angle at t+1(radian from the vertical)
(   85) REAL, DIMENSION(KI), INTENT(IN)  :: PAZIM     ! azimuthal angle      (radian from North, clockwise)
(   86) REAL, DIMENSION(KI), INTENT(IN)  :: PLW       ! longwave radiation (on horizontal surf.)
(   87) REAL, DIMENSION(KI), INTENT(IN)  :: PPS       ! pressure at atmospheric model surface (Pa)
(   88) REAL, DIMENSION(KI), INTENT(IN)  :: PPA       ! pressure at forcing level             (Pa)
(   89) REAL, DIMENSION(KI), INTENT(IN)  :: PZS       ! atmospheric model orography           (m)
(   90) REAL, DIMENSION(KI), INTENT(IN)  :: PCO2      ! CO2 concentration in the air          (kg/m3)
(   91) REAL, DIMENSION(KI,NIMPUR), INTENT(IN) :: PIMPWET ! Wet impur deposition
(   92) REAL, DIMENSION(KI,NIMPUR), INTENT(IN) :: PIMPDRY ! Dry impur deposition
(   93) REAL, DIMENSION(KI), INTENT(IN)  :: PSNOW     ! snow precipitation                    (kg/m2/s)
(   94) REAL, DIMENSION(KI), INTENT(IN)  :: PRAIN     ! liquid precipitation                  (kg/m2/s)
(   95) REAL, DIMENSION(KI), INTENT(OUT) :: PSFTH     ! flux of heat                          (W/m2)
(   96) REAL, DIMENSION(KI), INTENT(OUT) :: PSFTQ     ! flux of water vapor                   (kg/m2/s)
(   97) REAL, DIMENSION(KI), INTENT(OUT) :: PSFU      ! zonal momentum flux                   (Pa)
(   98) REAL, DIMENSION(KI), INTENT(OUT) :: PSFV      ! meridian momentum flux                (Pa)
(   99) REAL, DIMENSION(KI), INTENT(OUT) :: PSFCO2    ! flux of CO2                           (m/s*kg_CO2/kg_air)
(  100) REAL, DIMENSION(KI,KSV),INTENT(OUT):: PSFTS   ! flux of scalar var.                   (kg/m2/s)
(  101) REAL, DIMENSION(KI), INTENT(OUT) :: PTRAD     ! radiative temperature                 (K)
(  102) REAL, DIMENSION(KI,KSW),INTENT(OUT):: PDIR_ALB! direct albedo for each spectral band  (-)
(  103) REAL, DIMENSION(KI,KSW),INTENT(OUT):: PSCA_ALB! diffuse albedo for each spectral band (-)
(  104) REAL, DIMENSION(KI), INTENT(OUT) :: PEMIS     ! emissivity                            (-)
(  105) REAL, DIMENSION(KI), INTENT(OUT) :: PTSURF    ! surface effective temperature         (K)
(  106) REAL, DIMENSION(KI), INTENT(OUT) :: PZ0       ! roughness length for momentum         (m)
(  107) REAL, DIMENSION(KI), INTENT(OUT) :: PZ0H      ! roughness length for heat             (m)
(  108) REAL, DIMENSION(KI), INTENT(OUT) :: PQSURF    ! specific humidity at surface          (kg/kg)
(  109) REAL, DIMENSION(KI), INTENT(IN) :: PPEW_A_COEF! implicit coefficients
(  110) REAL, DIMENSION(KI), INTENT(IN) :: PPEW_B_COEF! needed if HCOUPLING='I'
(  111) REAL, DIMENSION(KI), INTENT(IN) :: PPET_A_COEF
(  112) REAL, DIMENSION(KI), INTENT(IN) :: PPEQ_A_COEF
(  113) REAL, DIMENSION(KI), INTENT(IN) :: PPET_B_COEF
(  114) REAL, DIMENSION(KI), INTENT(IN) :: PPEQ_B_COEF
(  115)  CHARACTER(LEN=2),    INTENT(IN) :: HTEST ! must be equal to 'OK'






NVFORTRAN (Version     23.1)          02/24/2023  13:58:07      page 7

(  116) END SUBROUTINE COUPLING_ISBA_OROGRAPHY_n
(  117) # 118 "modi_coupling_isba_orographyn.F90"
(  118) END INTERFACE
(  119) END MODULE MODI_COUPLING_ISBA_OROGRAPHY_n 
