


NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_teb.F90

(    1) !depfile:teb.F90
(    2) MODULE MODI_TEB 
(    3) INTERFACE
(    4)     SUBROUTINE TEB  (TOP, T, BOP, B, TIR, DMT, HIMPLICIT_WIND, PTSUN,                   &
(    5)                      PT_CANYON, PQ_CANYON, PU_CANYON, PT_LOWCAN, PQ_LOWCAN, PU_LOWCAN,  &
(    6)                      PZ_LOWCAN, PPEW_A_COEF, PPEW_B_COEF, PPEW_A_COEF_LOWCAN,           &
(    7)                      PPEW_B_COEF_LOWCAN, AT, PPS, PPA, PEXNS, PEXNA, PTA, PQA, PRHOA,   &
(    8)                      PLW_RAD, PRR, PSR, PZREF, PUREF, PVMOD, PH_TRAFFIC, PLE_TRAFFIC,   &
(    9)                      PTSTEP, PDF_RF, PDN_RF, PDF_RD, PDN_RD, PQSAT_RF, PQSAT_RD,        &
(   10)                      PDELT_RF, PDELT_RD, PTS_GARDEN, PLEW_RF, PUW_GR, PLEW_RD, PLE_WL_A,&
(   11)                      PLE_WL_B, PRNSN_RF, PHSN_RF, PLESN_RF, PGSN_RF, PMELT_RF, PRN_GR,  &
(   12)                      PH_GR, PLE_GR, PGFLUX_GR, PDRAIN_GR, PRUNOFF_GR, PRNSN_RD,         &
(   13)                      PHSN_RD, PLESN_RD, PGSN_RD, PMELT_RD, PUW_RD, PUW_RF, PDUWDU_RD,   &
(   14)                      PDUWDU_RF, PUSTAR_TWN, PCD, PCDN, PCH_TWN, PRI_TWN, PRESA_TWN,     &
(   15)                      PAC_RF, PAC_RD, PAC_WL, PAC_TOP, PAC_GARDEN, PAC_RF_WAT,           &
(   16)                      PAC_RD_WAT, PLW_WA_TO_WB, PLW_WA_TO_R, PLW_WB_TO_R, PLW_WA_TO_NR,  &
(   17)                      PLW_WB_TO_NR, PLW_R_TO_WA, PLW_R_TO_WB, PLW_G_TO_WA, PLW_G_TO_WB,  &
(   18)                      PLW_S_TO_WA, PLW_S_TO_WB, PLW_S_TO_R, PLW_S_TO_NR, PLW_NR_TO_WA,   &
(   19)                      PLW_NR_TO_WB, PLW_NR_TO_WIN, PLW_WA_TO_WIN, PLW_WB_TO_WIN,         &
(   20)                      PLW_G_TO_WIN, PLW_R_TO_WIN, PLW_S_TO_WIN, PLW_WIN_TO_WA,           &
(   21)                      PLW_WIN_TO_WB, PLW_WIN_TO_R, PLW_WIN_TO_NR, KDAY, PEMIT_LW_FAC,    &
(   22)                      PEMIT_LW_RD, PT_RAD_IND, PHU_BLD, PTIME, PE_SHADING )
(   23) USE MODD_TEB_OPTION_n,    ONLY : TEB_OPTIONS_t
(   24) USE MODD_TEB_n,           ONLY : TEB_t
(   25) USE MODD_BEM_OPTION_n,    ONLY : BEM_OPTIONS_t
(   26) USE MODD_BEM_n,           ONLY : BEM_t
(   27) USE MODD_TEB_IRRIG_n,     ONLY : TEB_IRRIG_t
(   28) USE MODD_DIAG_MISC_TEB_n, ONLY : DIAG_MISC_TEB_t
(   29) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   30) TYPE(TEB_OPTIONS_t), INTENT(INOUT) :: TOP






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 3

(   31) TYPE(TEB_t), INTENT(INOUT) :: T
(   32) TYPE(BEM_OPTIONS_t), INTENT(INOUT) :: BOP
(   33) TYPE(BEM_t), INTENT(INOUT) :: B
(   34) TYPE(TEB_IRRIG_t), INTENT(INOUT) :: TIR
(   35) TYPE(DIAG_MISC_TEB_t), INTENT(INOUT) :: DMT
(   36)  CHARACTER(LEN=*),     INTENT(IN)  :: HIMPLICIT_WIND   ! wind implicitation option
(   37) REAL, DIMENSION(:), INTENT(IN)    :: PTSUN              ! solar time   (s from midnight)
(   38) REAL, DIMENSION(:), INTENT(INOUT) :: PT_CANYON     ! canyon air temperature
(   39) REAL, DIMENSION(:), INTENT(INOUT) :: PQ_CANYON     ! canyon air specific humidity
(   40) REAL, DIMENSION(:), INTENT(IN)    :: PU_CANYON     ! canyon hor. wind
(   41) REAL, DIMENSION(:), INTENT(IN)    :: PU_LOWCAN     ! wind near the road
(   42) REAL, DIMENSION(:), INTENT(IN)    :: PT_LOWCAN     ! temp. near the road
(   43) REAL, DIMENSION(:), INTENT(IN)    :: PQ_LOWCAN     ! hum. near the road
(   44) REAL, DIMENSION(:), INTENT(IN)    :: PZ_LOWCAN     ! height of atm. var. near the road
(   45) REAL, DIMENSION(:), INTENT(IN)    :: PPEW_A_COEF   ! implicit coefficients
(   46) REAL, DIMENSION(:), INTENT(IN)    :: PPEW_B_COEF   ! for wind coupling
(   47) REAL, DIMENSION(:), INTENT(IN)    :: PPEW_A_COEF_LOWCAN ! implicit coefficients for wind coupling
(   48) REAL, DIMENSION(:), INTENT(IN)    :: PPEW_B_COEF_LOWCAN ! between low canyon wind and road
(   49) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT            ! atmospheric turbulence parameters
(   50) REAL, DIMENSION(:), INTENT(IN)    :: PPS           ! pressure at the surface
(   51) REAL, DIMENSION(:), INTENT(IN)    :: PPA           ! pressure at the first atmospheric level
(   52) REAL, DIMENSION(:), INTENT(IN)    :: PEXNS         ! surface exner function
(   53) REAL, DIMENSION(:), INTENT(IN)    :: PTA           ! temperature at the lowest level
(   54) REAL, DIMENSION(:), INTENT(IN)    :: PQA           ! specific humidity
(   55) REAL, DIMENSION(:), INTENT(IN)    :: PVMOD         ! module of the horizontal wind
(   56) REAL, DIMENSION(:), INTENT(IN)    :: PH_TRAFFIC    ! anthropogenic sensible
(   57) REAL, DIMENSION(:), INTENT(IN)    :: PLE_TRAFFIC   ! anthropogenic latent
(   58) REAL, DIMENSION(:), INTENT(IN)    :: PEXNA         ! exner function
(   59) REAL, DIMENSION(:), INTENT(IN)    :: PRHOA         ! air density
(   60) REAL, DIMENSION(:), INTENT(IN)    :: PLW_RAD       ! atmospheric infrared radiation
(   61) REAL, DIMENSION(:), INTENT(IN)    :: PRR           ! rain rate
(   62) REAL, DIMENSION(:), INTENT(IN)    :: PSR           ! snow rate
(   63) REAL, DIMENSION(:), INTENT(IN)    :: PZREF         ! reference height of the first
(   64) REAL, DIMENSION(:), INTENT(IN)    :: PUREF         ! reference height of the first
(   65) REAL,               INTENT(IN)    :: PTSTEP        ! time step
(   66) REAL, DIMENSION(:), INTENT(INOUT) :: PDF_RF      ! snow-free    fraction on roofs
(   67) REAL, DIMENSION(:), INTENT(INOUT) :: PDN_RF      ! snow-covered fraction on roofs
(   68) REAL, DIMENSION(:), INTENT(INOUT) :: PDF_RD      ! snow-free    fraction on roads
(   69) REAL, DIMENSION(:), INTENT(INOUT) :: PDN_RD      ! snow-covered fraction on roads
(   70) REAL, DIMENSION(:), INTENT(OUT)   :: PQSAT_RF    ! hum at saturation over roof
(   71) REAL, DIMENSION(:), INTENT(OUT)   :: PQSAT_RD    ! hum at saturation over road
(   72) REAL, DIMENSION(:), INTENT(OUT)   :: PDELT_RF    ! water fraction on roof
(   73) REAL, DIMENSION(:), INTENT(OUT)   :: PDELT_RD    ! water fraction on road
(   74) REAL, DIMENSION(:), INTENT(IN)    :: PTS_GARDEN    ! GARDEN area surf temp.
(   75) REAL, DIMENSION(:), INTENT(OUT)   :: PLEW_RF    ! latent heat flux over roof (snow)
(   76) REAL, DIMENSION(:), INTENT(OUT)   :: PLEW_RD    ! latent heat flux over road (snow)
(   77) REAL, DIMENSION(:), INTENT(OUT)   :: PLE_WL_A   ! latent heat flux over wall
(   78) REAL, DIMENSION(:), INTENT(OUT)   :: PLE_WL_B   ! latent heat flux over wall
(   79) REAL, DIMENSION(:), INTENT(IN)    :: PUW_GR     ! Momentum flux for greenroofs
(   80) REAL, DIMENSION(:), INTENT(OUT)   :: PRNSN_RF ! net radiation over snow
(   81) REAL, DIMENSION(:), INTENT(OUT)   :: PHSN_RF  ! sensible heat flux over snow
(   82) REAL, DIMENSION(:), INTENT(OUT)   :: PLESN_RF ! latent heat flux over snow
(   83) REAL, DIMENSION(:), INTENT(OUT)   :: PGSN_RF  ! flux under the snow
(   84) REAL, DIMENSION(:), INTENT(OUT)   :: PMELT_RF   ! snow melt
(   85) REAL, DIMENSION(:), INTENT(OUT)   :: PRNSN_RD ! net radiation over snow
(   86) REAL, DIMENSION(:), INTENT(OUT)   :: PHSN_RD  ! sensible heat flux over snow
(   87) REAL, DIMENSION(:), INTENT(OUT)   :: PLESN_RD ! latent heat flux over snow
(   88) REAL, DIMENSION(:), INTENT(OUT)   :: PGSN_RD  ! flux under the snow






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 4

(   89) REAL, DIMENSION(:), INTENT(OUT)   :: PMELT_RD   ! snow melt
(   90) REAL, DIMENSION(:), INTENT(OUT)   :: PUW_RD     ! Momentum flux for roads
(   91) REAL, DIMENSION(:), INTENT(OUT)   :: PUW_RF     ! Momentum flux for roofs
(   92) REAL, DIMENSION(:), INTENT(OUT)   :: PDUWDU_RD  !
(   93) REAL, DIMENSION(:), INTENT(OUT)   :: PDUWDU_RF  !
(   94) REAL, DIMENSION(:), INTENT(OUT)   :: PUSTAR_TWN ! friciton velocity over town
(   95) REAL, DIMENSION(:), INTENT(IN)    :: PRN_GR     ! net radiation over greenroof
(   96) REAL, DIMENSION(:), INTENT(IN)    :: PH_GR      ! sensible heat flux over greenroof
(   97) REAL, DIMENSION(:), INTENT(IN)    :: PLE_GR     ! latent heat flux over greenroof
(   98) REAL, DIMENSION(:), INTENT(IN)    :: PGFLUX_GR  ! flux through the greenroof
(   99) REAL, DIMENSION(:), INTENT(IN)    :: PRUNOFF_GR ! runoff over green roofs
(  100) REAL, DIMENSION(:), INTENT(IN)    :: PDRAIN_GR  ! outlet drainage at base of green roofs
(  101) REAL, DIMENSION(:), INTENT(OUT)   :: PCD          ! town averaged drag coefficient
(  102) REAL, DIMENSION(:), INTENT(OUT)   :: PCDN         ! town averaged neutral drag coefficient
(  103) REAL, DIMENSION(:), INTENT(OUT)   :: PCH_TWN     ! town averaged heat transfer
(  104) REAL, DIMENSION(:), INTENT(OUT)   :: PRI_TWN      ! town averaged Richardson number
(  105) REAL, DIMENSION(:), INTENT(OUT)   :: PRESA_TWN    ! town aerodynamical resistance
(  106) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_RF      ! roof conductance
(  107) REAL, DIMENSION(:), INTENT(INOUT) :: PAC_RD      ! road conductance
(  108) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_WL      ! wall conductance
(  109) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_TOP       ! top conductance
(  110) REAL, DIMENSION(:), INTENT(IN)    :: PAC_GARDEN    ! garden conductance
(  111) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_RF_WAT  ! roof water conductance
(  112) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_RD_WAT  ! roof water conductance
(  113) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WA_TO_WB      ! LW contrib. wall A (orB) -> wall B (or A)
(  114) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WA_TO_R         ! LW contrib. wall       -> road
(  115) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WB_TO_R         ! LW contrib. wall       -> road
(  116) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WA_TO_NR        ! LW contrib. wall       -> road(snow)
(  117) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WB_TO_NR        ! LW contrib. wall       -> road(snow)
(  118) REAL, DIMENSION(:), INTENT(IN)    :: PLW_R_TO_WA         ! LW contrib. road       -> wall
(  119) REAL, DIMENSION(:), INTENT(IN)    :: PLW_R_TO_WB         ! LW contrib. road       -> wall
(  120) REAL, DIMENSION(:), INTENT(IN)    :: PLW_G_TO_WA         ! LW contrib. GARDEN     -> wall
(  121) REAL, DIMENSION(:), INTENT(IN)    :: PLW_G_TO_WB         ! LW contrib. GARDEN     -> wall
(  122) REAL, DIMENSION(:), INTENT(IN)    :: PLW_NR_TO_WA        ! LW contrib. road(snow) -> wall
(  123) REAL, DIMENSION(:), INTENT(IN)    :: PLW_NR_TO_WB        ! LW contrib. road(snow) -> wall
(  124) REAL, DIMENSION(:), INTENT(IN)    :: PLW_S_TO_WA         ! LW contrib. sky        -> wall
(  125) REAL, DIMENSION(:), INTENT(IN)    :: PLW_S_TO_WB         ! LW contrib. sky        -> wall
(  126) REAL, DIMENSION(:), INTENT(IN)    :: PLW_S_TO_R          ! LW contrib. sky        -> road
(  127) REAL, DIMENSION(:), INTENT(IN)    :: PLW_S_TO_NR         ! LW contrib. sky        -> road(snow)
(  128) INTEGER,            INTENT(IN)     :: KDAY         ! Simulation day
(  129) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WA_TO_WIN ! Radiative heat trasfer coeff wall-window 
(  130) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WB_TO_WIN ! Radiative heat trasfer coeff wall-window 
(  131) REAL, DIMENSION(:), INTENT(IN)   :: PLW_G_TO_WIN  ! Radiative heat trasfer coeff garden-window 
(  132) REAL, DIMENSION(:), INTENT(IN)   :: PLW_R_TO_WIN  ! Radiative heat trasfer coeff road-window 
(  133) REAL, DIMENSION(:), INTENT(IN)   :: PLW_S_TO_WIN ! Radiative heat trasfer coeff window-sky 
(  134) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WIN_TO_WA! Radiative heat trasfer coeff window-wall
(  135) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WIN_TO_WB! Radiative heat trasfer coeff window-wall
(  136) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WIN_TO_R ! Radiative heat trasfer coeff window-road 
(  137) REAL, DIMENSION(:), INTENT(IN)   :: PLW_NR_TO_WIN! Radiative heat trasfer coeff road(snow)-win 
(  138) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WIN_TO_NR! Radiative heat trasfer coeff win-road(snow) 
(  139) REAL, DIMENSION(:), INTENT(OUT) :: PEMIT_LW_RD ! LW fluxes emitted by road (W/m2 surf road)
(  140) REAL, DIMENSION(:), INTENT(OUT) :: PEMIT_LW_FAC  ! LW fluxes emitted by wall (W/m2 surf wall)
(  141) REAL, DIMENSION(:), INTENT(OUT) :: PT_RAD_IND    ! Indoor mean radiant temperature [K]
(  142) REAL, DIMENSION(:), INTENT(OUT) :: PHU_BLD       ! Indoor relative humidity 0 < (-) < 1
(  143) REAL,                INTENT(IN)  :: PTIME        ! current time since midnight (UTC, s)
(  144) REAL, DIMENSION(:), INTENT(IN)  :: PE_SHADING    !energy not ref., nor absorbed, nor
(  145) END SUBROUTINE TEB
(  146) 






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 5

(  147) END INTERFACE
(  148) END MODULE MODI_TEB 






























































NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 6

(    1) # 1 "modi_teb.F90"
(    1) !depfile:teb.F90
(    2) MODULE MODI_TEB 
(    3) INTERFACE
(    4)     SUBROUTINE TEB  (TOP, T, BOP, B, TIR, DMT, HIMPLICIT_WIND, PTSUN,                   &
(    5)                      PT_CANYON, PQ_CANYON, PU_CANYON, PT_LOWCAN, PQ_LOWCAN, PU_LOWCAN,  &
(    6)                      PZ_LOWCAN, PPEW_A_COEF, PPEW_B_COEF, PPEW_A_COEF_LOWCAN,           &
(    7)                      PPEW_B_COEF_LOWCAN, AT, PPS, PPA, PEXNS, PEXNA, PTA, PQA, PRHOA,   &
(    8)                      PLW_RAD, PRR, PSR, PZREF, PUREF, PVMOD, PH_TRAFFIC, PLE_TRAFFIC,   &
(    9)                      PTSTEP, PDF_RF, PDN_RF, PDF_RD, PDN_RD, PQSAT_RF, PQSAT_RD,        &
(   10)                      PDELT_RF, PDELT_RD, PTS_GARDEN, PLEW_RF, PUW_GR, PLEW_RD, PLE_WL_A,&
(   11)                      PLE_WL_B, PRNSN_RF, PHSN_RF, PLESN_RF, PGSN_RF, PMELT_RF, PRN_GR,  &
(   12)                      PH_GR, PLE_GR, PGFLUX_GR, PDRAIN_GR, PRUNOFF_GR, PRNSN_RD,         &
(   13)                      PHSN_RD, PLESN_RD, PGSN_RD, PMELT_RD, PUW_RD, PUW_RF, PDUWDU_RD,   &
(   14)                      PDUWDU_RF, PUSTAR_TWN, PCD, PCDN, PCH_TWN, PRI_TWN, PRESA_TWN,     &
(   15)                      PAC_RF, PAC_RD, PAC_WL, PAC_TOP, PAC_GARDEN, PAC_RF_WAT,           &
(   16)                      PAC_RD_WAT, PLW_WA_TO_WB, PLW_WA_TO_R, PLW_WB_TO_R, PLW_WA_TO_NR,  &
(   17)                      PLW_WB_TO_NR, PLW_R_TO_WA, PLW_R_TO_WB, PLW_G_TO_WA, PLW_G_TO_WB,  &
(   18)                      PLW_S_TO_WA, PLW_S_TO_WB, PLW_S_TO_R, PLW_S_TO_NR, PLW_NR_TO_WA,   &
(   19)                      PLW_NR_TO_WB, PLW_NR_TO_WIN, PLW_WA_TO_WIN, PLW_WB_TO_WIN,         &
(   20)                      PLW_G_TO_WIN, PLW_R_TO_WIN, PLW_S_TO_WIN, PLW_WIN_TO_WA,           &
(   21)                      PLW_WIN_TO_WB, PLW_WIN_TO_R, PLW_WIN_TO_NR, KDAY, PEMIT_LW_FAC,    &
(   22)                      PEMIT_LW_RD, PT_RAD_IND, PHU_BLD, PTIME, PE_SHADING )
(   23) USE MODD_TEB_OPTION_n,    ONLY : TEB_OPTIONS_t
(   24) USE MODD_TEB_n,           ONLY : TEB_t
(   25) USE MODD_BEM_OPTION_n,    ONLY : BEM_OPTIONS_t
(   26) USE MODD_BEM_n,           ONLY : BEM_t
(   27) USE MODD_TEB_IRRIG_n,     ONLY : TEB_IRRIG_t
(   28) USE MODD_DIAG_MISC_TEB_n, ONLY : DIAG_MISC_TEB_t
(   29) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   30) TYPE(TEB_OPTIONS_t), INTENT(INOUT) :: TOP
(   31) TYPE(TEB_t), INTENT(INOUT) :: T
(   32) TYPE(BEM_OPTIONS_t), INTENT(INOUT) :: BOP
(   33) TYPE(BEM_t), INTENT(INOUT) :: B
(   34) TYPE(TEB_IRRIG_t), INTENT(INOUT) :: TIR
(   35) TYPE(DIAG_MISC_TEB_t), INTENT(INOUT) :: DMT
(   36)  CHARACTER(LEN=*),     INTENT(IN)  :: HIMPLICIT_WIND   ! wind implicitation option
(   37) REAL, DIMENSION(:), INTENT(IN)    :: PTSUN              ! solar time   (s from midnight)
(   38) REAL, DIMENSION(:), INTENT(INOUT) :: PT_CANYON     ! canyon air temperature
(   39) REAL, DIMENSION(:), INTENT(INOUT) :: PQ_CANYON     ! canyon air specific humidity
(   40) REAL, DIMENSION(:), INTENT(IN)    :: PU_CANYON     ! canyon hor. wind
(   41) REAL, DIMENSION(:), INTENT(IN)    :: PU_LOWCAN     ! wind near the road
(   42) REAL, DIMENSION(:), INTENT(IN)    :: PT_LOWCAN     ! temp. near the road
(   43) REAL, DIMENSION(:), INTENT(IN)    :: PQ_LOWCAN     ! hum. near the road
(   44) REAL, DIMENSION(:), INTENT(IN)    :: PZ_LOWCAN     ! height of atm. var. near the road
(   45) REAL, DIMENSION(:), INTENT(IN)    :: PPEW_A_COEF   ! implicit coefficients
(   46) REAL, DIMENSION(:), INTENT(IN)    :: PPEW_B_COEF   ! for wind coupling
(   47) REAL, DIMENSION(:), INTENT(IN)    :: PPEW_A_COEF_LOWCAN ! implicit coefficients for wind coupling
(   48) REAL, DIMENSION(:), INTENT(IN)    :: PPEW_B_COEF_LOWCAN ! between low canyon wind and road
(   49) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT            ! atmospheric turbulence parameters
(   50) REAL, DIMENSION(:), INTENT(IN)    :: PPS           ! pressure at the surface
(   51) REAL, DIMENSION(:), INTENT(IN)    :: PPA           ! pressure at the first atmospheric level
(   52) REAL, DIMENSION(:), INTENT(IN)    :: PEXNS         ! surface exner function
(   53) REAL, DIMENSION(:), INTENT(IN)    :: PTA           ! temperature at the lowest level
(   54) REAL, DIMENSION(:), INTENT(IN)    :: PQA           ! specific humidity
(   55) REAL, DIMENSION(:), INTENT(IN)    :: PVMOD         ! module of the horizontal wind
(   56) REAL, DIMENSION(:), INTENT(IN)    :: PH_TRAFFIC    ! anthropogenic sensible
(   57) REAL, DIMENSION(:), INTENT(IN)    :: PLE_TRAFFIC   ! anthropogenic latent






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 7

(   58) REAL, DIMENSION(:), INTENT(IN)    :: PEXNA         ! exner function
(   59) REAL, DIMENSION(:), INTENT(IN)    :: PRHOA         ! air density
(   60) REAL, DIMENSION(:), INTENT(IN)    :: PLW_RAD       ! atmospheric infrared radiation
(   61) REAL, DIMENSION(:), INTENT(IN)    :: PRR           ! rain rate
(   62) REAL, DIMENSION(:), INTENT(IN)    :: PSR           ! snow rate
(   63) REAL, DIMENSION(:), INTENT(IN)    :: PZREF         ! reference height of the first
(   64) REAL, DIMENSION(:), INTENT(IN)    :: PUREF         ! reference height of the first
(   65) REAL,               INTENT(IN)    :: PTSTEP        ! time step
(   66) REAL, DIMENSION(:), INTENT(INOUT) :: PDF_RF      ! snow-free    fraction on roofs
(   67) REAL, DIMENSION(:), INTENT(INOUT) :: PDN_RF      ! snow-covered fraction on roofs
(   68) REAL, DIMENSION(:), INTENT(INOUT) :: PDF_RD      ! snow-free    fraction on roads
(   69) REAL, DIMENSION(:), INTENT(INOUT) :: PDN_RD      ! snow-covered fraction on roads
(   70) REAL, DIMENSION(:), INTENT(OUT)   :: PQSAT_RF    ! hum at saturation over roof
(   71) REAL, DIMENSION(:), INTENT(OUT)   :: PQSAT_RD    ! hum at saturation over road
(   72) REAL, DIMENSION(:), INTENT(OUT)   :: PDELT_RF    ! water fraction on roof
(   73) REAL, DIMENSION(:), INTENT(OUT)   :: PDELT_RD    ! water fraction on road
(   74) REAL, DIMENSION(:), INTENT(IN)    :: PTS_GARDEN    ! GARDEN area surf temp.
(   75) REAL, DIMENSION(:), INTENT(OUT)   :: PLEW_RF    ! latent heat flux over roof (snow)
(   76) REAL, DIMENSION(:), INTENT(OUT)   :: PLEW_RD    ! latent heat flux over road (snow)
(   77) REAL, DIMENSION(:), INTENT(OUT)   :: PLE_WL_A   ! latent heat flux over wall
(   78) REAL, DIMENSION(:), INTENT(OUT)   :: PLE_WL_B   ! latent heat flux over wall
(   79) REAL, DIMENSION(:), INTENT(IN)    :: PUW_GR     ! Momentum flux for greenroofs
(   80) REAL, DIMENSION(:), INTENT(OUT)   :: PRNSN_RF ! net radiation over snow
(   81) REAL, DIMENSION(:), INTENT(OUT)   :: PHSN_RF  ! sensible heat flux over snow
(   82) REAL, DIMENSION(:), INTENT(OUT)   :: PLESN_RF ! latent heat flux over snow
(   83) REAL, DIMENSION(:), INTENT(OUT)   :: PGSN_RF  ! flux under the snow
(   84) REAL, DIMENSION(:), INTENT(OUT)   :: PMELT_RF   ! snow melt
(   85) REAL, DIMENSION(:), INTENT(OUT)   :: PRNSN_RD ! net radiation over snow
(   86) REAL, DIMENSION(:), INTENT(OUT)   :: PHSN_RD  ! sensible heat flux over snow
(   87) REAL, DIMENSION(:), INTENT(OUT)   :: PLESN_RD ! latent heat flux over snow
(   88) REAL, DIMENSION(:), INTENT(OUT)   :: PGSN_RD  ! flux under the snow
(   89) REAL, DIMENSION(:), INTENT(OUT)   :: PMELT_RD   ! snow melt
(   90) REAL, DIMENSION(:), INTENT(OUT)   :: PUW_RD     ! Momentum flux for roads
(   91) REAL, DIMENSION(:), INTENT(OUT)   :: PUW_RF     ! Momentum flux for roofs
(   92) REAL, DIMENSION(:), INTENT(OUT)   :: PDUWDU_RD  !
(   93) REAL, DIMENSION(:), INTENT(OUT)   :: PDUWDU_RF  !
(   94) REAL, DIMENSION(:), INTENT(OUT)   :: PUSTAR_TWN ! friciton velocity over town
(   95) REAL, DIMENSION(:), INTENT(IN)    :: PRN_GR     ! net radiation over greenroof
(   96) REAL, DIMENSION(:), INTENT(IN)    :: PH_GR      ! sensible heat flux over greenroof
(   97) REAL, DIMENSION(:), INTENT(IN)    :: PLE_GR     ! latent heat flux over greenroof
(   98) REAL, DIMENSION(:), INTENT(IN)    :: PGFLUX_GR  ! flux through the greenroof
(   99) REAL, DIMENSION(:), INTENT(IN)    :: PRUNOFF_GR ! runoff over green roofs
(  100) REAL, DIMENSION(:), INTENT(IN)    :: PDRAIN_GR  ! outlet drainage at base of green roofs
(  101) REAL, DIMENSION(:), INTENT(OUT)   :: PCD          ! town averaged drag coefficient
(  102) REAL, DIMENSION(:), INTENT(OUT)   :: PCDN         ! town averaged neutral drag coefficient
(  103) REAL, DIMENSION(:), INTENT(OUT)   :: PCH_TWN     ! town averaged heat transfer
(  104) REAL, DIMENSION(:), INTENT(OUT)   :: PRI_TWN      ! town averaged Richardson number
(  105) REAL, DIMENSION(:), INTENT(OUT)   :: PRESA_TWN    ! town aerodynamical resistance
(  106) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_RF      ! roof conductance
(  107) REAL, DIMENSION(:), INTENT(INOUT) :: PAC_RD      ! road conductance
(  108) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_WL      ! wall conductance
(  109) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_TOP       ! top conductance
(  110) REAL, DIMENSION(:), INTENT(IN)    :: PAC_GARDEN    ! garden conductance
(  111) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_RF_WAT  ! roof water conductance
(  112) REAL, DIMENSION(:), INTENT(OUT)   :: PAC_RD_WAT  ! roof water conductance
(  113) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WA_TO_WB      ! LW contrib. wall A (orB) -> wall B (or A)
(  114) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WA_TO_R         ! LW contrib. wall       -> road
(  115) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WB_TO_R         ! LW contrib. wall       -> road






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 8

(  116) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WA_TO_NR        ! LW contrib. wall       -> road(snow)
(  117) REAL, DIMENSION(:), INTENT(IN)    :: PLW_WB_TO_NR        ! LW contrib. wall       -> road(snow)
(  118) REAL, DIMENSION(:), INTENT(IN)    :: PLW_R_TO_WA         ! LW contrib. road       -> wall
(  119) REAL, DIMENSION(:), INTENT(IN)    :: PLW_R_TO_WB         ! LW contrib. road       -> wall
(  120) REAL, DIMENSION(:), INTENT(IN)    :: PLW_G_TO_WA         ! LW contrib. GARDEN     -> wall
(  121) REAL, DIMENSION(:), INTENT(IN)    :: PLW_G_TO_WB         ! LW contrib. GARDEN     -> wall
(  122) REAL, DIMENSION(:), INTENT(IN)    :: PLW_NR_TO_WA        ! LW contrib. road(snow) -> wall
(  123) REAL, DIMENSION(:), INTENT(IN)    :: PLW_NR_TO_WB        ! LW contrib. road(snow) -> wall
(  124) REAL, DIMENSION(:), INTENT(IN)    :: PLW_S_TO_WA         ! LW contrib. sky        -> wall
(  125) REAL, DIMENSION(:), INTENT(IN)    :: PLW_S_TO_WB         ! LW contrib. sky        -> wall
(  126) REAL, DIMENSION(:), INTENT(IN)    :: PLW_S_TO_R          ! LW contrib. sky        -> road
(  127) REAL, DIMENSION(:), INTENT(IN)    :: PLW_S_TO_NR         ! LW contrib. sky        -> road(snow)
(  128) INTEGER,            INTENT(IN)     :: KDAY         ! Simulation day
(  129) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WA_TO_WIN ! Radiative heat trasfer coeff wall-window 
(  130) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WB_TO_WIN ! Radiative heat trasfer coeff wall-window 
(  131) REAL, DIMENSION(:), INTENT(IN)   :: PLW_G_TO_WIN  ! Radiative heat trasfer coeff garden-window 
(  132) REAL, DIMENSION(:), INTENT(IN)   :: PLW_R_TO_WIN  ! Radiative heat trasfer coeff road-window 
(  133) REAL, DIMENSION(:), INTENT(IN)   :: PLW_S_TO_WIN ! Radiative heat trasfer coeff window-sky 
(  134) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WIN_TO_WA! Radiative heat trasfer coeff window-wall
(  135) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WIN_TO_WB! Radiative heat trasfer coeff window-wall
(  136) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WIN_TO_R ! Radiative heat trasfer coeff window-road 
(  137) REAL, DIMENSION(:), INTENT(IN)   :: PLW_NR_TO_WIN! Radiative heat trasfer coeff road(snow)-win 
(  138) REAL, DIMENSION(:), INTENT(IN)   :: PLW_WIN_TO_NR! Radiative heat trasfer coeff win-road(snow) 
(  139) REAL, DIMENSION(:), INTENT(OUT) :: PEMIT_LW_RD ! LW fluxes emitted by road (W/m2 surf road)
(  140) REAL, DIMENSION(:), INTENT(OUT) :: PEMIT_LW_FAC  ! LW fluxes emitted by wall (W/m2 surf wall)
(  141) REAL, DIMENSION(:), INTENT(OUT) :: PT_RAD_IND    ! Indoor mean radiant temperature [K]
(  142) REAL, DIMENSION(:), INTENT(OUT) :: PHU_BLD       ! Indoor relative humidity 0 < (-) < 1
(  143) REAL,                INTENT(IN)  :: PTIME        ! current time since midnight (UTC, s)
(  144) REAL, DIMENSION(:), INTENT(IN)  :: PE_SHADING    !energy not ref., nor absorbed, nor
(  145) END SUBROUTINE TEB
(  146) # 147 "modi_teb.F90"
(  147) END INTERFACE
(  148) END MODULE MODI_TEB 
