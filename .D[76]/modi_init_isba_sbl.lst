


NVFORTRAN (Version     23.1)          02/24/2023  13:52:35      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:35      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_init_isba_sbl.F90

(    1) !depfile:init_isba_sbl.F90
(    2) MODULE MODI_INIT_ISBA_SBL
(    3) INTERFACE
(    4)     SUBROUTINE INIT_ISBA_SBL(IO, K, NP, NPE, AT, SB, PTSTEP, PPA, PPS, PTA, PQA, PRHOA, PU, PV, &
(    5)                              PDIR_SW, PSCA_SW, PSW_BANDS, PRAIN, PSNOW, PZREF, PUREF, PSSO_SLOPE )  
(    6) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(    7) USE MODD_ISBA_n, ONLY : ISBA_K_t, ISBA_NP_t, ISBA_NPE_t, ISBA_P_t, ISBA_PE_t
(    8) USE MODD_CANOPY_n, ONLY : CANOPY_t
(    9) USE MODD_TYPE_SNOW
(   10) USE MODD_SURF_ATM_TURB_n,  ONLY : SURF_ATM_TURB_t
(   11) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   12) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   13) TYPE(ISBA_NP_t), INTENT(INOUT) :: NP
(   14) TYPE(ISBA_NPE_t), INTENT(INOUT) :: NPE
(   15) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   16) TYPE(CANOPY_t), INTENT(INOUT) :: SB
(   17) REAL,               INTENT(IN)   :: PTSTEP   ! timestep of the integration
(   18) REAL, DIMENSION(:), INTENT(IN)  :: PPA       ! pressure at forcing level             (Pa)
(   19) REAL, DIMENSION(:), INTENT(IN)  :: PPS       ! pressure at atmospheric model surface (Pa)
(   20) REAL, DIMENSION(:), INTENT(IN)  :: PTA       ! air temperature forcing               (K)
(   21) REAL, DIMENSION(:), INTENT(IN)  :: PQA       ! air humidity forcing                  (kg/m3)
(   22) REAL, DIMENSION(:), INTENT(IN)  :: PRHOA     ! air density                           (kg/m3)
(   23) REAL, DIMENSION(:), INTENT(IN)  :: PU        ! zonal wind                            (m/s)
(   24) REAL, DIMENSION(:), INTENT(IN)  :: PV        ! meridian wind                         (m/s)
(   25) REAL, DIMENSION(:,:),INTENT(IN) :: PDIR_SW   ! direct  solar radiation (on horizontal surf.)
(   26) REAL, DIMENSION(:,:),INTENT(IN) :: PSCA_SW   ! diffuse solar radiation (on horizontal surf.)
(   27) REAL, DIMENSION(:), INTENT(IN)  :: PSW_BANDS ! mean wavelength of each shortwave band (m)
(   28) REAL, DIMENSION(:), INTENT(IN)  :: PSNOW     ! snow precipitation                    (kg/m2/s)
(   29) REAL, DIMENSION(:), INTENT(IN)  :: PRAIN     ! liquid precipitation                  (kg/m2/s)
(   30) REAL, DIMENSION(:), INTENT(IN)  :: PZREF     ! height of T,q forcing                 (m)






NVFORTRAN (Version     23.1)          02/24/2023  13:52:35      page 3

(   31) REAL, DIMENSION(:), INTENT(IN)  :: PUREF     ! height of wind forcing                (m)
(   32) REAL, DIMENSION(:), INTENT(IN)  :: PSSO_SLOPE! slope of S.S.O.                         (-)
(   33) END SUBROUTINE INIT_ISBA_SBL
(   34) 
(   35) END INTERFACE
(   36) END MODULE MODI_INIT_ISBA_SBL


























































NVFORTRAN (Version     23.1)          02/24/2023  13:52:35      page 4

(    1) # 1 "modi_init_isba_sbl.F90"
(    1) !depfile:init_isba_sbl.F90
(    2) MODULE MODI_INIT_ISBA_SBL
(    3) INTERFACE
(    4)     SUBROUTINE INIT_ISBA_SBL(IO, K, NP, NPE, AT, SB, PTSTEP, PPA, PPS, PTA, PQA, PRHOA, PU, PV, &
(    5)                              PDIR_SW, PSCA_SW, PSW_BANDS, PRAIN, PSNOW, PZREF, PUREF, PSSO_SLOPE )  
(    6) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(    7) USE MODD_ISBA_n, ONLY : ISBA_K_t, ISBA_NP_t, ISBA_NPE_t, ISBA_P_t, ISBA_PE_t
(    8) USE MODD_CANOPY_n, ONLY : CANOPY_t
(    9) USE MODD_TYPE_SNOW
(   10) USE MODD_SURF_ATM_TURB_n,  ONLY : SURF_ATM_TURB_t
(   11) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   12) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   13) TYPE(ISBA_NP_t), INTENT(INOUT) :: NP
(   14) TYPE(ISBA_NPE_t), INTENT(INOUT) :: NPE
(   15) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   16) TYPE(CANOPY_t), INTENT(INOUT) :: SB
(   17) REAL,               INTENT(IN)   :: PTSTEP   ! timestep of the integration
(   18) REAL, DIMENSION(:), INTENT(IN)  :: PPA       ! pressure at forcing level             (Pa)
(   19) REAL, DIMENSION(:), INTENT(IN)  :: PPS       ! pressure at atmospheric model surface (Pa)
(   20) REAL, DIMENSION(:), INTENT(IN)  :: PTA       ! air temperature forcing               (K)
(   21) REAL, DIMENSION(:), INTENT(IN)  :: PQA       ! air humidity forcing                  (kg/m3)
(   22) REAL, DIMENSION(:), INTENT(IN)  :: PRHOA     ! air density                           (kg/m3)
(   23) REAL, DIMENSION(:), INTENT(IN)  :: PU        ! zonal wind                            (m/s)
(   24) REAL, DIMENSION(:), INTENT(IN)  :: PV        ! meridian wind                         (m/s)
(   25) REAL, DIMENSION(:,:),INTENT(IN) :: PDIR_SW   ! direct  solar radiation (on horizontal surf.)
(   26) REAL, DIMENSION(:,:),INTENT(IN) :: PSCA_SW   ! diffuse solar radiation (on horizontal surf.)
(   27) REAL, DIMENSION(:), INTENT(IN)  :: PSW_BANDS ! mean wavelength of each shortwave band (m)
(   28) REAL, DIMENSION(:), INTENT(IN)  :: PSNOW     ! snow precipitation                    (kg/m2/s)
(   29) REAL, DIMENSION(:), INTENT(IN)  :: PRAIN     ! liquid precipitation                  (kg/m2/s)
(   30) REAL, DIMENSION(:), INTENT(IN)  :: PZREF     ! height of T,q forcing                 (m)
(   31) REAL, DIMENSION(:), INTENT(IN)  :: PUREF     ! height of wind forcing                (m)
(   32) REAL, DIMENSION(:), INTENT(IN)  :: PSSO_SLOPE! slope of S.S.O.                         (-)
(   33) END SUBROUTINE INIT_ISBA_SBL
(   34) # 35 "modi_init_isba_sbl.F90"
(   35) END INTERFACE
(   36) END MODULE MODI_INIT_ISBA_SBL
