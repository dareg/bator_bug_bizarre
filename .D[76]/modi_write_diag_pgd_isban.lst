


NVFORTRAN (Version     23.1)          02/24/2023  13:55:02      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:55:02      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_write_diag_pgd_isban.F90

(    1) !depfile:write_diag_pgd_isban.F90
(    2) MODULE MODI_WRITE_DIAG_PGD_ISBA_n 
(    3) INTERFACE
(    4)       SUBROUTINE WRITE_DIAG_PGD_ISBA_n (DTCO, HSELECT, U, CHI, NCHI, OSURF_DIAG_ALBEDO, &
(    5)                                         IO, S, K, NP, NPE, ISS, HPROGRAM)
(    6) USE MODD_TYPE_DATE_SURF
(    7) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(    8) USE MODD_SSO_n, ONLY : SSO_t
(    9) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   10) USE MODD_CH_ISBA_n, ONLY : CH_ISBA_t, CH_ISBA_NP_t
(   11) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   12) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t, ISBA_NP_t, ISBA_NPE_t, ISBA_P_t, ISBA_PE_t
(   13) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   14)  CHARACTER(LEN=*), DIMENSION(:), INTENT(IN) :: HSELECT
(   15) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   16) TYPE(CH_ISBA_t), INTENT(INOUT) :: CHI
(   17) TYPE(CH_ISBA_NP_t), INTENT(INOUT) :: NCHI
(   18) LOGICAL, INTENT(IN) :: OSURF_DIAG_ALBEDO
(   19) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   20) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   21) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   22) TYPE(ISBA_NP_t), INTENT(INOUT) :: NP
(   23) TYPE(ISBA_NPE_t), INTENT(INOUT) :: NPE
(   24) TYPE(SSO_t), INTENT(INOUT) :: ISS
(   25)  CHARACTER(LEN=6),  INTENT(IN)  :: HPROGRAM ! program calling
(   26) END SUBROUTINE WRITE_DIAG_PGD_ISBA_n
(   27) 
(   28) END INTERFACE
(   29) END MODULE MODI_WRITE_DIAG_PGD_ISBA_n 







NVFORTRAN (Version     23.1)          02/24/2023  13:55:02      page 3

(    1) # 1 "modi_write_diag_pgd_isban.F90"
(    1) !depfile:write_diag_pgd_isban.F90
(    2) MODULE MODI_WRITE_DIAG_PGD_ISBA_n 
(    3) INTERFACE
(    4)       SUBROUTINE WRITE_DIAG_PGD_ISBA_n (DTCO, HSELECT, U, CHI, NCHI, OSURF_DIAG_ALBEDO, &
(    5)                                         IO, S, K, NP, NPE, ISS, HPROGRAM)
(    6) USE MODD_TYPE_DATE_SURF
(    7) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(    8) USE MODD_SSO_n, ONLY : SSO_t
(    9) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   10) USE MODD_CH_ISBA_n, ONLY : CH_ISBA_t, CH_ISBA_NP_t
(   11) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   12) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t, ISBA_NP_t, ISBA_NPE_t, ISBA_P_t, ISBA_PE_t
(   13) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   14)  CHARACTER(LEN=*), DIMENSION(:), INTENT(IN) :: HSELECT
(   15) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   16) TYPE(CH_ISBA_t), INTENT(INOUT) :: CHI
(   17) TYPE(CH_ISBA_NP_t), INTENT(INOUT) :: NCHI
(   18) LOGICAL, INTENT(IN) :: OSURF_DIAG_ALBEDO
(   19) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   20) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   21) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   22) TYPE(ISBA_NP_t), INTENT(INOUT) :: NP
(   23) TYPE(ISBA_NPE_t), INTENT(INOUT) :: NPE
(   24) TYPE(SSO_t), INTENT(INOUT) :: ISS
(   25)  CHARACTER(LEN=6),  INTENT(IN)  :: HPROGRAM ! program calling
(   26) END SUBROUTINE WRITE_DIAG_PGD_ISBA_n
(   27) # 28 "modi_write_diag_pgd_isban.F90"
(   28) END INTERFACE
(   29) END MODULE MODI_WRITE_DIAG_PGD_ISBA_n 
