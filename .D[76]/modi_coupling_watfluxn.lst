


NVFORTRAN (Version     23.1)          02/24/2023  13:54:49      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:54:49      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_coupling_watfluxn.F90

(    1) !depfile:coupling_watfluxn.F90
(    2) MODULE MODI_COUPLING_WATFLUX_n 
(    3) INTERFACE
(    4) SUBROUTINE COUPLING_WATFLUX_n (CHW, DGO, D, DC, W, AT, DST, SLT, &
(    5)                                HPROGRAM, HCOUPLING, PTIMEC, PTSTEP, KYEAR, KMONTH, KDAY, PTIME, &
(    6)                                KI, KSV, KSW, PTSUN, PZENITH, PZENITH2, PAZIM, PZREF, PUREF,     &
(    7)                                PU, PV, PQA, PTA, PRHOA, PSV, PCO2, HSV, PRAIN, PSNOW, PLW,      &
(    8)                                PDIR_SW, PSCA_SW, PSW_BANDS, PPS, PPA, PSFTQ, PSFTH, PSFTS,      &
(    9)                                PSFCO2, PSFU, PSFV, PTRAD, PDIR_ALB, PSCA_ALB, PEMIS, PTSURF,    &
(   10)                                PZ0, PZ0H, PQSURF, PPEW_A_COEF, PPEW_B_COEF, PPET_A_COEF,        &
(   11)                                PPEQ_A_COEF, PPET_B_COEF, PPEQ_B_COEF, HTEST      )  
(   12) USE MODD_CH_WATFLUX_n, ONLY : CH_WATFLUX_t
(   13) USE MODD_DIAG_n, ONLY : DIAG_OPTIONS_t, DIAG_t
(   14) USE MODD_WATFLUX_n, ONLY : WATFLUX_t
(   15) USE MODD_DST_n, ONLY : DST_t
(   16) USE MODD_SLT_n, ONLY : SLT_t
(   17) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   18) TYPE(CH_WATFLUX_t), INTENT(INOUT) :: CHW
(   19) TYPE(DIAG_OPTIONS_t), INTENT(INOUT) :: DGO
(   20) TYPE(DIAG_t), INTENT(INOUT) :: D 
(   21) TYPE(DIAG_t), INTENT(INOUT) :: DC
(   22) TYPE(WATFLUX_t), INTENT(INOUT) :: W 
(   23) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   24) TYPE(DST_t), INTENT(INOUT) :: DST
(   25) TYPE(SLT_t), INTENT(INOUT) :: SLT
(   26)  CHARACTER(LEN=6),    INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   27)  CHARACTER(LEN=1),    INTENT(IN)  :: HCOUPLING ! type of coupling
(   28) REAL,                INTENT(IN)  :: PTIMEC    ! cumulated time since beginning of simulation
(   29) INTEGER,             INTENT(IN)  :: KYEAR     ! current year (UTC)
(   30) INTEGER,             INTENT(IN)  :: KMONTH    ! current month (UTC)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:49      page 3

(   31) INTEGER,             INTENT(IN)  :: KDAY      ! current day (UTC)
(   32) REAL,                INTENT(IN)  :: PTIME     ! current time since midnight (UTC, s)
(   33) INTEGER,             INTENT(IN)  :: KI        ! number of points
(   34) INTEGER,             INTENT(IN)  :: KSV       ! number of scalars
(   35) INTEGER,             INTENT(IN)  :: KSW       ! number of short-wave spectral bands
(   36) REAL, DIMENSION(KI), INTENT(IN)  :: PTSUN     ! solar time                    (s from midnight)
(   37) REAL,                INTENT(IN)  :: PTSTEP    ! atmospheric time-step                 (s)
(   38) REAL, DIMENSION(KI), INTENT(IN)  :: PZREF     ! height of T,q forcing                 (m)
(   39) REAL, DIMENSION(KI), INTENT(IN)  :: PUREF     ! height of wind forcing                (m)
(   40) REAL, DIMENSION(KI), INTENT(IN)  :: PTA       ! air temperature forcing               (K)
(   41) REAL, DIMENSION(KI), INTENT(IN)  :: PQA       ! air humidity forcing                  (kg/m3)
(   42) REAL, DIMENSION(KI), INTENT(IN)  :: PRHOA     ! air density                           (kg/m3)
(   43) REAL, DIMENSION(KI,KSV),INTENT(IN) :: PSV     ! scalar variables
(   44)  CHARACTER(LEN=6), DIMENSION(KSV),INTENT(IN):: HSV  ! name of all scalar variables
(   45) REAL, DIMENSION(KI), INTENT(IN)  :: PU        ! zonal wind                            (m/s)
(   46) REAL, DIMENSION(KI), INTENT(IN)  :: PV        ! meridian wind                         (m/s)
(   47) REAL, DIMENSION(KI,KSW),INTENT(IN) :: PDIR_SW ! direct  solar radiation (on horizontal surf.)
(   48) REAL, DIMENSION(KI,KSW),INTENT(IN) :: PSCA_SW ! diffuse solar radiation (on horizontal surf.)
(   49) REAL, DIMENSION(KSW),INTENT(IN)  :: PSW_BANDS ! mean wavelength of each shortwave band (m)
(   50) REAL, DIMENSION(KI), INTENT(IN)  :: PZENITH   ! zenithal angle at t      (radian from the vertical)
(   51) REAL, DIMENSION(KI), INTENT(IN)  :: PZENITH2  ! zenithal angle at t+1    (radian from the vertical)
(   52) REAL, DIMENSION(KI), INTENT(IN)  :: PAZIM     ! azimuthal angle      (radian from North, clockwise)
(   53) REAL, DIMENSION(KI), INTENT(IN)  :: PLW       ! longwave radiation (on horizontal surf.)
(   54) REAL, DIMENSION(KI), INTENT(IN)  :: PPS       ! pressure at atmospheric model surface (Pa)
(   55) REAL, DIMENSION(KI), INTENT(IN)  :: PPA       ! pressure at forcing level             (Pa)
(   56) REAL, DIMENSION(KI), INTENT(IN)  :: PCO2      ! CO2 concentration in the air          (kg/m3)
(   57) REAL, DIMENSION(KI), INTENT(IN)  :: PSNOW     ! snow precipitation                    (kg/m2/s)
(   58) REAL, DIMENSION(KI), INTENT(IN)  :: PRAIN     ! liquid precipitation                  (kg/m2/s)
(   59) REAL, DIMENSION(KI), INTENT(OUT) :: PSFTH     ! flux of heat                          (W/m2)
(   60) REAL, DIMENSION(KI), INTENT(OUT) :: PSFTQ     ! flux of water vapor                   (kg/m2/s)
(   61) REAL, DIMENSION(KI), INTENT(OUT) :: PSFU      ! zonal momentum flux                   (Pa)
(   62) REAL, DIMENSION(KI), INTENT(OUT) :: PSFV      ! meridian momentum flux                (Pa)
(   63) REAL, DIMENSION(KI), INTENT(OUT) :: PSFCO2    ! flux of CO2                           (m/s*kg_CO2/kg_air)
(   64) REAL, DIMENSION(KI,KSV),INTENT(OUT):: PSFTS   ! flux of scalar var.                   (kg/m2/s)
(   65) REAL, DIMENSION(KI), INTENT(OUT) :: PTRAD     ! radiative temperature                 (K)
(   66) REAL, DIMENSION(KI,KSW),INTENT(OUT):: PDIR_ALB! direct albedo for each spectral band  (-)
(   67) REAL, DIMENSION(KI,KSW),INTENT(OUT):: PSCA_ALB! diffuse albedo for each spectral band (-)
(   68) REAL, DIMENSION(KI), INTENT(OUT) :: PEMIS     ! emissivity                            (-)
(   69) REAL, DIMENSION(KI), INTENT(OUT) :: PTSURF    ! surface effective temperature         (K)
(   70) REAL, DIMENSION(KI), INTENT(OUT) :: PZ0       ! roughness length for momentum         (m)
(   71) REAL, DIMENSION(KI), INTENT(OUT) :: PZ0H      ! roughness length for heat             (m)
(   72) REAL, DIMENSION(KI), INTENT(OUT) :: PQSURF    ! specific humidity at surface          (kg/kg)
(   73) REAL, DIMENSION(KI), INTENT(IN) :: PPEW_A_COEF! implicit coefficients   (m2s/kg)
(   74) REAL, DIMENSION(KI), INTENT(IN) :: PPEW_B_COEF! needed if HCOUPLING='I' (m/s)
(   75) REAL, DIMENSION(KI), INTENT(IN) :: PPET_A_COEF
(   76) REAL, DIMENSION(KI), INTENT(IN) :: PPEQ_A_COEF
(   77) REAL, DIMENSION(KI), INTENT(IN) :: PPET_B_COEF
(   78) REAL, DIMENSION(KI), INTENT(IN) :: PPEQ_B_COEF
(   79)  CHARACTER(LEN=2),    INTENT(IN) :: HTEST ! must be equal to 'OK'
(   80) END SUBROUTINE COUPLING_WATFLUX_n
(   81) 
(   82) END INTERFACE
(   83) END MODULE MODI_COUPLING_WATFLUX_n 











NVFORTRAN (Version     23.1)          02/24/2023  13:54:49      page 4

(    1) # 1 "modi_coupling_watfluxn.F90"
(    1) !depfile:coupling_watfluxn.F90
(    2) MODULE MODI_COUPLING_WATFLUX_n 
(    3) INTERFACE
(    4) SUBROUTINE COUPLING_WATFLUX_n (CHW, DGO, D, DC, W, AT, DST, SLT, &
(    5)                                HPROGRAM, HCOUPLING, PTIMEC, PTSTEP, KYEAR, KMONTH, KDAY, PTIME, &
(    6)                                KI, KSV, KSW, PTSUN, PZENITH, PZENITH2, PAZIM, PZREF, PUREF,     &
(    7)                                PU, PV, PQA, PTA, PRHOA, PSV, PCO2, HSV, PRAIN, PSNOW, PLW,      &
(    8)                                PDIR_SW, PSCA_SW, PSW_BANDS, PPS, PPA, PSFTQ, PSFTH, PSFTS,      &
(    9)                                PSFCO2, PSFU, PSFV, PTRAD, PDIR_ALB, PSCA_ALB, PEMIS, PTSURF,    &
(   10)                                PZ0, PZ0H, PQSURF, PPEW_A_COEF, PPEW_B_COEF, PPET_A_COEF,        &
(   11)                                PPEQ_A_COEF, PPET_B_COEF, PPEQ_B_COEF, HTEST      )  
(   12) USE MODD_CH_WATFLUX_n, ONLY : CH_WATFLUX_t
(   13) USE MODD_DIAG_n, ONLY : DIAG_OPTIONS_t, DIAG_t
(   14) USE MODD_WATFLUX_n, ONLY : WATFLUX_t
(   15) USE MODD_DST_n, ONLY : DST_t
(   16) USE MODD_SLT_n, ONLY : SLT_t
(   17) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   18) TYPE(CH_WATFLUX_t), INTENT(INOUT) :: CHW
(   19) TYPE(DIAG_OPTIONS_t), INTENT(INOUT) :: DGO
(   20) TYPE(DIAG_t), INTENT(INOUT) :: D 
(   21) TYPE(DIAG_t), INTENT(INOUT) :: DC
(   22) TYPE(WATFLUX_t), INTENT(INOUT) :: W 
(   23) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   24) TYPE(DST_t), INTENT(INOUT) :: DST
(   25) TYPE(SLT_t), INTENT(INOUT) :: SLT
(   26)  CHARACTER(LEN=6),    INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   27)  CHARACTER(LEN=1),    INTENT(IN)  :: HCOUPLING ! type of coupling
(   28) REAL,                INTENT(IN)  :: PTIMEC    ! cumulated time since beginning of simulation
(   29) INTEGER,             INTENT(IN)  :: KYEAR     ! current year (UTC)
(   30) INTEGER,             INTENT(IN)  :: KMONTH    ! current month (UTC)
(   31) INTEGER,             INTENT(IN)  :: KDAY      ! current day (UTC)
(   32) REAL,                INTENT(IN)  :: PTIME     ! current time since midnight (UTC, s)
(   33) INTEGER,             INTENT(IN)  :: KI        ! number of points
(   34) INTEGER,             INTENT(IN)  :: KSV       ! number of scalars
(   35) INTEGER,             INTENT(IN)  :: KSW       ! number of short-wave spectral bands
(   36) REAL, DIMENSION(KI), INTENT(IN)  :: PTSUN     ! solar time                    (s from midnight)
(   37) REAL,                INTENT(IN)  :: PTSTEP    ! atmospheric time-step                 (s)
(   38) REAL, DIMENSION(KI), INTENT(IN)  :: PZREF     ! height of T,q forcing                 (m)
(   39) REAL, DIMENSION(KI), INTENT(IN)  :: PUREF     ! height of wind forcing                (m)
(   40) REAL, DIMENSION(KI), INTENT(IN)  :: PTA       ! air temperature forcing               (K)
(   41) REAL, DIMENSION(KI), INTENT(IN)  :: PQA       ! air humidity forcing                  (kg/m3)
(   42) REAL, DIMENSION(KI), INTENT(IN)  :: PRHOA     ! air density                           (kg/m3)
(   43) REAL, DIMENSION(KI,KSV),INTENT(IN) :: PSV     ! scalar variables
(   44)  CHARACTER(LEN=6), DIMENSION(KSV),INTENT(IN):: HSV  ! name of all scalar variables
(   45) REAL, DIMENSION(KI), INTENT(IN)  :: PU        ! zonal wind                            (m/s)
(   46) REAL, DIMENSION(KI), INTENT(IN)  :: PV        ! meridian wind                         (m/s)
(   47) REAL, DIMENSION(KI,KSW),INTENT(IN) :: PDIR_SW ! direct  solar radiation (on horizontal surf.)
(   48) REAL, DIMENSION(KI,KSW),INTENT(IN) :: PSCA_SW ! diffuse solar radiation (on horizontal surf.)
(   49) REAL, DIMENSION(KSW),INTENT(IN)  :: PSW_BANDS ! mean wavelength of each shortwave band (m)
(   50) REAL, DIMENSION(KI), INTENT(IN)  :: PZENITH   ! zenithal angle at t      (radian from the vertical)
(   51) REAL, DIMENSION(KI), INTENT(IN)  :: PZENITH2  ! zenithal angle at t+1    (radian from the vertical)
(   52) REAL, DIMENSION(KI), INTENT(IN)  :: PAZIM     ! azimuthal angle      (radian from North, clockwise)
(   53) REAL, DIMENSION(KI), INTENT(IN)  :: PLW       ! longwave radiation (on horizontal surf.)
(   54) REAL, DIMENSION(KI), INTENT(IN)  :: PPS       ! pressure at atmospheric model surface (Pa)
(   55) REAL, DIMENSION(KI), INTENT(IN)  :: PPA       ! pressure at forcing level             (Pa)
(   56) REAL, DIMENSION(KI), INTENT(IN)  :: PCO2      ! CO2 concentration in the air          (kg/m3)
(   57) REAL, DIMENSION(KI), INTENT(IN)  :: PSNOW     ! snow precipitation                    (kg/m2/s)






NVFORTRAN (Version     23.1)          02/24/2023  13:54:49      page 5

(   58) REAL, DIMENSION(KI), INTENT(IN)  :: PRAIN     ! liquid precipitation                  (kg/m2/s)
(   59) REAL, DIMENSION(KI), INTENT(OUT) :: PSFTH     ! flux of heat                          (W/m2)
(   60) REAL, DIMENSION(KI), INTENT(OUT) :: PSFTQ     ! flux of water vapor                   (kg/m2/s)
(   61) REAL, DIMENSION(KI), INTENT(OUT) :: PSFU      ! zonal momentum flux                   (Pa)
(   62) REAL, DIMENSION(KI), INTENT(OUT) :: PSFV      ! meridian momentum flux                (Pa)
(   63) REAL, DIMENSION(KI), INTENT(OUT) :: PSFCO2    ! flux of CO2                           (m/s*kg_CO2/kg_air)
(   64) REAL, DIMENSION(KI,KSV),INTENT(OUT):: PSFTS   ! flux of scalar var.                   (kg/m2/s)
(   65) REAL, DIMENSION(KI), INTENT(OUT) :: PTRAD     ! radiative temperature                 (K)
(   66) REAL, DIMENSION(KI,KSW),INTENT(OUT):: PDIR_ALB! direct albedo for each spectral band  (-)
(   67) REAL, DIMENSION(KI,KSW),INTENT(OUT):: PSCA_ALB! diffuse albedo for each spectral band (-)
(   68) REAL, DIMENSION(KI), INTENT(OUT) :: PEMIS     ! emissivity                            (-)
(   69) REAL, DIMENSION(KI), INTENT(OUT) :: PTSURF    ! surface effective temperature         (K)
(   70) REAL, DIMENSION(KI), INTENT(OUT) :: PZ0       ! roughness length for momentum         (m)
(   71) REAL, DIMENSION(KI), INTENT(OUT) :: PZ0H      ! roughness length for heat             (m)
(   72) REAL, DIMENSION(KI), INTENT(OUT) :: PQSURF    ! specific humidity at surface          (kg/kg)
(   73) REAL, DIMENSION(KI), INTENT(IN) :: PPEW_A_COEF! implicit coefficients   (m2s/kg)
(   74) REAL, DIMENSION(KI), INTENT(IN) :: PPEW_B_COEF! needed if HCOUPLING='I' (m/s)
(   75) REAL, DIMENSION(KI), INTENT(IN) :: PPET_A_COEF
(   76) REAL, DIMENSION(KI), INTENT(IN) :: PPEQ_A_COEF
(   77) REAL, DIMENSION(KI), INTENT(IN) :: PPET_B_COEF
(   78) REAL, DIMENSION(KI), INTENT(IN) :: PPEQ_B_COEF
(   79)  CHARACTER(LEN=2),    INTENT(IN) :: HTEST ! must be equal to 'OK'
(   80) END SUBROUTINE COUPLING_WATFLUX_n
(   81) # 82 "modi_coupling_watfluxn.F90"
(   82) END INTERFACE
(   83) END MODULE MODI_COUPLING_WATFLUX_n 
