


NVFORTRAN (Version     23.1)          02/24/2023  13:35:08      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:35:08      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_build_emisstabn.F90

(    1) !depfile:build_emisstabn.F90
(    2) MODULE MODI_BUILD_EMISSTAB_n 
(    3) INTERFACE
(    4)        SUBROUTINE BUILD_EMISSTAB_n (PCONVERSION, HPROGRAM,KCH,HEMIS_GR_NAME, KNBTIMES,&
(    5)               KEMIS_GR_TIME,KOFFNDX,TPEMISS,KSIZE,KLUOUT, KVERB,PRHODREF)  
(    6) USE MODD_TYPE_EFUTIL, ONLY : EMISSVAR_T
(    7) REAL, DIMENSION(:), POINTER :: PCONVERSION
(    8)  CHARACTER(LEN=6),                INTENT(IN) :: HPROGRAM   ! Program name
(    9) INTEGER,                         INTENT(IN) :: KCH
(   10)  CHARACTER(LEN=*),DIMENSION(:),   INTENT(IN) :: HEMIS_GR_NAME ! Offline species name
(   11) INTEGER, DIMENSION(:),           INTENT(IN) :: KNBTIMES ! nb of emis times array
(   12) INTEGER, DIMENSION(:),           INTENT(IN) :: KEMIS_GR_TIME
(   13) INTEGER, DIMENSION(:),           INTENT(IN) :: KOFFNDX ! index of offline species
(   14) TYPE(EMISSVAR_T),DIMENSION(:),   INTENT(OUT):: TPEMISS ! emission struct array to fill
(   15) INTEGER,                         INTENT(IN) :: KSIZE   ! size X*Y (1D) of physical domain
(   16) INTEGER,                         INTENT(IN) :: KLUOUT  ! output listing channel
(   17) INTEGER,                         INTENT(IN) :: KVERB   ! verbose level
(   18) REAL, DIMENSION(:),              INTENT(IN) :: PRHODREF ! dry density for ref. state
(   19) END SUBROUTINE BUILD_EMISSTAB_n
(   20) 
(   21) END INTERFACE
(   22) END MODULE MODI_BUILD_EMISSTAB_n 














NVFORTRAN (Version     23.1)          02/24/2023  13:35:08      page 3

(    1) # 1 "modi_build_emisstabn.F90"
(    1) !depfile:build_emisstabn.F90
(    2) MODULE MODI_BUILD_EMISSTAB_n 
(    3) INTERFACE
(    4)        SUBROUTINE BUILD_EMISSTAB_n (PCONVERSION, HPROGRAM,KCH,HEMIS_GR_NAME, KNBTIMES,&
(    5)               KEMIS_GR_TIME,KOFFNDX,TPEMISS,KSIZE,KLUOUT, KVERB,PRHODREF)  
(    6) USE MODD_TYPE_EFUTIL, ONLY : EMISSVAR_T
(    7) REAL, DIMENSION(:), POINTER :: PCONVERSION
(    8)  CHARACTER(LEN=6),                INTENT(IN) :: HPROGRAM   ! Program name
(    9) INTEGER,                         INTENT(IN) :: KCH
(   10)  CHARACTER(LEN=*),DIMENSION(:),   INTENT(IN) :: HEMIS_GR_NAME ! Offline species name
(   11) INTEGER, DIMENSION(:),           INTENT(IN) :: KNBTIMES ! nb of emis times array
(   12) INTEGER, DIMENSION(:),           INTENT(IN) :: KEMIS_GR_TIME
(   13) INTEGER, DIMENSION(:),           INTENT(IN) :: KOFFNDX ! index of offline species
(   14) TYPE(EMISSVAR_T),DIMENSION(:),   INTENT(OUT):: TPEMISS ! emission struct array to fill
(   15) INTEGER,                         INTENT(IN) :: KSIZE   ! size X*Y (1D) of physical domain
(   16) INTEGER,                         INTENT(IN) :: KLUOUT  ! output listing channel
(   17) INTEGER,                         INTENT(IN) :: KVERB   ! verbose level
(   18) REAL, DIMENSION(:),              INTENT(IN) :: PRHODREF ! dry density for ref. state
(   19) END SUBROUTINE BUILD_EMISSTAB_n
(   20) # 21 "modi_build_emisstabn.F90"
(   21) END INTERFACE
(   22) END MODULE MODI_BUILD_EMISSTAB_n 
