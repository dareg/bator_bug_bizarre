


NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_snow3L_isba.F90

(    1) !depfile:snow3L_isba.F90
(    2) MODULE MODI_SNOW3L_ISBA
(    3) INTERFACE
(    4) SUBROUTINE SNOW3L_ISBA(IO, G, PK, PEK, DK, DEK, DMK, OMEB, HIMPLICIT_WIND,  &
(    5)                       TPTIME,PTSTEP, PVEGTYPE, PTG, PCT, PSOILHCAPZ,        &
(    6)                       PSOILCONDZ, PPS, PTA,PSW_RAD, PQA, PVMOD, PVDIR,      &
(    7)                       PLW_RAD, PRR, PSR, PRHOA, PUREF,PEXNS, PEXNA,         &
(    8)                       PDIRCOSZW,PSLOPEDIR, PZREF, PALB, PD_G, PDZG,         &
(    9)                       PPEW_A_COEF, PPEW_B_COEF, PPET_A_COEF, PPEQ_A_COEF,   &
(   10)                       PPET_B_COEF, PPEQ_B_COEF, PTHRUFAL, PGRNDFLUX,        &
(   11)                       PFLSN_COR,PGSFCSNOW, PEVAPCOR, PLES3L, PLEL3L, PEVAP, &
(   12)                       PSNOWSFCH,PDELHEATN, PDELHEATN_SFC, PRI,PZENITH,      &
(   13)                       PANGL_ILLUM, PDELHEATG,PDELHEATG_SFC,PQS,             &
(   14)                       KTAB_SYT,P_DIR_SW,P_SCA_SW,PIMPWET,PIMPDRY)
(   15) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   16) USE MODD_SFX_GRID_n, ONLY : GRID_t
(   17) USE MODD_ISBA_n, ONLY : ISBA_PE_t, ISBA_P_t
(   18) USE MODD_DIAG_n, ONLY : DIAG_t
(   19) USE MODD_DIAG_EVAP_ISBA_n, ONLY : DIAG_EVAP_ISBA_t
(   20) USE MODD_DIAG_MISC_ISBA_n, ONLY : DIAG_MISC_ISBA_t
(   21) USE MODD_TYPE_DATE_SURF, ONLY: DATE_TIME
(   22) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   23) TYPE(GRID_t), INTENT(INOUT) :: G
(   24) TYPE(ISBA_P_t), INTENT(INOUT) :: PK
(   25) TYPE(ISBA_PE_t), INTENT(INOUT) :: PEK
(   26) TYPE(DIAG_t), INTENT(INOUT) :: DK
(   27) TYPE(DIAG_EVAP_ISBA_t), INTENT(INOUT) :: DEK
(   28) TYPE(DIAG_MISC_ISBA_t), INTENT(INOUT) :: DMK
(   29) LOGICAL, INTENT(IN)                 :: OMEB       ! True = coupled to MEB. This means surface fluxes ae IMPOSED
(   30)  CHARACTER(LEN=*),     INTENT(IN)    :: HIMPLICIT_WIND   ! wind implicitation option






NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 3

(   31) TYPE(DATE_TIME), INTENT(IN)         :: TPTIME     ! current date and time
(   32) REAL, INTENT(IN)                    :: PTSTEP
(   33) REAL, DIMENSION(:,:), INTENT(IN)    :: PVEGTYPE ! fraction of each vegetation
(   34) REAL, DIMENSION(:,:), INTENT(INOUT) :: PTG
(   35) REAL, DIMENSION(:,:), INTENT(IN)    :: PSOILHCAPZ, PD_G, PDZG
(   36) REAL, DIMENSION(:),   INTENT(IN)    :: PCT, PSOILCONDZ  
(   37) REAL, DIMENSION(:), INTENT(IN)      :: PPS, PTA, PSW_RAD, PQA,                       &
(   38)                                        PVMOD, PVDIR, PLW_RAD, PSR, PRR  
(   39) REAL, DIMENSION(:,:), INTENT(IN)    :: P_DIR_SW, P_SCA_SW
(   40) REAL, DIMENSION(:,:), INTENT(IN)    ::PIMPWET,PIMPDRY
(   41) REAL, DIMENSION(:), INTENT(IN)      :: PZREF, PUREF, PEXNS, PEXNA, PDIRCOSZW,PSLOPEDIR, PRHOA, PALB
(   42) REAL, DIMENSION(:), INTENT(IN)      :: PPEW_A_COEF, PPEW_B_COEF,                   &
(   43)                                        PPET_A_COEF, PPEQ_A_COEF, PPET_B_COEF,      &
(   44)                                        PPEQ_B_COEF  
(   45) INTEGER , DIMENSION(:), INTENT(IN)   ::  KTAB_SYT    ! Array of index defining
(   46) REAL, DIMENSION(:), INTENT(INOUT)   :: PLES3L, PLEL3L, PEVAP, PGRNDFLUX, PDELHEATG, PDELHEATG_SFC
(   47) REAL, DIMENSION(:), INTENT(INOUT)   :: PRI
(   48) REAL, DIMENSION(:), INTENT(OUT)     :: PTHRUFAL, PFLSN_COR, PEVAPCOR, PGSFCSNOW
(   49) REAL, DIMENSION(:), INTENT(OUT)     :: PSNOWSFCH, PDELHEATN, PDELHEATN_SFC
(   50) REAL, DIMENSION(:), INTENT(OUT)     :: PQS
(   51) REAL, DIMENSION(:), INTENT(IN)      :: PZENITH    ! solar zenith angle
(   52) REAL, DIMENSION(:), INTENT(IN)      :: PANGL_ILLUM !BC
(   53) END SUBROUTINE SNOW3L_ISBA
(   54) 
(   55) END INTERFACE
(   56) END MODULE MODI_SNOW3L_ISBA






































NVFORTRAN (Version     23.1)          02/24/2023  13:52:37      page 4

(    1) # 1 "modi_snow3L_isba.F90"
(    1) !depfile:snow3L_isba.F90
(    2) MODULE MODI_SNOW3L_ISBA
(    3) INTERFACE
(    4) SUBROUTINE SNOW3L_ISBA(IO, G, PK, PEK, DK, DEK, DMK, OMEB, HIMPLICIT_WIND,  &
(    5)                       TPTIME,PTSTEP, PVEGTYPE, PTG, PCT, PSOILHCAPZ,        &
(    6)                       PSOILCONDZ, PPS, PTA,PSW_RAD, PQA, PVMOD, PVDIR,      &
(    7)                       PLW_RAD, PRR, PSR, PRHOA, PUREF,PEXNS, PEXNA,         &
(    8)                       PDIRCOSZW,PSLOPEDIR, PZREF, PALB, PD_G, PDZG,         &
(    9)                       PPEW_A_COEF, PPEW_B_COEF, PPET_A_COEF, PPEQ_A_COEF,   &
(   10)                       PPET_B_COEF, PPEQ_B_COEF, PTHRUFAL, PGRNDFLUX,        &
(   11)                       PFLSN_COR,PGSFCSNOW, PEVAPCOR, PLES3L, PLEL3L, PEVAP, &
(   12)                       PSNOWSFCH,PDELHEATN, PDELHEATN_SFC, PRI,PZENITH,      &
(   13)                       PANGL_ILLUM, PDELHEATG,PDELHEATG_SFC,PQS,             &
(   14)                       KTAB_SYT,P_DIR_SW,P_SCA_SW,PIMPWET,PIMPDRY)
(   15) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   16) USE MODD_SFX_GRID_n, ONLY : GRID_t
(   17) USE MODD_ISBA_n, ONLY : ISBA_PE_t, ISBA_P_t
(   18) USE MODD_DIAG_n, ONLY : DIAG_t
(   19) USE MODD_DIAG_EVAP_ISBA_n, ONLY : DIAG_EVAP_ISBA_t
(   20) USE MODD_DIAG_MISC_ISBA_n, ONLY : DIAG_MISC_ISBA_t
(   21) USE MODD_TYPE_DATE_SURF, ONLY: DATE_TIME
(   22) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   23) TYPE(GRID_t), INTENT(INOUT) :: G
(   24) TYPE(ISBA_P_t), INTENT(INOUT) :: PK
(   25) TYPE(ISBA_PE_t), INTENT(INOUT) :: PEK
(   26) TYPE(DIAG_t), INTENT(INOUT) :: DK
(   27) TYPE(DIAG_EVAP_ISBA_t), INTENT(INOUT) :: DEK
(   28) TYPE(DIAG_MISC_ISBA_t), INTENT(INOUT) :: DMK
(   29) LOGICAL, INTENT(IN)                 :: OMEB       ! True = coupled to MEB. This means surface fluxes ae IMPOSED
(   30)  CHARACTER(LEN=*),     INTENT(IN)    :: HIMPLICIT_WIND   ! wind implicitation option
(   31) TYPE(DATE_TIME), INTENT(IN)         :: TPTIME     ! current date and time
(   32) REAL, INTENT(IN)                    :: PTSTEP
(   33) REAL, DIMENSION(:,:), INTENT(IN)    :: PVEGTYPE ! fraction of each vegetation
(   34) REAL, DIMENSION(:,:), INTENT(INOUT) :: PTG
(   35) REAL, DIMENSION(:,:), INTENT(IN)    :: PSOILHCAPZ, PD_G, PDZG
(   36) REAL, DIMENSION(:),   INTENT(IN)    :: PCT, PSOILCONDZ  
(   37) REAL, DIMENSION(:), INTENT(IN)      :: PPS, PTA, PSW_RAD, PQA,                       &
(   38)                                        PVMOD, PVDIR, PLW_RAD, PSR, PRR  
(   39) REAL, DIMENSION(:,:), INTENT(IN)    :: P_DIR_SW, P_SCA_SW
(   40) REAL, DIMENSION(:,:), INTENT(IN)    ::PIMPWET,PIMPDRY
(   41) REAL, DIMENSION(:), INTENT(IN)      :: PZREF, PUREF, PEXNS, PEXNA, PDIRCOSZW,PSLOPEDIR, PRHOA, PALB
(   42) REAL, DIMENSION(:), INTENT(IN)      :: PPEW_A_COEF, PPEW_B_COEF,                   &
(   43)                                        PPET_A_COEF, PPEQ_A_COEF, PPET_B_COEF,      &
(   44)                                        PPEQ_B_COEF  
(   45) INTEGER , DIMENSION(:), INTENT(IN)   ::  KTAB_SYT    ! Array of index defining
(   46) REAL, DIMENSION(:), INTENT(INOUT)   :: PLES3L, PLEL3L, PEVAP, PGRNDFLUX, PDELHEATG, PDELHEATG_SFC
(   47) REAL, DIMENSION(:), INTENT(INOUT)   :: PRI
(   48) REAL, DIMENSION(:), INTENT(OUT)     :: PTHRUFAL, PFLSN_COR, PEVAPCOR, PGSFCSNOW
(   49) REAL, DIMENSION(:), INTENT(OUT)     :: PSNOWSFCH, PDELHEATN, PDELHEATN_SFC
(   50) REAL, DIMENSION(:), INTENT(OUT)     :: PQS
(   51) REAL, DIMENSION(:), INTENT(IN)      :: PZENITH    ! solar zenith angle
(   52) REAL, DIMENSION(:), INTENT(IN)      :: PANGL_ILLUM !BC
(   53) END SUBROUTINE SNOW3L_ISBA
(   54) # 55 "modi_snow3L_isba.F90"
(   55) END INTERFACE
(   56) END MODULE MODI_SNOW3L_ISBA
