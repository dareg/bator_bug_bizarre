


NVFORTRAN (Version     23.1)          02/24/2023  13:52:34      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:34      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_flake_interface.F90

(    1) !depfile:flake_interface.F90
(    2) MODULE MODI_flake_interface 
(    3) INTERFACE
(    4) SUBROUTINE flake_interface (F, KI, &
(    5) ! Atmospheric forcing
(    6)                                dMsnowdt_in, I_atm_in, Q_atm_lw_in, height_u_in, height_tq_in,     &
(    7)                                U_a_in, T_a_in, q_a_in, P_a_in,                                    &
(    8) ! Constant parameters                           
(    9)                                del_time,            &
(   10) ! Parameters that may change                             
(   11)                                albedo,              &
(   12) ! Surface heat, momentum fluxes, and other diags                       
(   13)                                Q_sensible, Q_latent ,Q_momentum, z0t, Qsat, Ri, ustar, Cd_a,      &
(   14)                                Q_watvap, Q_latenti, Q_sublim, Q_atm_lw_up, pswe,                  &
(   15) ! Switches to configure FLake runs
(   16)                                PPEW_A_COEF, PPEW_B_COEF, rho_a, HIMPLICIT_WIND                )  
(   17) USE MODD_FLAKE_n, ONLY : FLAKE_t
(   18) TYPE(FLAKE_t), INTENT(INOUT) :: F
(   19) INTEGER, INTENT(IN)  :: KI              ! number of points
(   20) REAL, DIMENSION(KI), INTENT(IN) ::   &
(   21)     dMsnowdt_in                       ,  &! The rate of snow accumulation [kg m^{-2} s^{-1}]
(   22)     I_atm_in                          ,  &! Solar radiation flux at the surface [W m^{-2}]
(   23)     Q_atm_lw_in                       ,  &! Long-wave radiation flux from the atmosphere [W m^{-2}]
(   24)     height_u_in                       ,  &! Height above the lake surface where the wind speed is measured [m]
(   25)     height_tq_in                      ,  &! Height where temperature and humidity are measured [m]
(   26)     U_a_in                            ,  &! Wind speed at z=height_u_in [m s^{-1}]
(   27)     T_a_in                            ,  &! Air temperature at z=height_tq_in [K]
(   28)     q_a_in                            ,  &! Air specific humidity at z=height_tq_in
(   29)     P_a_in                                ! Surface air pressure [N m^{-2} = kg m^{-1} s^{-2}]  
(   30) REAL, DIMENSION(KI), INTENT(IN) ::   &






NVFORTRAN (Version     23.1)          02/24/2023  13:52:34      page 3

(   31)     del_time                          ,  &! The model time step [s]
(   32)     PPEW_A_COEF                       ,  &! coefficient A (m^2 s kg^{-1}) and B (m s^{-1})
(   33)     PPEW_B_COEF                       ,  &! for wind implicitation :  V+ = - A * rho_a u'w' + B
(   34)     rho_a                                 ! Air density (kg m ^{-3}) (from forcing atm. data)  
(   35)  CHARACTER(LEN=*),     INTENT(IN)  :: HIMPLICIT_WIND   ! wind implicitation option
(   36) REAL, DIMENSION(KI), INTENT(IN)    :: albedo  ! surface albedo with respect to the solar radiation
(   37) REAL, DIMENSION(KI), INTENT(INOUT)  ::    &
(   38)     Q_sensible             ,  &! Sensible heat flux [W m^{-2}]
(   39)     Q_latent               ,  &! Total Latent heat flux [W m^{-2}]
(   40)     Q_watvap               ,  &! Total Flux of water vapour [kg m^{-2} s^{-1}] 
(   41)     Q_latenti              ,  &! Sublimation Latent heat flux [W m^{-2}]
(   42)     Q_sublim               ,  &! Flux of sublimation [kg m^{-2} s^{-1}]    
(   43)     Q_momentum             ,  &! Momentum flux [N m^{-2}]
(   44)     z0t                    ,  &! Roughness length with respect to potential temperature [m]
(   45)     Ri                     ,  &! Gradient Richardson number 
(   46)     ustar                  ,  &! air friction velocity  
(   47)     Cd_a                       ! wind drag coefficient [no unit]
(   48) REAL, DIMENSION(KI), INTENT(OUT)  ::    &
(   49)     Qsat                   ,  &! specific humidity at saturation [kg.kg-1]
(   50)     Q_atm_lw_up            ,  &! Upward longwave flux at t [W m^{-2}]
(   51)     pswe                       ! snow water equivalent [kg.m-2]
(   52) END SUBROUTINE flake_interface
(   53) 
(   54) END INTERFACE
(   55) END MODULE MODI_flake_interface 







































NVFORTRAN (Version     23.1)          02/24/2023  13:52:34      page 4

(    1) # 1 "modi_flake_interface.F90"
(    1) !depfile:flake_interface.F90
(    2) MODULE MODI_flake_interface 
(    3) INTERFACE
(    4) SUBROUTINE flake_interface (F, KI, &
(    5) ! Atmospheric forcing
(    6)                                dMsnowdt_in, I_atm_in, Q_atm_lw_in, height_u_in, height_tq_in,     &
(    7)                                U_a_in, T_a_in, q_a_in, P_a_in,                                    &
(    8) ! Constant parameters                           
(    9)                                del_time,            &
(   10) ! Parameters that may change                             
(   11)                                albedo,              &
(   12) ! Surface heat, momentum fluxes, and other diags                       
(   13)                                Q_sensible, Q_latent ,Q_momentum, z0t, Qsat, Ri, ustar, Cd_a,      &
(   14)                                Q_watvap, Q_latenti, Q_sublim, Q_atm_lw_up, pswe,                  &
(   15) ! Switches to configure FLake runs
(   16)                                PPEW_A_COEF, PPEW_B_COEF, rho_a, HIMPLICIT_WIND                )  
(   17) USE MODD_FLAKE_n, ONLY : FLAKE_t
(   18) TYPE(FLAKE_t), INTENT(INOUT) :: F
(   19) INTEGER, INTENT(IN)  :: KI              ! number of points
(   20) REAL, DIMENSION(KI), INTENT(IN) ::   &
(   21)     dMsnowdt_in                       ,  &! The rate of snow accumulation [kg m^{-2} s^{-1}]
(   22)     I_atm_in                          ,  &! Solar radiation flux at the surface [W m^{-2}]
(   23)     Q_atm_lw_in                       ,  &! Long-wave radiation flux from the atmosphere [W m^{-2}]
(   24)     height_u_in                       ,  &! Height above the lake surface where the wind speed is measured [m]
(   25)     height_tq_in                      ,  &! Height where temperature and humidity are measured [m]
(   26)     U_a_in                            ,  &! Wind speed at z=height_u_in [m s^{-1}]
(   27)     T_a_in                            ,  &! Air temperature at z=height_tq_in [K]
(   28)     q_a_in                            ,  &! Air specific humidity at z=height_tq_in
(   29)     P_a_in                                ! Surface air pressure [N m^{-2} = kg m^{-1} s^{-2}]  
(   30) REAL, DIMENSION(KI), INTENT(IN) ::   &
(   31)     del_time                          ,  &! The model time step [s]
(   32)     PPEW_A_COEF                       ,  &! coefficient A (m^2 s kg^{-1}) and B (m s^{-1})
(   33)     PPEW_B_COEF                       ,  &! for wind implicitation :  V+ = - A * rho_a u'w' + B
(   34)     rho_a                                 ! Air density (kg m ^{-3}) (from forcing atm. data)  
(   35)  CHARACTER(LEN=*),     INTENT(IN)  :: HIMPLICIT_WIND   ! wind implicitation option
(   36) REAL, DIMENSION(KI), INTENT(IN)    :: albedo  ! surface albedo with respect to the solar radiation
(   37) REAL, DIMENSION(KI), INTENT(INOUT)  ::    &
(   38)     Q_sensible             ,  &! Sensible heat flux [W m^{-2}]
(   39)     Q_latent               ,  &! Total Latent heat flux [W m^{-2}]
(   40)     Q_watvap               ,  &! Total Flux of water vapour [kg m^{-2} s^{-1}] 
(   41)     Q_latenti              ,  &! Sublimation Latent heat flux [W m^{-2}]
(   42)     Q_sublim               ,  &! Flux of sublimation [kg m^{-2} s^{-1}]    
(   43)     Q_momentum             ,  &! Momentum flux [N m^{-2}]
(   44)     z0t                    ,  &! Roughness length with respect to potential temperature [m]
(   45)     Ri                     ,  &! Gradient Richardson number 
(   46)     ustar                  ,  &! air friction velocity  
(   47)     Cd_a                       ! wind drag coefficient [no unit]
(   48) REAL, DIMENSION(KI), INTENT(OUT)  ::    &
(   49)     Qsat                   ,  &! specific humidity at saturation [kg.kg-1]
(   50)     Q_atm_lw_up            ,  &! Upward longwave flux at t [W m^{-2}]
(   51)     pswe                       ! snow water equivalent [kg.m-2]
(   52) END SUBROUTINE flake_interface
(   53) # 54 "modi_flake_interface.F90"
(   54) END INTERFACE
(   55) END MODULE MODI_flake_interface 
