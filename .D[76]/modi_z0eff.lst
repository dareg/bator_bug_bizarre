


NVFORTRAN (Version     23.1)          02/24/2023  13:52:07      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:07      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_z0eff.F90

(    1) !depfile:z0eff.F90
(    2) MODULE MODI_Z0EFF 
(    3) INTERFACE
(    4)     SUBROUTINE Z0EFF (HSNOW_SCHEME, &
(    5)                       OMEB, PALFA, PZREF, PUREF, PZ0, PZ0REL, PPSN,             &
(    6)                       PPALPHAN,PZ0LITTER, PWSNOW, ISS, PFF, PZ0_FLOOD,          &
(    7)                       PZ0_O_Z0H, PZ0_WITH_SNOW, PZ0H_WITH_SNOW,PZ0EFF,          &
(    8)                       PZ0G_WITHOUT_SNOW,                                        &
(    9)                       PZ0_MEBV,PZ0H_MEBV,PZ0EFF_MEBV,                           &
(   10)                       PZ0_MEBN,PZ0H_MEBN,PZ0EFF_MEBN                            )
(   11) USE MODD_SSO_n, ONLY : SSO_t
(   12)  CHARACTER(LEN=*), INTENT(IN) :: HSNOW_SCHEME
(   13) LOGICAL, INTENT(IN)             :: OMEB           ! True = patch with multi-energy balance 
(   14) REAL, DIMENSION(:), INTENT(IN)  :: PALFA          ! wind direction from J axis (clockwise)
(   15) REAL, DIMENSION(:), INTENT(IN)  :: PZREF          ! height of atmospheric level
(   16) REAL, DIMENSION(:), INTENT(IN)  :: PUREF          ! reference height for wind
(   17) REAL, DIMENSION(:), INTENT(IN)  :: PZ0            ! vegetation roughness length
(   18) REAL, DIMENSION(:), INTENT(IN)  :: PZ0REL         ! 1d orographic roughness length
(   19) REAL, DIMENSION(:), INTENT(IN)  :: PPSN           ! fraction of snow
(   20) REAL, DIMENSION(:), INTENT(IN)  :: PPALPHAN       ! snow/canopy transition coefficient
(   21) TYPE(SSO_t), INTENT(INOUT) :: ISS
(   22) REAL, DIMENSION(:), INTENT(IN)  :: PZ0_O_Z0H      ! ratio between heat and momentum z0
(   23) REAL, DIMENSION(:), INTENT(IN)  :: PFF            ! fraction of flood
(   24) REAL, DIMENSION(:), INTENT(IN)  :: PZ0_FLOOD      ! floodplains roughness length
(   25) REAL, DIMENSION(:), INTENT(IN)  :: PZ0LITTER      ! ground litter roughness length for MEB
(   26) REAL, DIMENSION(:), INTENT(IN)  :: PWSNOW         ! equivalent snow water content
(   27) REAL, DIMENSION(:), INTENT(OUT) :: PZ0_WITH_SNOW  ! vegetation z0 modified by snow
(   28) REAL, DIMENSION(:), INTENT(OUT) :: PZ0H_WITH_SNOW ! vegetation z0h modified by snow
(   29) REAL, DIMENSION(:), INTENT(OUT) :: PZ0EFF         ! effective z0
(   30) REAL, DIMENSION(:), INTENT(OUT) :: PZ0G_WITHOUT_SNOW  ! roughness length for momentum at snow-free canopy floor






NVFORTRAN (Version     23.1)          02/24/2023  13:52:07      page 3

(   31) REAL, DIMENSION(:), INTENT(OUT) :: PZ0_MEBV           ! roughness length for momentum over MEB vegetation part of patch
(   32) REAL, DIMENSION(:), INTENT(OUT) :: PZ0H_MEBV          ! roughness length for heat over MEB vegetation part of path
(   33) REAL, DIMENSION(:), INTENT(OUT) :: PZ0EFF_MEBV        ! roughness length for momentum over MEB vegetation part of patch
(   34) REAL, DIMENSION(:), INTENT(OUT) :: PZ0_MEBN           ! roughness length for momentum over MEB snow part of patch
(   35) REAL, DIMENSION(:), INTENT(OUT) :: PZ0H_MEBN          ! roughness length for heat over MEB snow part of path
(   36) REAL, DIMENSION(:), INTENT(OUT) :: PZ0EFF_MEBN        ! roughness length for momentum over MEB snow part of patch
(   37) END SUBROUTINE Z0EFF
(   38) 
(   39) END INTERFACE
(   40) END MODULE MODI_Z0EFF 






















































NVFORTRAN (Version     23.1)          02/24/2023  13:52:07      page 4

(    1) # 1 "modi_z0eff.F90"
(    1) !depfile:z0eff.F90
(    2) MODULE MODI_Z0EFF 
(    3) INTERFACE
(    4)     SUBROUTINE Z0EFF (HSNOW_SCHEME, &
(    5)                       OMEB, PALFA, PZREF, PUREF, PZ0, PZ0REL, PPSN,             &
(    6)                       PPALPHAN,PZ0LITTER, PWSNOW, ISS, PFF, PZ0_FLOOD,          &
(    7)                       PZ0_O_Z0H, PZ0_WITH_SNOW, PZ0H_WITH_SNOW,PZ0EFF,          &
(    8)                       PZ0G_WITHOUT_SNOW,                                        &
(    9)                       PZ0_MEBV,PZ0H_MEBV,PZ0EFF_MEBV,                           &
(   10)                       PZ0_MEBN,PZ0H_MEBN,PZ0EFF_MEBN                            )
(   11) USE MODD_SSO_n, ONLY : SSO_t
(   12)  CHARACTER(LEN=*), INTENT(IN) :: HSNOW_SCHEME
(   13) LOGICAL, INTENT(IN)             :: OMEB           ! True = patch with multi-energy balance 
(   14) REAL, DIMENSION(:), INTENT(IN)  :: PALFA          ! wind direction from J axis (clockwise)
(   15) REAL, DIMENSION(:), INTENT(IN)  :: PZREF          ! height of atmospheric level
(   16) REAL, DIMENSION(:), INTENT(IN)  :: PUREF          ! reference height for wind
(   17) REAL, DIMENSION(:), INTENT(IN)  :: PZ0            ! vegetation roughness length
(   18) REAL, DIMENSION(:), INTENT(IN)  :: PZ0REL         ! 1d orographic roughness length
(   19) REAL, DIMENSION(:), INTENT(IN)  :: PPSN           ! fraction of snow
(   20) REAL, DIMENSION(:), INTENT(IN)  :: PPALPHAN       ! snow/canopy transition coefficient
(   21) TYPE(SSO_t), INTENT(INOUT) :: ISS
(   22) REAL, DIMENSION(:), INTENT(IN)  :: PZ0_O_Z0H      ! ratio between heat and momentum z0
(   23) REAL, DIMENSION(:), INTENT(IN)  :: PFF            ! fraction of flood
(   24) REAL, DIMENSION(:), INTENT(IN)  :: PZ0_FLOOD      ! floodplains roughness length
(   25) REAL, DIMENSION(:), INTENT(IN)  :: PZ0LITTER      ! ground litter roughness length for MEB
(   26) REAL, DIMENSION(:), INTENT(IN)  :: PWSNOW         ! equivalent snow water content
(   27) REAL, DIMENSION(:), INTENT(OUT) :: PZ0_WITH_SNOW  ! vegetation z0 modified by snow
(   28) REAL, DIMENSION(:), INTENT(OUT) :: PZ0H_WITH_SNOW ! vegetation z0h modified by snow
(   29) REAL, DIMENSION(:), INTENT(OUT) :: PZ0EFF         ! effective z0
(   30) REAL, DIMENSION(:), INTENT(OUT) :: PZ0G_WITHOUT_SNOW  ! roughness length for momentum at snow-free canopy floor
(   31) REAL, DIMENSION(:), INTENT(OUT) :: PZ0_MEBV           ! roughness length for momentum over MEB vegetation part of patch
(   32) REAL, DIMENSION(:), INTENT(OUT) :: PZ0H_MEBV          ! roughness length for heat over MEB vegetation part of path
(   33) REAL, DIMENSION(:), INTENT(OUT) :: PZ0EFF_MEBV        ! roughness length for momentum over MEB vegetation part of patch
(   34) REAL, DIMENSION(:), INTENT(OUT) :: PZ0_MEBN           ! roughness length for momentum over MEB snow part of patch
(   35) REAL, DIMENSION(:), INTENT(OUT) :: PZ0H_MEBN          ! roughness length for heat over MEB snow part of path
(   36) REAL, DIMENSION(:), INTENT(OUT) :: PZ0EFF_MEBN        ! roughness length for momentum over MEB snow part of patch
(   37) END SUBROUTINE Z0EFF
(   38) # 39 "modi_z0eff.F90"
(   39) END INTERFACE
(   40) END MODULE MODI_Z0EFF 
