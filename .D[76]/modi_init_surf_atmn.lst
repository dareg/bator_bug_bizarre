


NVFORTRAN (Version     23.1)          02/24/2023  13:57:25      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:57:25      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_init_surf_atmn.F90

(    1) !depfile:init_surf_atmn.F90
(    2) MODULE MODI_INIT_SURF_ATM_n 
(    3) INTERFACE
(    4) SUBROUTINE INIT_SURF_ATM_n (YSC, HPROGRAM,HINIT, OLAND_USE,             &
(    5)                             KI,KSV,KSW, HSV,PCO2,PIMPWET,PIMPDRY,PRHOA, &
(    6)                              PZENITH,PAZIM,PSW_BANDS,PDIR_ALB,PSCA_ALB, &
(    7)                              PEMIS,PTSRAD,PTSURF,                       &
(    8)                              KYEAR, KMONTH,KDAY, PTIME, TPDATE_END, AT, &
(    9)                              HATMFILE,HATMFILETYPE, HTEST               )  
(   10) USE MODD_TYPE_DATE_SURF, ONLY : DATE
(   11) USE MODD_SURFEX_n, ONLY : SURFEX_t
(   12) USE MODD_PREP_SNOW    ,  ONLY : NIMPUR
(   13) USE MODD_DATA_COVER_PAR, ONLY : NTILESFC
(   14) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   15) TYPE(SURFEX_t), INTENT(INOUT) :: YSC
(   16)  CHARACTER(LEN=6),                 INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   17)  CHARACTER(LEN=3),                 INTENT(IN)  :: HINIT     ! choice of fields to initialize
(   18) LOGICAL,                          INTENT(IN)  :: OLAND_USE ! 
(   19) INTEGER,                          INTENT(IN)  :: KI        ! number of points
(   20) INTEGER,                          INTENT(IN)  :: KSV       ! number of scalars
(   21) INTEGER,                          INTENT(IN)  :: KSW       ! number of short-wave spectral bands
(   22)  CHARACTER(LEN=6), DIMENSION(KSV), INTENT(IN)  :: HSV       ! name of all scalar variables
(   23) REAL,             DIMENSION(KI),  INTENT(IN)  :: PCO2      ! CO2 concentration (kg/m3)
(   24) REAL,             DIMENSION(KI,NIMPUR),  INTENT(IN)  :: PIMPWET      !  wet deposit coefficient for each impurity type    (g
(   25) REAL,             DIMENSION(KI,NIMPUR),  INTENT(IN)  :: PIMPDRY     !  dry deposit coefficient for each impurity type    (g)
(   26) REAL,             DIMENSION(KI),  INTENT(IN)  :: PRHOA     ! air density
(   27) REAL,             DIMENSION(KI),  INTENT(IN)  :: PZENITH   ! solar zenithal angle
(   28) REAL,             DIMENSION(KI),  INTENT(IN)  :: PAZIM     ! solar azimuthal angle (rad from N, clock)
(   29) REAL,             DIMENSION(KSW), INTENT(IN)  :: PSW_BANDS ! middle wavelength of each band
(   30) REAL,             DIMENSION(KI,KSW),INTENT(OUT) :: PDIR_ALB  ! direct albedo for each band






NVFORTRAN (Version     23.1)          02/24/2023  13:57:25      page 3

(   31) REAL,             DIMENSION(KI,KSW),INTENT(OUT) :: PSCA_ALB  ! diffuse albedo for each band
(   32) REAL,             DIMENSION(KI),  INTENT(OUT) :: PEMIS     ! emissivity
(   33) REAL,             DIMENSION(KI),  INTENT(OUT) :: PTSRAD    ! radiative temperature
(   34) REAL,             DIMENSION(KI),  INTENT(OUT) :: PTSURF    ! surface effective temperature         (K)
(   35) INTEGER,                          INTENT(IN)  :: KYEAR     ! current year (UTC)
(   36) INTEGER,                          INTENT(IN)  :: KMONTH    ! current month (UTC)
(   37) INTEGER,                          INTENT(IN)  :: KDAY      ! current day (UTC)
(   38) REAL,                             INTENT(IN)  :: PTIME     ! current time since
(   39) TYPE(DATE), INTENT(INOUT) :: TPDATE_END
(   40) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   41)  CHARACTER(LEN=28),                INTENT(IN)  :: HATMFILE    ! atmospheric file name
(   42)  CHARACTER(LEN=6),                 INTENT(IN)  :: HATMFILETYPE! atmospheric file type
(   43)  CHARACTER(LEN=2),                 INTENT(IN)  :: HTEST       ! must be equal to 'OK'
(   44) END SUBROUTINE INIT_SURF_ATM_n
(   45) 
(   46) END INTERFACE
(   47) END MODULE MODI_INIT_SURF_ATM_n 















































NVFORTRAN (Version     23.1)          02/24/2023  13:57:25      page 4

(    1) # 1 "modi_init_surf_atmn.F90"
(    1) !depfile:init_surf_atmn.F90
(    2) MODULE MODI_INIT_SURF_ATM_n 
(    3) INTERFACE
(    4) SUBROUTINE INIT_SURF_ATM_n (YSC, HPROGRAM,HINIT, OLAND_USE,             &
(    5)                             KI,KSV,KSW, HSV,PCO2,PIMPWET,PIMPDRY,PRHOA, &
(    6)                              PZENITH,PAZIM,PSW_BANDS,PDIR_ALB,PSCA_ALB, &
(    7)                              PEMIS,PTSRAD,PTSURF,                       &
(    8)                              KYEAR, KMONTH,KDAY, PTIME, TPDATE_END, AT, &
(    9)                              HATMFILE,HATMFILETYPE, HTEST               )  
(   10) USE MODD_TYPE_DATE_SURF, ONLY : DATE
(   11) USE MODD_SURFEX_n, ONLY : SURFEX_t
(   12) USE MODD_PREP_SNOW    ,  ONLY : NIMPUR
(   13) USE MODD_DATA_COVER_PAR, ONLY : NTILESFC
(   14) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   15) TYPE(SURFEX_t), INTENT(INOUT) :: YSC
(   16)  CHARACTER(LEN=6),                 INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   17)  CHARACTER(LEN=3),                 INTENT(IN)  :: HINIT     ! choice of fields to initialize
(   18) LOGICAL,                          INTENT(IN)  :: OLAND_USE ! 
(   19) INTEGER,                          INTENT(IN)  :: KI        ! number of points
(   20) INTEGER,                          INTENT(IN)  :: KSV       ! number of scalars
(   21) INTEGER,                          INTENT(IN)  :: KSW       ! number of short-wave spectral bands
(   22)  CHARACTER(LEN=6), DIMENSION(KSV), INTENT(IN)  :: HSV       ! name of all scalar variables
(   23) REAL,             DIMENSION(KI),  INTENT(IN)  :: PCO2      ! CO2 concentration (kg/m3)
(   24) REAL,             DIMENSION(KI,NIMPUR),  INTENT(IN)  :: PIMPWET      !  wet deposit coefficient for each impurity type    (g)
(   25) REAL,             DIMENSION(KI,NIMPUR),  INTENT(IN)  :: PIMPDRY     !  dry deposit coefficient for each impurity type    (g)
(   26) REAL,             DIMENSION(KI),  INTENT(IN)  :: PRHOA     ! air density
(   27) REAL,             DIMENSION(KI),  INTENT(IN)  :: PZENITH   ! solar zenithal angle
(   28) REAL,             DIMENSION(KI),  INTENT(IN)  :: PAZIM     ! solar azimuthal angle (rad from N, clock)
(   29) REAL,             DIMENSION(KSW), INTENT(IN)  :: PSW_BANDS ! middle wavelength of each band
(   30) REAL,             DIMENSION(KI,KSW),INTENT(OUT) :: PDIR_ALB  ! direct albedo for each band
(   31) REAL,             DIMENSION(KI,KSW),INTENT(OUT) :: PSCA_ALB  ! diffuse albedo for each band
(   32) REAL,             DIMENSION(KI),  INTENT(OUT) :: PEMIS     ! emissivity
(   33) REAL,             DIMENSION(KI),  INTENT(OUT) :: PTSRAD    ! radiative temperature
(   34) REAL,             DIMENSION(KI),  INTENT(OUT) :: PTSURF    ! surface effective temperature         (K)
(   35) INTEGER,                          INTENT(IN)  :: KYEAR     ! current year (UTC)
(   36) INTEGER,                          INTENT(IN)  :: KMONTH    ! current month (UTC)
(   37) INTEGER,                          INTENT(IN)  :: KDAY      ! current day (UTC)
(   38) REAL,                             INTENT(IN)  :: PTIME     ! current time since
(   39) TYPE(DATE), INTENT(INOUT) :: TPDATE_END
(   40) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   41)  CHARACTER(LEN=28),                INTENT(IN)  :: HATMFILE    ! atmospheric file name
(   42)  CHARACTER(LEN=6),                 INTENT(IN)  :: HATMFILETYPE! atmospheric file type
(   43)  CHARACTER(LEN=2),                 INTENT(IN)  :: HTEST       ! must be equal to 'OK'
(   44) END SUBROUTINE INIT_SURF_ATM_n
(   45) # 46 "modi_init_surf_atmn.F90"
(   46) END INTERFACE
(   47) END MODULE MODI_INIT_SURF_ATM_n 
