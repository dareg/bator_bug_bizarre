


NVFORTRAN (Version     23.1)          02/24/2023  13:32:36      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:32:36      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_dustflux_get_mb.F90

(    1) !depfile:dustflux_get_mb.F90
(    2) MODULE MODI_DUSTFLUX_GET_MB
(    3) INTERFACE
(    4) SUBROUTINE DUSTFLUX_GET_MB(     &
(    5)         PUSTAR                    &!I [m/s] Wind friction speed 
(    6)        ,PRHOA                     &!I [kg/m3] air density at 2m height 
(    7)        ,PWG                       &!I [m3/m3] volumetric water content 
(    8)        ,PZ0                       &!I [m] roughness length of surface
(    9)        ,PWSAT                     &!I [m3 m-3] saturation liquid water content
(   10)        ,PCLAY                     &!I [frc] mass fraction clay
(   11)        ,PSAND                     &!I [frc] mass fraction sand
(   12)        ,PDST_EROD                 &!I [frc] erodible surface
(   13)        ,PWIND10M                  &!I [m/s] wind at 10m altitude
(   14)        ,PSFDST                    &!O [kg/m2/sec] Vertical dust flux
(   15)        ,KSIZE                     &!I [nbr] number of points for calculation
(   16)        )
(   17) USE MODD_DSTMBL, ONLY : XFLX_MSS_FDG_FCTM, NTEX, NMODE, NDP, NBIN, XCST_SLT, &
(   18)                         XDMT_SLT_OPT
(   19) INTEGER, INTENT(IN)                  :: KSIZE    ![nbr] length of passed arrays
(   20) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PUSTAR   ![m/s] wind friction speed
(   21) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PRHOA    ![kg/m3] air density at 2m height
(   22) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PCLAY    ![frc] mass fraction clay
(   23) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PSAND    ![frc] mass fraction sand
(   24) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PDST_EROD![frc]
(   25) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PWG      ![m3 m-3] volumetric water fraction
(   26) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PWSAT    ![m3 m-3] saturation water content
(   27) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PZ0      ![m] surface roughness length
(   28) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PWIND10M ![m/s] wind at 10m altitude
(   29) REAL, INTENT(OUT), DIMENSION(KSIZE)  :: PSFDST   ! [kg m-2 s-1] Output flux of atmospheric dust
(   30) END SUBROUTINE DUSTFLUX_GET_MB 






NVFORTRAN (Version     23.1)          02/24/2023  13:32:36      page 3

(   31) 
(   32) END INTERFACE
(   33) END MODULE MODI_DUSTFLUX_GET_MB





























































NVFORTRAN (Version     23.1)          02/24/2023  13:32:36      page 4

(    1) # 1 "modi_dustflux_get_mb.F90"
(    1) !depfile:dustflux_get_mb.F90
(    2) MODULE MODI_DUSTFLUX_GET_MB
(    3) INTERFACE
(    4) SUBROUTINE DUSTFLUX_GET_MB(     &
(    5)         PUSTAR                    &!I [m/s] Wind friction speed 
(    6)        ,PRHOA                     &!I [kg/m3] air density at 2m height 
(    7)        ,PWG                       &!I [m3/m3] volumetric water content 
(    8)        ,PZ0                       &!I [m] roughness length of surface
(    9)        ,PWSAT                     &!I [m3 m-3] saturation liquid water content
(   10)        ,PCLAY                     &!I [frc] mass fraction clay
(   11)        ,PSAND                     &!I [frc] mass fraction sand
(   12)        ,PDST_EROD                 &!I [frc] erodible surface
(   13)        ,PWIND10M                  &!I [m/s] wind at 10m altitude
(   14)        ,PSFDST                    &!O [kg/m2/sec] Vertical dust flux
(   15)        ,KSIZE                     &!I [nbr] number of points for calculation
(   16)        )
(   17) USE MODD_DSTMBL, ONLY : XFLX_MSS_FDG_FCTM, NTEX, NMODE, NDP, NBIN, XCST_SLT, &
(   18)                         XDMT_SLT_OPT
(   19) INTEGER, INTENT(IN)                  :: KSIZE    ![nbr] length of passed arrays
(   20) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PUSTAR   ![m/s] wind friction speed
(   21) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PRHOA    ![kg/m3] air density at 2m height
(   22) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PCLAY    ![frc] mass fraction clay
(   23) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PSAND    ![frc] mass fraction sand
(   24) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PDST_EROD![frc]
(   25) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PWG      ![m3 m-3] volumetric water fraction
(   26) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PWSAT    ![m3 m-3] saturation water content
(   27) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PZ0      ![m] surface roughness length
(   28) REAL, INTENT(IN), DIMENSION(KSIZE)   :: PWIND10M ![m/s] wind at 10m altitude
(   29) REAL, INTENT(OUT), DIMENSION(KSIZE)  :: PSFDST   ! [kg m-2 s-1] Output flux of atmospheric dust
(   30) END SUBROUTINE DUSTFLUX_GET_MB 
(   31) # 32 "modi_dustflux_get_mb.F90"
(   32) END INTERFACE
(   33) END MODULE MODI_DUSTFLUX_GET_MB
