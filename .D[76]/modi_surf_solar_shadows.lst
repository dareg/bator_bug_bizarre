


NVFORTRAN (Version     23.1)          02/24/2023  13:31:36      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:31:36      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_surf_solar_shadows.F90

(    1) !depfile:surf_solar_shadows.F90
(    2) MODULE MODI_SURF_SOLAR_SHADOWS 
(    3) INTERFACE
(    4) SUBROUTINE SURF_SOLAR_SHADOWS (PMAP,PXHAT,PYHAT,PCOSZEN,PSINZEN,PAZIMSOL,  &
(    5)                                PZS,PZS_XY,ZXHAT_ll,ZYHAT_ll,IIOR_ll,       &
(    6)                                IJOR_ll,ZZS_ll,ZZS_XY_ll,PDIRSWDT,PDIRSRFSWD)
(    7) REAL, DIMENSION(:,:),     INTENT(IN) :: PMAP         ! map factor
(    8) REAL, DIMENSION(:),       INTENT(IN) :: PXHAT        ! X coordinate
(    9) REAL, DIMENSION(:),       INTENT(IN) :: PYHAT        ! Y coordinate
(   10) REAL, DIMENSION(:,:),     INTENT(IN) :: PCOSZEN ! COS(zenithal solar angle)
(   11) REAL, DIMENSION(:,:),     INTENT(IN) :: PSINZEN ! SIN(zenithal solar angle)
(   12) REAL, DIMENSION(:,:),     INTENT(IN) :: PAZIMSOL! azimuthal solar angle
(   13) REAL, DIMENSION(:,:),     INTENT(IN) :: PZS        ! (resolved) model orography
(   14) REAL, DIMENSION(:,:),     INTENT(IN) :: PZS_XY     ! orography at vort. points
(   15) REAL, DIMENSION(:),       INTENT(IN) :: ZXHAT_ll   ! X coordinate (all processors)
(   16) REAL, DIMENSION(:),       INTENT(IN) :: ZYHAT_ll   ! Y coordinate (all processors)
(   17) INTEGER,                  INTENT(IN) :: IIOR_ll    ! position of SW corner of current processor domain
(   18) INTEGER,                  INTENT(IN) :: IJOR_ll    ! position of SW corner of current processor domain
(   19) REAL, DIMENSION(:,:),     INTENT(IN) :: ZZS_ll     ! orography at center of grid meshes
(   20) REAL, DIMENSION(:,:),     INTENT(IN) :: ZZS_XY_ll  ! orography at SW corner of grid meshes
(   21) REAL, DIMENSION(:,:,:,:), INTENT(INOUT):: PDIRSWDT   ! SW Flux received by
(   22) REAL, DIMENSION(:,:,:),   INTENT(OUT)  :: PDIRSRFSWD ! SuRF. DIRect SW Flux
(   23) INTEGER, PARAMETER :: JPHEXT  = 1           ! Number of points around the physical area of computation
(   24) END SUBROUTINE SURF_SOLAR_SHADOWS
(   25) 
(   26) END INTERFACE
(   27) END MODULE MODI_SURF_SOLAR_SHADOWS 









NVFORTRAN (Version     23.1)          02/24/2023  13:31:36      page 3

(    1) # 1 "modi_surf_solar_shadows.F90"
(    1) !depfile:surf_solar_shadows.F90
(    2) MODULE MODI_SURF_SOLAR_SHADOWS 
(    3) INTERFACE
(    4) SUBROUTINE SURF_SOLAR_SHADOWS (PMAP,PXHAT,PYHAT,PCOSZEN,PSINZEN,PAZIMSOL,  &
(    5)                                PZS,PZS_XY,ZXHAT_ll,ZYHAT_ll,IIOR_ll,       &
(    6)                                IJOR_ll,ZZS_ll,ZZS_XY_ll,PDIRSWDT,PDIRSRFSWD)
(    7) REAL, DIMENSION(:,:),     INTENT(IN) :: PMAP         ! map factor
(    8) REAL, DIMENSION(:),       INTENT(IN) :: PXHAT        ! X coordinate
(    9) REAL, DIMENSION(:),       INTENT(IN) :: PYHAT        ! Y coordinate
(   10) REAL, DIMENSION(:,:),     INTENT(IN) :: PCOSZEN ! COS(zenithal solar angle)
(   11) REAL, DIMENSION(:,:),     INTENT(IN) :: PSINZEN ! SIN(zenithal solar angle)
(   12) REAL, DIMENSION(:,:),     INTENT(IN) :: PAZIMSOL! azimuthal solar angle
(   13) REAL, DIMENSION(:,:),     INTENT(IN) :: PZS        ! (resolved) model orography
(   14) REAL, DIMENSION(:,:),     INTENT(IN) :: PZS_XY     ! orography at vort. points
(   15) REAL, DIMENSION(:),       INTENT(IN) :: ZXHAT_ll   ! X coordinate (all processors)
(   16) REAL, DIMENSION(:),       INTENT(IN) :: ZYHAT_ll   ! Y coordinate (all processors)
(   17) INTEGER,                  INTENT(IN) :: IIOR_ll    ! position of SW corner of current processor domain
(   18) INTEGER,                  INTENT(IN) :: IJOR_ll    ! position of SW corner of current processor domain
(   19) REAL, DIMENSION(:,:),     INTENT(IN) :: ZZS_ll     ! orography at center of grid meshes
(   20) REAL, DIMENSION(:,:),     INTENT(IN) :: ZZS_XY_ll  ! orography at SW corner of grid meshes
(   21) REAL, DIMENSION(:,:,:,:), INTENT(INOUT):: PDIRSWDT   ! SW Flux received by
(   22) REAL, DIMENSION(:,:,:),   INTENT(OUT)  :: PDIRSRFSWD ! SuRF. DIRect SW Flux
(   23) INTEGER, PARAMETER :: JPHEXT  = 1           ! Number of points around the physical area of computation
(   24) END SUBROUTINE SURF_SOLAR_SHADOWS
(   25) # 26 "modi_surf_solar_shadows.F90"
(   26) END INTERFACE
(   27) END MODULE MODI_SURF_SOLAR_SHADOWS 
