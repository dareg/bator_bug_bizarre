


NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_avg_urban_fluxes.F90

(    1) !depfile:avg_urban_fluxes.F90
(    2) MODULE MODI_AVG_URBAN_FLUXES
(    3) INTERFACE
(    4)     SUBROUTINE AVG_URBAN_FLUXES(TOP, T, B, TPN, DMT,                               &
(    5)                                 PTS_TWN, PEMIS_TWN,  PT_CAN,                       &
(    6)                                 PQ_CAN, PT_LOWCAN, PQ_LOWCAN, PTA, PQA, PRHOA, PPS,&
(    7)                                 PH_TRAFFIC, PLE_TRAFFIC, PWL_O_GRND, PESN_RF,      &
(    8)                                 PEMIS_GR, PLW_RAD, PAC_RF, PAC_RF_WAT, PAC_WL,     &
(    9)                                 PAC_RD, PAC_RD_WAT, PAC_TOP, PAC_GD, PQSAT_GD,     &
(   10)                                 PAC_AGG_GD, PHU_AGG_GD, PQSAT_RF, PQSAT_RD,        &
(   11)                                 PDELT_RF, PDELT_RD, PRF_FRAC, PWL_FRAC, PRD_FRAC,  &
(   12)                                 PGD_FRAC, PTOTS_O_HORS, PDF_RF, PDN_RF, PDF_RD,    &
(   13)                                 PDN_RD, PLE_WL_A, PLE_WL_B, PLEW_RF, PLESN_RF,     &
(   14)                                 PLEW_RD, PLESN_RD, PHSN_RD,                        &
(   15)                                 PTSRAD_GD, PRN_GD, PH_GD, PLE_GD, PGFLUX_GD, PEVAP_GD,&
(   16)                                 PRUNOFF_GD, PEVAP_GR, PRUNOFF_GR, PDRAIN_GR,       &
(   17)                                 PRN_GRND, PH_GRND, PLE_GRND, PGFLX_GRND,           &
(   18)                                 PRN_TWN, PH_TWN, PLE_TWN, PGFLX_TWN, PEVAP_TWN,    &
(   19)                                 PEMIT_LW_RD, PEMIT_LW_GD, PEMIT_LW_GRND, PEMIS_GD  )
(   20) USE MODD_TEB_OPTION_n, ONLY : TEB_OPTIONS_t
(   21) USE MODD_TEB_n, ONLY : TEB_t
(   22) USE MODD_BEM_n, ONLY : BEM_t
(   23) USE MODD_TEB_PANEL_n, ONLY : TEB_PANEL_t
(   24) USE MODD_DIAG_MISC_TEB_n, ONLY : DIAG_MISC_TEB_t
(   25) TYPE(TEB_OPTIONS_t), INTENT(INOUT) :: TOP
(   26) TYPE(TEB_t), INTENT(INOUT) :: T
(   27) TYPE(BEM_t), INTENT(INOUT) :: B
(   28) TYPE(TEB_PANEL_t), INTENT(INOUT) :: TPN
(   29) TYPE(DIAG_MISC_TEB_t), INTENT(INOUT) :: DMT
(   30) REAL, DIMENSION(:), INTENT(OUT)   :: PTS_TWN           ! town surface temperature






NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 3

(   31) REAL, DIMENSION(:), INTENT(OUT)   :: PEMIS_TWN         ! town equivalent emissivity
(   32) REAL, DIMENSION(:), INTENT(INOUT) :: PT_CAN            ! canyon air temperature
(   33) REAL, DIMENSION(:), INTENT(INOUT) :: PQ_CAN            ! canyon air specific humidity
(   34) REAL, DIMENSION(:), INTENT(IN)    :: PT_LOWCAN         ! low canyon air temperature
(   35) REAL, DIMENSION(:), INTENT(IN)    :: PQ_LOWCAN         ! low canyon air specific humidity
(   36) REAL, DIMENSION(:), INTENT(IN)    :: PTA               ! temperature at roof level
(   37) REAL, DIMENSION(:), INTENT(IN)    :: PQA               ! specific humidity
(   38) REAL, DIMENSION(:), INTENT(IN)    :: PRHOA             ! air density
(   39) REAL, DIMENSION(:), INTENT(IN)    :: PPS               ! surface pressure
(   40) REAL, DIMENSION(:), INTENT(IN)    :: PH_TRAFFIC        ! anthropogenic sensible
(   41) REAL, DIMENSION(:), INTENT(IN)    :: PLE_TRAFFIC       ! anthropogenic latent
(   42) REAL, DIMENSION(:), INTENT(IN)    :: PWL_O_GRND        ! wall Surf. / ground (road+green) Surf.
(   43) REAL, DIMENSION(:), INTENT(IN)    :: PESN_RF           ! snow roof emissivity
(   44) REAL, DIMENSION(:), INTENT(IN)    :: PEMIS_GR          ! green roof emissivity
(   45) REAL, DIMENSION(:), INTENT(IN)    :: PLW_RAD           ! incoming longwave rad.
(   46) REAL, DIMENSION(:), INTENT(IN)    :: PAC_RF            ! surface conductance
(   47) REAL, DIMENSION(:), INTENT(IN)    :: PAC_RF_WAT        ! surface conductance
(   48) REAL, DIMENSION(:), INTENT(IN)    :: PAC_WL            ! surface conductance
(   49) REAL, DIMENSION(:), INTENT(IN)    :: PAC_RD            ! surface conductance
(   50) REAL, DIMENSION(:), INTENT(IN)    :: PAC_RD_WAT        ! surface conductance
(   51) REAL, DIMENSION(:), INTENT(IN)    :: PAC_TOP           ! aerodynamical conductance
(   52) REAL, DIMENSION(:), INTENT(IN)    :: PAC_GD            ! aerodynamical conductance
(   53) REAL, DIMENSION(:), INTENT(IN)    :: PQSAT_GD      ! q_sat(Ts)
(   54) REAL, DIMENSION(:), INTENT(IN)    :: PAC_AGG_GD    ! aggregated aerodyn resistance for green areas
(   55) REAL, DIMENSION(:), INTENT(IN)    :: PHU_AGG_GD    ! aggregated relative humidity for green areas
(   56) REAL, DIMENSION(:), INTENT(IN)    :: PQSAT_RF        ! q_sat(Ts)
(   57) REAL, DIMENSION(:), INTENT(IN)    :: PQSAT_RD        ! q_sat(Ts)
(   58) REAL, DIMENSION(:), INTENT(IN)    :: PDELT_RF        ! water fraction on snow-free
(   59) REAL, DIMENSION(:), INTENT(IN)    :: PDELT_RD        ! roof and roads
(   60) REAL, DIMENSION(:), INTENT(IN)    :: PRF_FRAC        ! roof, wall,
(   61) REAL, DIMENSION(:), INTENT(IN)    :: PWL_FRAC        ! road, and green area
(   62) REAL, DIMENSION(:), INTENT(IN)    :: PRD_FRAC        ! fractions
(   63) REAL, DIMENSION(:), INTENT(IN)    :: PGD_FRAC        ! of exchange surf.
(   64) REAL, DIMENSION(:), INTENT(IN)    :: PTOTS_O_HORS    ! total canyon+roof surface
(   65) REAL, DIMENSION(:), INTENT(IN)    :: PDF_RF          ! snow-free    roof fraction
(   66) REAL, DIMENSION(:), INTENT(IN)    :: PDN_RF          ! snow-covered roof fraction
(   67) REAL, DIMENSION(:), INTENT(IN)    :: PDF_RD          ! snow-free    road fraction
(   68) REAL, DIMENSION(:), INTENT(IN)    :: PDN_RD          ! snow-covered road fraction
(   69) REAL, DIMENSION(:), INTENT(IN)    :: PLE_WL_A        ! latent heat flux over wall
(   70) REAL, DIMENSION(:), INTENT(IN)    :: PLE_WL_B        ! latent heat flux over wall
(   71) REAL, DIMENSION(:), INTENT(IN)    :: PLEW_RF         ! latent heat flux of snowfree roof
(   72) REAL, DIMENSION(:), INTENT(IN)    :: PLESN_RF        ! latent heat flux over snow
(   73) REAL, DIMENSION(:), INTENT(IN)    :: PLEW_RD         ! latent heat flux of snowfree road
(   74) REAL, DIMENSION(:), INTENT(IN)    :: PLESN_RD        ! latent heat flux over snow
(   75) REAL, DIMENSION(:), INTENT(IN)    :: PHSN_RD         ! sensible heat flux over snow
(   76) REAL, DIMENSION(:), INTENT(IN)    :: PTSRAD_GD     ! green area surface temperature
(   77) REAL, DIMENSION(:), INTENT(IN)    :: PRN_GD        ! net radiation over green areas
(   78) REAL, DIMENSION(:), INTENT(IN)    :: PH_GD         ! sensible heat flux over green areas
(   79) REAL, DIMENSION(:), INTENT(IN)    :: PLE_GD        ! latent heat flux over green areas
(   80) REAL, DIMENSION(:), INTENT(IN)    :: PGFLUX_GD     ! flux through the green areas
(   81) REAL, DIMENSION(:), INTENT(IN)    :: PEVAP_GD      ! evaporation over gardens
(   82) REAL, DIMENSION(:), INTENT(IN)    :: PRUNOFF_GD    ! surface runoff over green areas      (kg/m2/s)
(   83) REAL, DIMENSION(:), INTENT(IN)    :: PEVAP_GR      ! evaporation over green roofs
(   84) REAL, DIMENSION(:), INTENT(IN)    :: PRUNOFF_GR    ! surface runoff over green roofs      (kg/m2/s)
(   85) REAL, DIMENSION(:), INTENT(IN)    :: PDRAIN_GR     ! outlet drainage at green roof base   (kg/m2/s)
(   86) REAL, DIMENSION(:), INTENT(OUT)   :: PRN_GRND         ! net radiation over ground
(   87) REAL, DIMENSION(:), INTENT(OUT)   :: PH_GRND          ! sensible heat flux over ground
(   88) REAL, DIMENSION(:), INTENT(OUT)   :: PLE_GRND         ! latent heat flux over ground






NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 4

(   89) REAL, DIMENSION(:), INTENT(OUT)   :: PGFLX_GRND       ! flux through the ground
(   90) REAL, DIMENSION(:), INTENT(OUT)   :: PRN_TWN          ! net radiation over town
(   91) REAL, DIMENSION(:), INTENT(OUT)   :: PH_TWN           ! sensible heat flux over town
(   92) REAL, DIMENSION(:), INTENT(OUT)   :: PLE_TWN          ! latent heat flux over town
(   93) REAL, DIMENSION(:), INTENT(OUT)   :: PGFLX_TWN        ! flux through the ground for town
(   94) REAL, DIMENSION(:), INTENT(OUT)   :: PEVAP_TWN        ! evaporation (kg/m2/s)
(   95) REAL, DIMENSION(:), INTENT(IN)    :: PEMIT_LW_RD   ! LW emitted by the road (W/m2 road)
(   96) REAL, DIMENSION(:), INTENT(IN)    :: PEMIT_LW_GD   ! LW emitted by the garden (W/m2 garden)
(   97) REAL, DIMENSION(:), INTENT(OUT)   :: PEMIT_LW_GRND ! LW emitted by the ground (road+garden) (W/m2 ground)
(   98) REAL, DIMENSION(:), INTENT(IN)    :: PEMIS_GD  ! garden emissivity
(   99) END SUBROUTINE AVG_URBAN_FLUXES
(  100) 
(  101) END INTERFACE
(  102) END MODULE MODI_AVG_URBAN_FLUXES


















































NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 5

(    1) # 1 "modi_avg_urban_fluxes.F90"
(    1) !depfile:avg_urban_fluxes.F90
(    2) MODULE MODI_AVG_URBAN_FLUXES
(    3) INTERFACE
(    4)     SUBROUTINE AVG_URBAN_FLUXES(TOP, T, B, TPN, DMT,                               &
(    5)                                 PTS_TWN, PEMIS_TWN,  PT_CAN,                       &
(    6)                                 PQ_CAN, PT_LOWCAN, PQ_LOWCAN, PTA, PQA, PRHOA, PPS,&
(    7)                                 PH_TRAFFIC, PLE_TRAFFIC, PWL_O_GRND, PESN_RF,      &
(    8)                                 PEMIS_GR, PLW_RAD, PAC_RF, PAC_RF_WAT, PAC_WL,     &
(    9)                                 PAC_RD, PAC_RD_WAT, PAC_TOP, PAC_GD, PQSAT_GD,     &
(   10)                                 PAC_AGG_GD, PHU_AGG_GD, PQSAT_RF, PQSAT_RD,        &
(   11)                                 PDELT_RF, PDELT_RD, PRF_FRAC, PWL_FRAC, PRD_FRAC,  &
(   12)                                 PGD_FRAC, PTOTS_O_HORS, PDF_RF, PDN_RF, PDF_RD,    &
(   13)                                 PDN_RD, PLE_WL_A, PLE_WL_B, PLEW_RF, PLESN_RF,     &
(   14)                                 PLEW_RD, PLESN_RD, PHSN_RD,                        &
(   15)                                 PTSRAD_GD, PRN_GD, PH_GD, PLE_GD, PGFLUX_GD, PEVAP_GD,&
(   16)                                 PRUNOFF_GD, PEVAP_GR, PRUNOFF_GR, PDRAIN_GR,       &
(   17)                                 PRN_GRND, PH_GRND, PLE_GRND, PGFLX_GRND,           &
(   18)                                 PRN_TWN, PH_TWN, PLE_TWN, PGFLX_TWN, PEVAP_TWN,    &
(   19)                                 PEMIT_LW_RD, PEMIT_LW_GD, PEMIT_LW_GRND, PEMIS_GD  )
(   20) USE MODD_TEB_OPTION_n, ONLY : TEB_OPTIONS_t
(   21) USE MODD_TEB_n, ONLY : TEB_t
(   22) USE MODD_BEM_n, ONLY : BEM_t
(   23) USE MODD_TEB_PANEL_n, ONLY : TEB_PANEL_t
(   24) USE MODD_DIAG_MISC_TEB_n, ONLY : DIAG_MISC_TEB_t
(   25) TYPE(TEB_OPTIONS_t), INTENT(INOUT) :: TOP
(   26) TYPE(TEB_t), INTENT(INOUT) :: T
(   27) TYPE(BEM_t), INTENT(INOUT) :: B
(   28) TYPE(TEB_PANEL_t), INTENT(INOUT) :: TPN
(   29) TYPE(DIAG_MISC_TEB_t), INTENT(INOUT) :: DMT
(   30) REAL, DIMENSION(:), INTENT(OUT)   :: PTS_TWN           ! town surface temperature
(   31) REAL, DIMENSION(:), INTENT(OUT)   :: PEMIS_TWN         ! town equivalent emissivity
(   32) REAL, DIMENSION(:), INTENT(INOUT) :: PT_CAN            ! canyon air temperature
(   33) REAL, DIMENSION(:), INTENT(INOUT) :: PQ_CAN            ! canyon air specific humidity
(   34) REAL, DIMENSION(:), INTENT(IN)    :: PT_LOWCAN         ! low canyon air temperature
(   35) REAL, DIMENSION(:), INTENT(IN)    :: PQ_LOWCAN         ! low canyon air specific humidity
(   36) REAL, DIMENSION(:), INTENT(IN)    :: PTA               ! temperature at roof level
(   37) REAL, DIMENSION(:), INTENT(IN)    :: PQA               ! specific humidity
(   38) REAL, DIMENSION(:), INTENT(IN)    :: PRHOA             ! air density
(   39) REAL, DIMENSION(:), INTENT(IN)    :: PPS               ! surface pressure
(   40) REAL, DIMENSION(:), INTENT(IN)    :: PH_TRAFFIC        ! anthropogenic sensible
(   41) REAL, DIMENSION(:), INTENT(IN)    :: PLE_TRAFFIC       ! anthropogenic latent
(   42) REAL, DIMENSION(:), INTENT(IN)    :: PWL_O_GRND        ! wall Surf. / ground (road+green) Surf.
(   43) REAL, DIMENSION(:), INTENT(IN)    :: PESN_RF           ! snow roof emissivity
(   44) REAL, DIMENSION(:), INTENT(IN)    :: PEMIS_GR          ! green roof emissivity
(   45) REAL, DIMENSION(:), INTENT(IN)    :: PLW_RAD           ! incoming longwave rad.
(   46) REAL, DIMENSION(:), INTENT(IN)    :: PAC_RF            ! surface conductance
(   47) REAL, DIMENSION(:), INTENT(IN)    :: PAC_RF_WAT        ! surface conductance
(   48) REAL, DIMENSION(:), INTENT(IN)    :: PAC_WL            ! surface conductance
(   49) REAL, DIMENSION(:), INTENT(IN)    :: PAC_RD            ! surface conductance
(   50) REAL, DIMENSION(:), INTENT(IN)    :: PAC_RD_WAT        ! surface conductance
(   51) REAL, DIMENSION(:), INTENT(IN)    :: PAC_TOP           ! aerodynamical conductance
(   52) REAL, DIMENSION(:), INTENT(IN)    :: PAC_GD            ! aerodynamical conductance
(   53) REAL, DIMENSION(:), INTENT(IN)    :: PQSAT_GD      ! q_sat(Ts)
(   54) REAL, DIMENSION(:), INTENT(IN)    :: PAC_AGG_GD    ! aggregated aerodyn resistance for green areas
(   55) REAL, DIMENSION(:), INTENT(IN)    :: PHU_AGG_GD    ! aggregated relative humidity for green areas
(   56) REAL, DIMENSION(:), INTENT(IN)    :: PQSAT_RF        ! q_sat(Ts)
(   57) REAL, DIMENSION(:), INTENT(IN)    :: PQSAT_RD        ! q_sat(Ts)






NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 6

(   58) REAL, DIMENSION(:), INTENT(IN)    :: PDELT_RF        ! water fraction on snow-free
(   59) REAL, DIMENSION(:), INTENT(IN)    :: PDELT_RD        ! roof and roads
(   60) REAL, DIMENSION(:), INTENT(IN)    :: PRF_FRAC        ! roof, wall,
(   61) REAL, DIMENSION(:), INTENT(IN)    :: PWL_FRAC        ! road, and green area
(   62) REAL, DIMENSION(:), INTENT(IN)    :: PRD_FRAC        ! fractions
(   63) REAL, DIMENSION(:), INTENT(IN)    :: PGD_FRAC        ! of exchange surf.
(   64) REAL, DIMENSION(:), INTENT(IN)    :: PTOTS_O_HORS    ! total canyon+roof surface
(   65) REAL, DIMENSION(:), INTENT(IN)    :: PDF_RF          ! snow-free    roof fraction
(   66) REAL, DIMENSION(:), INTENT(IN)    :: PDN_RF          ! snow-covered roof fraction
(   67) REAL, DIMENSION(:), INTENT(IN)    :: PDF_RD          ! snow-free    road fraction
(   68) REAL, DIMENSION(:), INTENT(IN)    :: PDN_RD          ! snow-covered road fraction
(   69) REAL, DIMENSION(:), INTENT(IN)    :: PLE_WL_A        ! latent heat flux over wall
(   70) REAL, DIMENSION(:), INTENT(IN)    :: PLE_WL_B        ! latent heat flux over wall
(   71) REAL, DIMENSION(:), INTENT(IN)    :: PLEW_RF         ! latent heat flux of snowfree roof
(   72) REAL, DIMENSION(:), INTENT(IN)    :: PLESN_RF        ! latent heat flux over snow
(   73) REAL, DIMENSION(:), INTENT(IN)    :: PLEW_RD         ! latent heat flux of snowfree road
(   74) REAL, DIMENSION(:), INTENT(IN)    :: PLESN_RD        ! latent heat flux over snow
(   75) REAL, DIMENSION(:), INTENT(IN)    :: PHSN_RD         ! sensible heat flux over snow
(   76) REAL, DIMENSION(:), INTENT(IN)    :: PTSRAD_GD     ! green area surface temperature
(   77) REAL, DIMENSION(:), INTENT(IN)    :: PRN_GD        ! net radiation over green areas
(   78) REAL, DIMENSION(:), INTENT(IN)    :: PH_GD         ! sensible heat flux over green areas
(   79) REAL, DIMENSION(:), INTENT(IN)    :: PLE_GD        ! latent heat flux over green areas
(   80) REAL, DIMENSION(:), INTENT(IN)    :: PGFLUX_GD     ! flux through the green areas
(   81) REAL, DIMENSION(:), INTENT(IN)    :: PEVAP_GD      ! evaporation over gardens
(   82) REAL, DIMENSION(:), INTENT(IN)    :: PRUNOFF_GD    ! surface runoff over green areas      (kg/m2/s)
(   83) REAL, DIMENSION(:), INTENT(IN)    :: PEVAP_GR      ! evaporation over green roofs
(   84) REAL, DIMENSION(:), INTENT(IN)    :: PRUNOFF_GR    ! surface runoff over green roofs      (kg/m2/s)
(   85) REAL, DIMENSION(:), INTENT(IN)    :: PDRAIN_GR     ! outlet drainage at green roof base   (kg/m2/s)
(   86) REAL, DIMENSION(:), INTENT(OUT)   :: PRN_GRND         ! net radiation over ground
(   87) REAL, DIMENSION(:), INTENT(OUT)   :: PH_GRND          ! sensible heat flux over ground
(   88) REAL, DIMENSION(:), INTENT(OUT)   :: PLE_GRND         ! latent heat flux over ground
(   89) REAL, DIMENSION(:), INTENT(OUT)   :: PGFLX_GRND       ! flux through the ground
(   90) REAL, DIMENSION(:), INTENT(OUT)   :: PRN_TWN          ! net radiation over town
(   91) REAL, DIMENSION(:), INTENT(OUT)   :: PH_TWN           ! sensible heat flux over town
(   92) REAL, DIMENSION(:), INTENT(OUT)   :: PLE_TWN          ! latent heat flux over town
(   93) REAL, DIMENSION(:), INTENT(OUT)   :: PGFLX_TWN        ! flux through the ground for town
(   94) REAL, DIMENSION(:), INTENT(OUT)   :: PEVAP_TWN        ! evaporation (kg/m2/s)
(   95) REAL, DIMENSION(:), INTENT(IN)    :: PEMIT_LW_RD   ! LW emitted by the road (W/m2 road)
(   96) REAL, DIMENSION(:), INTENT(IN)    :: PEMIT_LW_GD   ! LW emitted by the garden (W/m2 garden)
(   97) REAL, DIMENSION(:), INTENT(OUT)   :: PEMIT_LW_GRND ! LW emitted by the ground (road+garden) (W/m2 ground)
(   98) REAL, DIMENSION(:), INTENT(IN)    :: PEMIS_GD  ! garden emissivity
(   99) END SUBROUTINE AVG_URBAN_FLUXES
(  100) # 101 "modi_avg_urban_fluxes.F90"
(  101) END INTERFACE
(  102) END MODULE MODI_AVG_URBAN_FLUXES
