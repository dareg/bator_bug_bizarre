


NVFORTRAN (Version     23.1)          02/24/2023  13:52:38      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:38      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_prep_hor_watflux_field.F90

(    1) !depfile:prep_hor_watflux_field.F90
(    2) MODULE MODI_PREP_HOR_WATFLUX_FIELD 
(    3) INTERFACE
(    4) SUBROUTINE PREP_HOR_WATFLUX_FIELD (DTCO, U, GCP, KLAT, W, &
(    5)                                    HPROGRAM,HSURF,HATMFILE,HATMFILETYPE,HPGDFILE,HPGDFILETYPE,YDCTL)
(    6) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(    7) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(    8) USE MODD_GRID_CONF_PROJ_n, ONLY : GRID_CONF_PROJ_t
(    9) USE MODD_WATFLUX_n, ONLY : WATFLUX_t
(   10) USE MODE_PREP_CTL, ONLY : PREP_CTL, PREP_CTL_INT_PART2, PREP_CTL_INT_PART4
(   11) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   12) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   13) TYPE(GRID_CONF_PROJ_t),INTENT(INOUT) :: GCP
(   14) INTEGER, INTENT(IN) :: KLAT
(   15) TYPE(WATFLUX_t), INTENT(INOUT) :: W
(   16) TYPE (PREP_CTL),    INTENT (INOUT) :: YDCTL
(   17)  CHARACTER(LEN=6),   INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   18)  CHARACTER(LEN=7),   INTENT(IN)  :: HSURF     ! type of field
(   19)  CHARACTER(LEN=28),  INTENT(IN)  :: HATMFILE    ! name of the Atmospheric file
(   20)  CHARACTER(LEN=6),   INTENT(IN)  :: HATMFILETYPE! type of the Atmospheric file
(   21)  CHARACTER(LEN=28),  INTENT(IN)  :: HPGDFILE    ! name of the Atmospheric file
(   22)  CHARACTER(LEN=6),   INTENT(IN)  :: HPGDFILETYPE! type of the Atmospheric file
(   23) END SUBROUTINE PREP_HOR_WATFLUX_FIELD
(   24) 
(   25) END INTERFACE
(   26) END MODULE MODI_PREP_HOR_WATFLUX_FIELD 










NVFORTRAN (Version     23.1)          02/24/2023  13:52:38      page 3

(    1) # 1 "modi_prep_hor_watflux_field.F90"
(    1) !depfile:prep_hor_watflux_field.F90
(    2) MODULE MODI_PREP_HOR_WATFLUX_FIELD 
(    3) INTERFACE
(    4) SUBROUTINE PREP_HOR_WATFLUX_FIELD (DTCO, U, GCP, KLAT, W, &
(    5)                                    HPROGRAM,HSURF,HATMFILE,HATMFILETYPE,HPGDFILE,HPGDFILETYPE,YDCTL)
(    6) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(    7) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(    8) USE MODD_GRID_CONF_PROJ_n, ONLY : GRID_CONF_PROJ_t
(    9) USE MODD_WATFLUX_n, ONLY : WATFLUX_t
(   10) USE MODE_PREP_CTL, ONLY : PREP_CTL, PREP_CTL_INT_PART2, PREP_CTL_INT_PART4
(   11) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   12) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   13) TYPE(GRID_CONF_PROJ_t),INTENT(INOUT) :: GCP
(   14) INTEGER, INTENT(IN) :: KLAT
(   15) TYPE(WATFLUX_t), INTENT(INOUT) :: W
(   16) TYPE (PREP_CTL),    INTENT (INOUT) :: YDCTL
(   17)  CHARACTER(LEN=6),   INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   18)  CHARACTER(LEN=7),   INTENT(IN)  :: HSURF     ! type of field
(   19)  CHARACTER(LEN=28),  INTENT(IN)  :: HATMFILE    ! name of the Atmospheric file
(   20)  CHARACTER(LEN=6),   INTENT(IN)  :: HATMFILETYPE! type of the Atmospheric file
(   21)  CHARACTER(LEN=28),  INTENT(IN)  :: HPGDFILE    ! name of the Atmospheric file
(   22)  CHARACTER(LEN=6),   INTENT(IN)  :: HPGDFILETYPE! type of the Atmospheric file
(   23) END SUBROUTINE PREP_HOR_WATFLUX_FIELD
(   24) # 25 "modi_prep_hor_watflux_field.F90"
(   25) END INTERFACE
(   26) END MODULE MODI_PREP_HOR_WATFLUX_FIELD 
