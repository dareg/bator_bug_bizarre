


NVFORTRAN (Version     23.1)          02/24/2023  13:52:25      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:25      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_canopy_evol_wind.F90

(    1) !depfile:canopy_evol_wind.F90
(    2) MODULE MODI_CANOPY_EVOL_WIND
(    3) INTERFACE
(    4)       SUBROUTINE CANOPY_EVOL_WIND(SB, KI, PTSTEP, KIMPL, PWIND, PK, PDKDDVDZ,   &
(    5)                                   PSFLUX_U, PFORC_U, PDFORC_UDU, PUW, PALFA, PBETA ) 
(    6) USE MODD_CANOPY_n, ONLY : CANOPY_t
(    7) TYPE(CANOPY_t), INTENT(INOUT) :: SB
(    8) INTEGER,                  INTENT(IN)    :: KI        ! number of horizontal points
(    9) REAL,                     INTENT(IN)    :: PTSTEP    ! time-step                             (s)
(   10) INTEGER,                  INTENT(IN)    :: KIMPL     ! implicitation code: 
(   11) REAL, DIMENSION(KI),      INTENT(IN)    :: PWIND     ! wind at forcing level                 (m/s)
(   12) REAL, DIMENSION(KI,SB%NLVL), INTENT(IN)    :: PK        ! mixing exchange coefficient           (m2/s)
(   13) REAL, DIMENSION(KI,SB%NLVL), INTENT(IN)    :: PDKDDVDZ  ! derivative of mixing coefficient as a
(   14) REAL, DIMENSION(KI),      INTENT(IN)    :: PSFLUX_U  ! Surface flux u'w'                     (m2/s2)
(   15) REAL, DIMENSION(KI,SB%NLVL), INTENT(IN)    :: PFORC_U   ! tendency of wind due to canopy drag   (m/s2)
(   16) REAL, DIMENSION(KI,SB%NLVL), INTENT(IN)    :: PDFORC_UDU! formal derivative of the tendency of
(   17) REAL, DIMENSION(KI,SB%NLVL), INTENT(OUT)   :: PUW       ! turbulent flux (at half levels)       (m2/s2)
(   18) REAL, DIMENSION(KI),      INTENT(OUT)   :: PALFA     !  V+(1) = alfa u'w' + beta
(   19) REAL, DIMENSION(KI),      INTENT(OUT)   :: PBETA     !  V+(1) = alfa u'w' + beta
(   20) END SUBROUTINE CANOPY_EVOL_WIND
(   21) 
(   22) END INTERFACE
(   23) END MODULE MODI_CANOPY_EVOL_WIND













NVFORTRAN (Version     23.1)          02/24/2023  13:52:25      page 3

(    1) # 1 "modi_canopy_evol_wind.F90"
(    1) !depfile:canopy_evol_wind.F90
(    2) MODULE MODI_CANOPY_EVOL_WIND
(    3) INTERFACE
(    4)       SUBROUTINE CANOPY_EVOL_WIND(SB, KI, PTSTEP, KIMPL, PWIND, PK, PDKDDVDZ,   &
(    5)                                   PSFLUX_U, PFORC_U, PDFORC_UDU, PUW, PALFA, PBETA ) 
(    6) USE MODD_CANOPY_n, ONLY : CANOPY_t
(    7) TYPE(CANOPY_t), INTENT(INOUT) :: SB
(    8) INTEGER,                  INTENT(IN)    :: KI        ! number of horizontal points
(    9) REAL,                     INTENT(IN)    :: PTSTEP    ! time-step                             (s)
(   10) INTEGER,                  INTENT(IN)    :: KIMPL     ! implicitation code: 
(   11) REAL, DIMENSION(KI),      INTENT(IN)    :: PWIND     ! wind at forcing level                 (m/s)
(   12) REAL, DIMENSION(KI,SB%NLVL), INTENT(IN)    :: PK        ! mixing exchange coefficient           (m2/s)
(   13) REAL, DIMENSION(KI,SB%NLVL), INTENT(IN)    :: PDKDDVDZ  ! derivative of mixing coefficient as a
(   14) REAL, DIMENSION(KI),      INTENT(IN)    :: PSFLUX_U  ! Surface flux u'w'                     (m2/s2)
(   15) REAL, DIMENSION(KI,SB%NLVL), INTENT(IN)    :: PFORC_U   ! tendency of wind due to canopy drag   (m/s2)
(   16) REAL, DIMENSION(KI,SB%NLVL), INTENT(IN)    :: PDFORC_UDU! formal derivative of the tendency of
(   17) REAL, DIMENSION(KI,SB%NLVL), INTENT(OUT)   :: PUW       ! turbulent flux (at half levels)       (m2/s2)
(   18) REAL, DIMENSION(KI),      INTENT(OUT)   :: PALFA     !  V+(1) = alfa u'w' + beta
(   19) REAL, DIMENSION(KI),      INTENT(OUT)   :: PBETA     !  V+(1) = alfa u'w' + beta
(   20) END SUBROUTINE CANOPY_EVOL_WIND
(   21) # 22 "modi_canopy_evol_wind.F90"
(   22) END INTERFACE
(   23) END MODULE MODI_CANOPY_EVOL_WIND
