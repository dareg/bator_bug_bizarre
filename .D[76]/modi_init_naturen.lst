


NVFORTRAN (Version     23.1)          02/24/2023  13:58:20      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:58:20      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_init_naturen.F90

(    1) !depfile:init_naturen.F90
(    2) MODULE MODI_INIT_NATURE_n 
(    3) INTERFACE
(    4)       SUBROUTINE INIT_NATURE_n (DTCO, OREAD_BUDGETC, UG, U, USS, GCP, IM, &
(    5)                                 DTZ, DGO, DL, DLC, NDST, SLT, SV,         &
(    6)                                 HPROGRAM,HINIT,OLAND_USE, KI,KSV,KSW,     &
(    7)                                 HSV,PCO2,PRHOA,PZENITH,PAZIM,PSW_BANDS,   &
(    8)                                 PDIR_ALB,PSCA_ALB,PEMIS,PTSRAD,PTSURF,    &
(    9)                                 KYEAR, KMONTH,KDAY, PTIME, TPDATE_END, AT,&
(   10)                                 HATMFILE,HATMFILETYPE,HTEST              )  
(   11) USE MODD_SURFEX_n, ONLY : ISBA_MODEL_t
(   12) USE MODD_TYPE_DATE_SURF, ONLY : DATE
(   13) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(   14) USE MODD_DIAG_n, ONLY : DIAG_t, DIAG_OPTIONS_t
(   15) USE MODD_SURF_ATM_GRID_n, ONLY : SURF_ATM_GRID_t
(   16) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   17) USE MODD_SSO_n, ONLY : SSO_t
(   18) USE MODD_GRID_CONF_PROJ_n, ONLY : GRID_CONF_PROJ_t
(   19) USE MODD_DATA_TSZ0_n, ONLY : DATA_TSZ0_t
(   20) USE MODD_DST_n, ONLY : DST_NP_t
(   21) USE MODD_SLT_n, ONLY : SLT_t
(   22) USE MODD_SV_n, ONLY : SV_t
(   23) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   24) TYPE(ISBA_MODEL_t), INTENT(INOUT) :: IM
(   25) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   26) LOGICAL, INTENT(IN) :: OREAD_BUDGETC
(   27) TYPE(SURF_ATM_GRID_t), INTENT(INOUT) :: UG
(   28) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   29) TYPE(SSO_t), INTENT(INOUT) :: USS
(   30) TYPE(GRID_CONF_PROJ_t),INTENT(INOUT) :: GCP






NVFORTRAN (Version     23.1)          02/24/2023  13:58:20      page 3

(   31) TYPE(DATA_TSZ0_t), INTENT(INOUT) :: DTZ
(   32) TYPE(DIAG_OPTIONS_t), INTENT(INOUT) :: DGO
(   33) TYPE(DIAG_t), INTENT(INOUT) :: DL
(   34) TYPE(DIAG_t), INTENT(INOUT) :: DLC
(   35) TYPE(DST_NP_t), INTENT(INOUT) :: NDST
(   36) TYPE(SLT_t), INTENT(INOUT) :: SLT
(   37) TYPE(SV_t), INTENT(INOUT) :: SV
(   38)  CHARACTER(LEN=6),                 INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   39)  CHARACTER(LEN=3),                 INTENT(IN)  :: HINIT     ! choice of fields to initialize
(   40) LOGICAL,                          INTENT(IN)  :: OLAND_USE ! 
(   41) INTEGER,                          INTENT(IN)  :: KI        ! number of points
(   42) INTEGER,                          INTENT(IN)  :: KSV       ! number of scalars
(   43) INTEGER,                          INTENT(IN)  :: KSW       ! number of short-wave spectral bands
(   44)  CHARACTER(LEN=6), DIMENSION(KSV), INTENT(IN)  :: HSV       ! name of all scalar variables
(   45) REAL,             DIMENSION(KI),  INTENT(IN)  :: PCO2      ! CO2 concentration (kg/m3)
(   46) REAL,             DIMENSION(KI),  INTENT(IN)  :: PRHOA     ! air density
(   47) REAL,             DIMENSION(KI),  INTENT(IN)  :: PZENITH   ! solar zenithal angle
(   48) REAL,             DIMENSION(KI),  INTENT(IN)  :: PAZIM     ! solar azimuthal angle (rad from N, clock)
(   49) REAL,             DIMENSION(KSW), INTENT(IN)  :: PSW_BANDS ! middle wavelength of each band
(   50) REAL,             DIMENSION(KI,KSW),INTENT(OUT) :: PDIR_ALB  ! direct albedo for each band
(   51) REAL,             DIMENSION(KI,KSW),INTENT(OUT) :: PSCA_ALB  ! diffuse albedo for each band
(   52) REAL,             DIMENSION(KI),  INTENT(OUT) :: PEMIS     ! emissivity
(   53) REAL,             DIMENSION(KI),  INTENT(OUT) :: PTSRAD    ! radiative temperature
(   54) REAL,             DIMENSION(KI),  INTENT(OUT) :: PTSURF    ! surface effective temperature         (K)
(   55) INTEGER,                          INTENT(IN)  :: KYEAR     ! current year (UTC)
(   56) INTEGER,                          INTENT(IN)  :: KMONTH    ! current month (UTC)
(   57) INTEGER,                          INTENT(IN)  :: KDAY      ! current day (UTC)
(   58) REAL,                             INTENT(IN)  :: PTIME     ! current time since
(   59) TYPE(DATE), INTENT(INOUT) :: TPDATE_END
(   60) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   61)  CHARACTER(LEN=28),                INTENT(IN)  :: HATMFILE    ! atmospheric file name
(   62)  CHARACTER(LEN=6),                 INTENT(IN)  :: HATMFILETYPE! atmospheric file type
(   63)  CHARACTER(LEN=2),                 INTENT(IN)  :: HTEST       ! must be equal to 'OK'
(   64) END SUBROUTINE INIT_NATURE_n
(   65) 
(   66) END INTERFACE
(   67) END MODULE MODI_INIT_NATURE_n 



























NVFORTRAN (Version     23.1)          02/24/2023  13:58:20      page 4

(    1) # 1 "modi_init_naturen.F90"
(    1) !depfile:init_naturen.F90
(    2) MODULE MODI_INIT_NATURE_n 
(    3) INTERFACE
(    4)       SUBROUTINE INIT_NATURE_n (DTCO, OREAD_BUDGETC, UG, U, USS, GCP, IM, &
(    5)                                 DTZ, DGO, DL, DLC, NDST, SLT, SV,         &
(    6)                                 HPROGRAM,HINIT,OLAND_USE, KI,KSV,KSW,     &
(    7)                                 HSV,PCO2,PRHOA,PZENITH,PAZIM,PSW_BANDS,   &
(    8)                                 PDIR_ALB,PSCA_ALB,PEMIS,PTSRAD,PTSURF,    &
(    9)                                 KYEAR, KMONTH,KDAY, PTIME, TPDATE_END, AT,&
(   10)                                 HATMFILE,HATMFILETYPE,HTEST              )  
(   11) USE MODD_SURFEX_n, ONLY : ISBA_MODEL_t
(   12) USE MODD_TYPE_DATE_SURF, ONLY : DATE
(   13) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(   14) USE MODD_DIAG_n, ONLY : DIAG_t, DIAG_OPTIONS_t
(   15) USE MODD_SURF_ATM_GRID_n, ONLY : SURF_ATM_GRID_t
(   16) USE MODD_SURF_ATM_n, ONLY : SURF_ATM_t
(   17) USE MODD_SSO_n, ONLY : SSO_t
(   18) USE MODD_GRID_CONF_PROJ_n, ONLY : GRID_CONF_PROJ_t
(   19) USE MODD_DATA_TSZ0_n, ONLY : DATA_TSZ0_t
(   20) USE MODD_DST_n, ONLY : DST_NP_t
(   21) USE MODD_SLT_n, ONLY : SLT_t
(   22) USE MODD_SV_n, ONLY : SV_t
(   23) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   24) TYPE(ISBA_MODEL_t), INTENT(INOUT) :: IM
(   25) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   26) LOGICAL, INTENT(IN) :: OREAD_BUDGETC
(   27) TYPE(SURF_ATM_GRID_t), INTENT(INOUT) :: UG
(   28) TYPE(SURF_ATM_t), INTENT(INOUT) :: U
(   29) TYPE(SSO_t), INTENT(INOUT) :: USS
(   30) TYPE(GRID_CONF_PROJ_t),INTENT(INOUT) :: GCP
(   31) TYPE(DATA_TSZ0_t), INTENT(INOUT) :: DTZ
(   32) TYPE(DIAG_OPTIONS_t), INTENT(INOUT) :: DGO
(   33) TYPE(DIAG_t), INTENT(INOUT) :: DL
(   34) TYPE(DIAG_t), INTENT(INOUT) :: DLC
(   35) TYPE(DST_NP_t), INTENT(INOUT) :: NDST
(   36) TYPE(SLT_t), INTENT(INOUT) :: SLT
(   37) TYPE(SV_t), INTENT(INOUT) :: SV
(   38)  CHARACTER(LEN=6),                 INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   39)  CHARACTER(LEN=3),                 INTENT(IN)  :: HINIT     ! choice of fields to initialize
(   40) LOGICAL,                          INTENT(IN)  :: OLAND_USE ! 
(   41) INTEGER,                          INTENT(IN)  :: KI        ! number of points
(   42) INTEGER,                          INTENT(IN)  :: KSV       ! number of scalars
(   43) INTEGER,                          INTENT(IN)  :: KSW       ! number of short-wave spectral bands
(   44)  CHARACTER(LEN=6), DIMENSION(KSV), INTENT(IN)  :: HSV       ! name of all scalar variables
(   45) REAL,             DIMENSION(KI),  INTENT(IN)  :: PCO2      ! CO2 concentration (kg/m3)
(   46) REAL,             DIMENSION(KI),  INTENT(IN)  :: PRHOA     ! air density
(   47) REAL,             DIMENSION(KI),  INTENT(IN)  :: PZENITH   ! solar zenithal angle
(   48) REAL,             DIMENSION(KI),  INTENT(IN)  :: PAZIM     ! solar azimuthal angle (rad from N, clock)
(   49) REAL,             DIMENSION(KSW), INTENT(IN)  :: PSW_BANDS ! middle wavelength of each band
(   50) REAL,             DIMENSION(KI,KSW),INTENT(OUT) :: PDIR_ALB  ! direct albedo for each band
(   51) REAL,             DIMENSION(KI,KSW),INTENT(OUT) :: PSCA_ALB  ! diffuse albedo for each band
(   52) REAL,             DIMENSION(KI),  INTENT(OUT) :: PEMIS     ! emissivity
(   53) REAL,             DIMENSION(KI),  INTENT(OUT) :: PTSRAD    ! radiative temperature
(   54) REAL,             DIMENSION(KI),  INTENT(OUT) :: PTSURF    ! surface effective temperature         (K)
(   55) INTEGER,                          INTENT(IN)  :: KYEAR     ! current year (UTC)
(   56) INTEGER,                          INTENT(IN)  :: KMONTH    ! current month (UTC)
(   57) INTEGER,                          INTENT(IN)  :: KDAY      ! current day (UTC)






NVFORTRAN (Version     23.1)          02/24/2023  13:58:20      page 5

(   58) REAL,                             INTENT(IN)  :: PTIME     ! current time since
(   59) TYPE(DATE), INTENT(INOUT) :: TPDATE_END
(   60) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   61)  CHARACTER(LEN=28),                INTENT(IN)  :: HATMFILE    ! atmospheric file name
(   62)  CHARACTER(LEN=6),                 INTENT(IN)  :: HATMFILETYPE! atmospheric file type
(   63)  CHARACTER(LEN=2),                 INTENT(IN)  :: HTEST       ! must be equal to 'OK'
(   64) END SUBROUTINE INIT_NATURE_n
(   65) # 66 "modi_init_naturen.F90"
(   66) END INTERFACE
(   67) END MODULE MODI_INIT_NATURE_n 
