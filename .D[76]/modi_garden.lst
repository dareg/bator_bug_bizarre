


NVFORTRAN (Version     23.1)          02/24/2023  13:51:25      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:51:25      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_garden.F90

(    1) !depfile:garden.F90
(    2) MODULE MODI_GARDEN 
(    3) INTERFACE
(    4)     SUBROUTINE GARDEN (DTCO, G, T, TOP, TIR, AT, DTV, GB, DK, DEK, DMK, GDO, S, K, P, PEK,    &
(    5)                        HIMPLICIT_WIND, TPTIME, PTSUN, PPEW_A_COEF, PPEW_B_COEF,       &
(    6)                 PPET_A_COEF, PPEQ_A_COEF, PPET_B_COEF, PPEQ_B_COEF,                  &
(    7)                        PTSTEP, PZREF, PTA, PQA, PEXNS, PRHOA, PCO2, PPS, PRR,   &
(    8)                        PSR, PZENITH, PSW, PLW, PVMOD, PALBNIR_TVEG,             &
(    9)                        PALBVIS_TVEG, PALBNIR_TSOIL, PALBVIS_TSOIL,              &
(   10)                        PRN, PH, PLE, PGFLUX, PSFCO2, PEVAP, PUW, PRUNOFF,       &
(   11)                        PAC, PQSAT, PTSRAD, PAC_AGG, PHU_AGG, PIRRIG         )  
(   12) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(   13) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   14) USE MODD_SFX_GRID_n, ONLY : GRID_t
(   15) USE MODD_TEB_n, ONLY : TEB_t
(   16) USE MODD_TEB_OPTION_n, ONLY : TEB_OPTIONS_t
(   17) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   18) USE MODD_GR_BIOG_n, ONLY : GR_BIOG_t
(   19) USE MODD_DIAG_n, ONLY : DIAG_t
(   20) USE MODD_DIAG_EVAP_ISBA_n, ONLY : DIAG_EVAP_ISBA_t
(   21) USE MODD_DIAG_MISC_ISBA_n, ONLY : DIAG_MISC_ISBA_t
(   22) USE MODD_TEB_IRRIG_n, ONLY : TEB_IRRIG_t
(   23) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   24) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t, ISBA_P_t, ISBA_PE_t
(   25) USE MODD_TYPE_DATE_SURF,    ONLY: DATE_TIME
(   26) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   27) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   28) TYPE(GRID_t), INTENT(INOUT) :: G
(   29) TYPE(TEB_t), INTENT(INOUT) :: T
(   30) TYPE(TEB_OPTIONS_t), INTENT(INOUT) :: TOP






NVFORTRAN (Version     23.1)          02/24/2023  13:51:25      page 3

(   31) TYPE(DATA_ISBA_t), INTENT(INOUT) :: DTV
(   32) TYPE(GR_BIOG_t), INTENT(INOUT) :: GB
(   33) TYPE(DIAG_t), INTENT(INOUT) :: DK
(   34) TYPE(DIAG_EVAP_ISBA_t), INTENT(INOUT) :: DEK
(   35) TYPE(DIAG_MISC_ISBA_t), INTENT(INOUT) :: DMK
(   36) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: GDO
(   37) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   38) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   39) TYPE(ISBA_P_t), INTENT(INOUT) :: P
(   40) TYPE(ISBA_PE_t), INTENT(INOUT) :: PEK
(   41) TYPE(TEB_IRRIG_t), INTENT(INOUT) :: TIR
(   42) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   43)  CHARACTER(LEN=*),     INTENT(IN)  :: HIMPLICIT_WIND   ! wind implicitation option
(   44) TYPE(DATE_TIME)     , INTENT(IN)    :: TPTIME             ! current date and time from teb
(   45) REAL, DIMENSION(:)  , INTENT(IN)    :: PTSUN              ! solar time      (s from midnight)
(   46) REAL, DIMENSION(:)  , INTENT(IN)    :: PPEW_A_COEF        ! implicit coefficients
(   47) REAL, DIMENSION(:)  , INTENT(IN)    :: PPEW_B_COEF        ! for wind coupling
(   48) REAL, DIMENSION(:)  , INTENT(IN)    :: PPEQ_A_COEF        ! implicit coefficients
(   49) REAL, DIMENSION(:)  , INTENT(IN)    :: PPEQ_B_COEF        ! for humidity
(   50) REAL, DIMENSION(:)  , INTENT(IN)    :: PPET_A_COEF        ! implicit coefficients
(   51) REAL, DIMENSION(:)  , INTENT(IN)    :: PPET_B_COEF        ! for temperature
(   52) REAL                , INTENT(IN)    :: PTSTEP             ! time step
(   53) REAL, DIMENSION(:)  , INTENT(IN)    :: PZREF              ! height of atm. var. near the road
(   54) REAL, DIMENSION(:)  , INTENT(IN)    :: PTA                ! temp. near the road
(   55) REAL, DIMENSION(:)  , INTENT(IN)    :: PQA                ! hum. near the road
(   56) REAL, DIMENSION(:)  , INTENT(IN)    :: PPS                ! pressure at the surface
(   57) REAL, DIMENSION(:)  , INTENT(IN)    :: PEXNS              ! surface exner function
(   58) REAL, DIMENSION(:)  , INTENT(IN)    :: PRHOA              ! air density at the lowest level
(   59) REAL, DIMENSION(:)  , INTENT(IN)    :: PCO2               ! CO2 concentration in the air    (kg/m3)
(   60) REAL, DIMENSION(:)  , INTENT(IN)    :: PRR                ! rain rate
(   61) REAL, DIMENSION(:)  , INTENT(IN)    :: PSR                ! snow rate
(   62) REAL, DIMENSION(:)  , INTENT(IN)    :: PZENITH            ! solar zenithal angle
(   63) REAL, DIMENSION(:)  , INTENT(IN)    :: PSW                ! incoming total solar rad on an horizontal surface
(   64) REAL, DIMENSION(:)  , INTENT(IN)    :: PLW                ! atmospheric infrared radiation
(   65) REAL, DIMENSION(:)  , INTENT(IN)    :: PVMOD              ! wind near the road
(   66) REAL, DIMENSION(:)  , INTENT(IN)    :: PALBNIR_TVEG       ! nearIR  veg tot albedo
(   67) REAL, DIMENSION(:)  , INTENT(IN)    :: PALBVIS_TVEG       ! visible veg tot albedo
(   68) REAL, DIMENSION(:)  , INTENT(IN)    :: PALBNIR_TSOIL      ! nearIR  soil tot albedo
(   69) REAL, DIMENSION(:)  , INTENT(IN)    :: PALBVIS_TSOIL      ! visible soil tot albedo
(   70) REAL, DIMENSION(:)  , INTENT(OUT)   :: PRN         ! net radiation over green areas
(   71) REAL, DIMENSION(:)  , INTENT(OUT)   :: PH          ! sensible heat flux over green areas
(   72) REAL, DIMENSION(:)  , INTENT(OUT)   :: PLE         ! latent heat flux over green areas
(   73) REAL, DIMENSION(:)  , INTENT(OUT)   :: PGFLUX      ! flux through the green areas
(   74) REAL, DIMENSION(:)  , INTENT(OUT)   :: PSFCO2      ! flux of CO2 positive toward the atmosphere (m/s*kg_CO2/kg_air)
(   75) REAL, DIMENSION(:)  , INTENT(OUT)   :: PEVAP       ! total evaporation over gardens (kg/m2/s)
(   76) REAL, DIMENSION(:)  , INTENT(OUT)   :: PUW         ! friction flux (m2/s2)
(   77) REAL, DIMENSION(:)  , INTENT(OUT)   :: PRUNOFF     ! runoff over garden (kg/m2/s)
(   78) REAL, DIMENSION(:)  , INTENT(OUT)   :: PAC         ! aerodynamical conductance
(   79) REAL, DIMENSION(:)  , INTENT(OUT)   :: PQSAT       ! saturation humidity
(   80) REAL, DIMENSION(:)  , INTENT(OUT)   :: PTSRAD      ! garden radiative surface temp. (snow free)
(   81) REAL, DIMENSION(:)  , INTENT(OUT)   :: PAC_AGG     ! aggreg. aeodynamic resistance for green areas for latent heat flux
(   82) REAL, DIMENSION(:)  , INTENT(OUT)   :: PHU_AGG     ! aggreg. relative humidity for green areas for latent heat flux
(   83) REAL, DIMENSION(:)  , INTENT(OUT)   :: PIRRIG      ! garden summer irrigation rate
(   84) END SUBROUTINE GARDEN
(   85) 
(   86) END INTERFACE
(   87) END MODULE MODI_GARDEN 







NVFORTRAN (Version     23.1)          02/24/2023  13:51:25      page 4

(    1) # 1 "modi_garden.F90"
(    1) !depfile:garden.F90
(    2) MODULE MODI_GARDEN 
(    3) INTERFACE
(    4)     SUBROUTINE GARDEN (DTCO, G, T, TOP, TIR, AT, DTV, GB, DK, DEK, DMK, GDO, S, K, P, PEK,    &
(    5)                        HIMPLICIT_WIND, TPTIME, PTSUN, PPEW_A_COEF, PPEW_B_COEF,       &
(    6)                 PPET_A_COEF, PPEQ_A_COEF, PPET_B_COEF, PPEQ_B_COEF,                  &
(    7)                        PTSTEP, PZREF, PTA, PQA, PEXNS, PRHOA, PCO2, PPS, PRR,   &
(    8)                        PSR, PZENITH, PSW, PLW, PVMOD, PALBNIR_TVEG,             &
(    9)                        PALBVIS_TVEG, PALBNIR_TSOIL, PALBVIS_TSOIL,              &
(   10)                        PRN, PH, PLE, PGFLUX, PSFCO2, PEVAP, PUW, PRUNOFF,       &
(   11)                        PAC, PQSAT, PTSRAD, PAC_AGG, PHU_AGG, PIRRIG         )  
(   12) USE MODD_DATA_COVER_n, ONLY : DATA_COVER_t
(   13) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   14) USE MODD_SFX_GRID_n, ONLY : GRID_t
(   15) USE MODD_TEB_n, ONLY : TEB_t
(   16) USE MODD_TEB_OPTION_n, ONLY : TEB_OPTIONS_t
(   17) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   18) USE MODD_GR_BIOG_n, ONLY : GR_BIOG_t
(   19) USE MODD_DIAG_n, ONLY : DIAG_t
(   20) USE MODD_DIAG_EVAP_ISBA_n, ONLY : DIAG_EVAP_ISBA_t
(   21) USE MODD_DIAG_MISC_ISBA_n, ONLY : DIAG_MISC_ISBA_t
(   22) USE MODD_TEB_IRRIG_n, ONLY : TEB_IRRIG_t
(   23) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   24) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t, ISBA_P_t, ISBA_PE_t
(   25) USE MODD_TYPE_DATE_SURF,    ONLY: DATE_TIME
(   26) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   27) TYPE(DATA_COVER_t), INTENT(INOUT) :: DTCO
(   28) TYPE(GRID_t), INTENT(INOUT) :: G
(   29) TYPE(TEB_t), INTENT(INOUT) :: T
(   30) TYPE(TEB_OPTIONS_t), INTENT(INOUT) :: TOP
(   31) TYPE(DATA_ISBA_t), INTENT(INOUT) :: DTV
(   32) TYPE(GR_BIOG_t), INTENT(INOUT) :: GB
(   33) TYPE(DIAG_t), INTENT(INOUT) :: DK
(   34) TYPE(DIAG_EVAP_ISBA_t), INTENT(INOUT) :: DEK
(   35) TYPE(DIAG_MISC_ISBA_t), INTENT(INOUT) :: DMK
(   36) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: GDO
(   37) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   38) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   39) TYPE(ISBA_P_t), INTENT(INOUT) :: P
(   40) TYPE(ISBA_PE_t), INTENT(INOUT) :: PEK
(   41) TYPE(TEB_IRRIG_t), INTENT(INOUT) :: TIR
(   42) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT         ! atmospheric turbulence parameters
(   43)  CHARACTER(LEN=*),     INTENT(IN)  :: HIMPLICIT_WIND   ! wind implicitation option
(   44) TYPE(DATE_TIME)     , INTENT(IN)    :: TPTIME             ! current date and time from teb
(   45) REAL, DIMENSION(:)  , INTENT(IN)    :: PTSUN              ! solar time      (s from midnight)
(   46) REAL, DIMENSION(:)  , INTENT(IN)    :: PPEW_A_COEF        ! implicit coefficients
(   47) REAL, DIMENSION(:)  , INTENT(IN)    :: PPEW_B_COEF        ! for wind coupling
(   48) REAL, DIMENSION(:)  , INTENT(IN)    :: PPEQ_A_COEF        ! implicit coefficients
(   49) REAL, DIMENSION(:)  , INTENT(IN)    :: PPEQ_B_COEF        ! for humidity
(   50) REAL, DIMENSION(:)  , INTENT(IN)    :: PPET_A_COEF        ! implicit coefficients
(   51) REAL, DIMENSION(:)  , INTENT(IN)    :: PPET_B_COEF        ! for temperature
(   52) REAL                , INTENT(IN)    :: PTSTEP             ! time step
(   53) REAL, DIMENSION(:)  , INTENT(IN)    :: PZREF              ! height of atm. var. near the road
(   54) REAL, DIMENSION(:)  , INTENT(IN)    :: PTA                ! temp. near the road
(   55) REAL, DIMENSION(:)  , INTENT(IN)    :: PQA                ! hum. near the road
(   56) REAL, DIMENSION(:)  , INTENT(IN)    :: PPS                ! pressure at the surface
(   57) REAL, DIMENSION(:)  , INTENT(IN)    :: PEXNS              ! surface exner function






NVFORTRAN (Version     23.1)          02/24/2023  13:51:25      page 5

(   58) REAL, DIMENSION(:)  , INTENT(IN)    :: PRHOA              ! air density at the lowest level
(   59) REAL, DIMENSION(:)  , INTENT(IN)    :: PCO2               ! CO2 concentration in the air    (kg/m3)
(   60) REAL, DIMENSION(:)  , INTENT(IN)    :: PRR                ! rain rate
(   61) REAL, DIMENSION(:)  , INTENT(IN)    :: PSR                ! snow rate
(   62) REAL, DIMENSION(:)  , INTENT(IN)    :: PZENITH            ! solar zenithal angle
(   63) REAL, DIMENSION(:)  , INTENT(IN)    :: PSW                ! incoming total solar rad on an horizontal surface
(   64) REAL, DIMENSION(:)  , INTENT(IN)    :: PLW                ! atmospheric infrared radiation
(   65) REAL, DIMENSION(:)  , INTENT(IN)    :: PVMOD              ! wind near the road
(   66) REAL, DIMENSION(:)  , INTENT(IN)    :: PALBNIR_TVEG       ! nearIR  veg tot albedo
(   67) REAL, DIMENSION(:)  , INTENT(IN)    :: PALBVIS_TVEG       ! visible veg tot albedo
(   68) REAL, DIMENSION(:)  , INTENT(IN)    :: PALBNIR_TSOIL      ! nearIR  soil tot albedo
(   69) REAL, DIMENSION(:)  , INTENT(IN)    :: PALBVIS_TSOIL      ! visible soil tot albedo
(   70) REAL, DIMENSION(:)  , INTENT(OUT)   :: PRN         ! net radiation over green areas
(   71) REAL, DIMENSION(:)  , INTENT(OUT)   :: PH          ! sensible heat flux over green areas
(   72) REAL, DIMENSION(:)  , INTENT(OUT)   :: PLE         ! latent heat flux over green areas
(   73) REAL, DIMENSION(:)  , INTENT(OUT)   :: PGFLUX      ! flux through the green areas
(   74) REAL, DIMENSION(:)  , INTENT(OUT)   :: PSFCO2      ! flux of CO2 positive toward the atmosphere (m/s*kg_CO2/kg_air)
(   75) REAL, DIMENSION(:)  , INTENT(OUT)   :: PEVAP       ! total evaporation over gardens (kg/m2/s)
(   76) REAL, DIMENSION(:)  , INTENT(OUT)   :: PUW         ! friction flux (m2/s2)
(   77) REAL, DIMENSION(:)  , INTENT(OUT)   :: PRUNOFF     ! runoff over garden (kg/m2/s)
(   78) REAL, DIMENSION(:)  , INTENT(OUT)   :: PAC         ! aerodynamical conductance
(   79) REAL, DIMENSION(:)  , INTENT(OUT)   :: PQSAT       ! saturation humidity
(   80) REAL, DIMENSION(:)  , INTENT(OUT)   :: PTSRAD      ! garden radiative surface temp. (snow free)
(   81) REAL, DIMENSION(:)  , INTENT(OUT)   :: PAC_AGG     ! aggreg. aeodynamic resistance for green areas for latent heat flux
(   82) REAL, DIMENSION(:)  , INTENT(OUT)   :: PHU_AGG     ! aggreg. relative humidity for green areas for latent heat flux
(   83) REAL, DIMENSION(:)  , INTENT(OUT)   :: PIRRIG      ! garden summer irrigation rate
(   84) END SUBROUTINE GARDEN
(   85) # 86 "modi_garden.F90"
(   86) END INTERFACE
(   87) END MODULE MODI_GARDEN 
