


NVFORTRAN (Version     23.1)          02/24/2023  13:52:30      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:30      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_drag.F90

(    1) !depfile:drag.F90
(    2) MODULE MODI_DRAG
(    3) INTERFACE
(    4)     SUBROUTINE DRAG(HISBA, HSNOW_ISBA, HCPSURF, PTSTEP, PTG, PWG, PWGI,      &
(    5)                     PEXNS, PEXNA, PTA, PVMOD, PQA, PRR, PSR, PPS, PRS,       &
(    6)                     PVEG, PZ0, PZ0EFF, PZ0H, PWFC, PWSAT, PPSNG, PPSNV,      &
(    7)                     PZREF, PUREF, PDIRCOSZW, PDELTA, PF5, AT, PRA, PCH, PCD, &
(    8)                     PCDN, PRI, PHUG, PHUGI, PHV, PHU, PCPS, PQS, PFFG,       &
(    9)                     PFFV, PFF, PFFG_NOSNOW, PFFV_NOSNOW, PLEG_DELTA,         &
(   10)                     PLEGI_DELTA, PWR, PRHOA, PLVTT, PQSAT  )  
(   11) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   12) CHARACTER(LEN=*),     INTENT(IN)  :: HISBA      ! type of ISBA version:
(   13) CHARACTER(LEN=*),     INTENT(IN)  :: HSNOW_ISBA ! 'DEF' = Default F-R snow scheme
(   14) CHARACTER(LEN=*),     INTENT(IN)  :: HCPSURF    ! option for specific heat Cp:
(   15) REAL,                 INTENT(IN) :: PTSTEP      ! timestep of ISBA (not split time step)
(   16) REAL, DIMENSION(:), INTENT(IN)   :: PTG, PWG, PWGI, PEXNS
(   17) REAL, DIMENSION(:), INTENT(IN)   :: PEXNA, PTA, PVMOD, PQA, PRR, PSR, PPS
(   18) REAL, DIMENSION(:), INTENT(IN)   :: PRS, PVEG, PZ0, PZ0H, PZ0EFF
(   19) REAL, DIMENSION(:), INTENT(IN)   :: PWFC, PWSAT, PPSNG, PPSNV, PZREF, PUREF
(   20) REAL, DIMENSION(:), INTENT(INOUT) :: PDELTA
(   21) REAL, DIMENSION(:), INTENT(IN)    :: PF5
(   22) REAL, DIMENSION(:), INTENT(IN)    :: PDIRCOSZW 
(   23) REAL, DIMENSION(:), INTENT(INOUT) :: PRA
(   24) REAL, DIMENSION(:), INTENT(INOUT) :: PCPS
(   25) REAL, DIMENSION(:), INTENT(OUT)  :: PCH, PCD, PCDN, PRI
(   26) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT ! atmospheric turbulence parameters
(   27) REAL, DIMENSION(:), INTENT(OUT)  :: PHUG, PHUGI, PHV, PHU, PQS, PLEG_DELTA, PLEGI_DELTA
(   28) REAL, DIMENSION(:), INTENT(IN)   :: PFFV, PFF, PFFG, PFFG_NOSNOW, PFFV_NOSNOW
(   29) REAL, DIMENSION(:), INTENT(IN)   :: PWR, PRHOA, PLVTT
(   30) REAL, DIMENSION(:), INTENT(OUT), OPTIONAL :: PQSAT






NVFORTRAN (Version     23.1)          02/24/2023  13:52:30      page 3

(   31) END SUBROUTINE DRAG
(   32) 
(   33) END INTERFACE
(   34) END MODULE MODI_DRAG




























































NVFORTRAN (Version     23.1)          02/24/2023  13:52:30      page 4

(    1) # 1 "modi_drag.F90"
(    1) !depfile:drag.F90
(    2) MODULE MODI_DRAG
(    3) INTERFACE
(    4)     SUBROUTINE DRAG(HISBA, HSNOW_ISBA, HCPSURF, PTSTEP, PTG, PWG, PWGI,      &
(    5)                     PEXNS, PEXNA, PTA, PVMOD, PQA, PRR, PSR, PPS, PRS,       &
(    6)                     PVEG, PZ0, PZ0EFF, PZ0H, PWFC, PWSAT, PPSNG, PPSNV,      &
(    7)                     PZREF, PUREF, PDIRCOSZW, PDELTA, PF5, AT, PRA, PCH, PCD, &
(    8)                     PCDN, PRI, PHUG, PHUGI, PHV, PHU, PCPS, PQS, PFFG,       &
(    9)                     PFFV, PFF, PFFG_NOSNOW, PFFV_NOSNOW, PLEG_DELTA,         &
(   10)                     PLEGI_DELTA, PWR, PRHOA, PLVTT, PQSAT  )  
(   11) USE MODD_SURF_ATM_TURB_n, ONLY : SURF_ATM_TURB_t
(   12) CHARACTER(LEN=*),     INTENT(IN)  :: HISBA      ! type of ISBA version:
(   13) CHARACTER(LEN=*),     INTENT(IN)  :: HSNOW_ISBA ! 'DEF' = Default F-R snow scheme
(   14) CHARACTER(LEN=*),     INTENT(IN)  :: HCPSURF    ! option for specific heat Cp:
(   15) REAL,                 INTENT(IN) :: PTSTEP      ! timestep of ISBA (not split time step)
(   16) REAL, DIMENSION(:), INTENT(IN)   :: PTG, PWG, PWGI, PEXNS
(   17) REAL, DIMENSION(:), INTENT(IN)   :: PEXNA, PTA, PVMOD, PQA, PRR, PSR, PPS
(   18) REAL, DIMENSION(:), INTENT(IN)   :: PRS, PVEG, PZ0, PZ0H, PZ0EFF
(   19) REAL, DIMENSION(:), INTENT(IN)   :: PWFC, PWSAT, PPSNG, PPSNV, PZREF, PUREF
(   20) REAL, DIMENSION(:), INTENT(INOUT) :: PDELTA
(   21) REAL, DIMENSION(:), INTENT(IN)    :: PF5
(   22) REAL, DIMENSION(:), INTENT(IN)    :: PDIRCOSZW 
(   23) REAL, DIMENSION(:), INTENT(INOUT) :: PRA
(   24) REAL, DIMENSION(:), INTENT(INOUT) :: PCPS
(   25) REAL, DIMENSION(:), INTENT(OUT)  :: PCH, PCD, PCDN, PRI
(   26) TYPE(SURF_ATM_TURB_t), INTENT(IN) :: AT ! atmospheric turbulence parameters
(   27) REAL, DIMENSION(:), INTENT(OUT)  :: PHUG, PHUGI, PHV, PHU, PQS, PLEG_DELTA, PLEGI_DELTA
(   28) REAL, DIMENSION(:), INTENT(IN)   :: PFFV, PFF, PFFG, PFFG_NOSNOW, PFFV_NOSNOW
(   29) REAL, DIMENSION(:), INTENT(IN)   :: PWR, PRHOA, PLVTT
(   30) REAL, DIMENSION(:), INTENT(OUT), OPTIONAL :: PQSAT
(   31) END SUBROUTINE DRAG
(   32) # 33 "modi_drag.F90"
(   33) END INTERFACE
(   34) END MODULE MODI_DRAG
