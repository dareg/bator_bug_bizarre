


NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_init_veg_pgdn.F90

(    1) !depfile:init_veg_pgdn.F90
(    2) MODULE MODI_INIT_VEG_PGD_n 
(    3) INTERFACE
(    4) SUBROUTINE INIT_VEG_PGD_n (ISSK, DTI, IO, S, K, KK, PK, PEK, AGK, KI, &
(    5)                            HPROGRAM, HSURF, KLUOUT, KSIZE, KMONTH,    &
(    6)                            ODEEPSOIL, OPHYSDOMC, PTDEEP_CLI, PGAMMAT_CLI,     &
(    7)                            OAGRIP, PTHRESHOLD, HINIT, PCO2, PRHOA     )  
(    8) USE MODD_SSO_n, ONLY : SSO_t
(    9) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   10) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   11) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t, ISBA_P_t, ISBA_PE_t
(   12) USE MODD_AGRI_n, ONLY : AGRI_t
(   13) TYPE(SSO_t), INTENT(INOUT) :: ISSK
(   14) TYPE(DATA_ISBA_t), INTENT(INOUT) :: DTI
(   15) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   16) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   17) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   18) TYPE(ISBA_K_t), INTENT(INOUT) :: KK
(   19) TYPE(ISBA_P_t), INTENT(INOUT) :: PK
(   20) TYPE(ISBA_PE_t), INTENT(INOUT) :: PEK
(   21) TYPE(AGRI_t), INTENT(INOUT) :: AGK
(   22) INTEGER, INTENT(IN) :: KI
(   23)  CHARACTER(LEN=6), INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   24)  CHARACTER(LEN=6), INTENT(IN)  :: HSURF     ! Type of surface
(   25) INTEGER, INTENT(IN)  :: KLUOUT
(   26) INTEGER, INTENT(IN)  :: KSIZE
(   27) INTEGER, INTENT(IN)  :: KMONTH
(   28) LOGICAL, INTENT(IN) :: ODEEPSOIL
(   29) LOGICAL, INTENT(IN) :: OPHYSDOMC
(   30) REAL, DIMENSION(:), INTENT(IN) :: PTDEEP_CLI






NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 3

(   31) REAL, DIMENSION(:), INTENT(IN) :: PGAMMAT_CLI
(   32) LOGICAL, INTENT(IN) :: OAGRIP
(   33) REAL, DIMENSION(:), INTENT(IN) :: PTHRESHOLD
(   34)  CHARACTER(LEN=3), INTENT(IN) :: HINIT
(   35) REAL, DIMENSION(:), INTENT(IN) :: PCO2
(   36) REAL, DIMENSION(:), INTENT(IN) :: PRHOA
(   37) END SUBROUTINE INIT_VEG_PGD_n
(   38) 
(   39) END INTERFACE
(   40) END MODULE MODI_INIT_VEG_PGD_n 






















































NVFORTRAN (Version     23.1)          02/24/2023  13:52:27      page 4

(    1) # 1 "modi_init_veg_pgdn.F90"
(    1) !depfile:init_veg_pgdn.F90
(    2) MODULE MODI_INIT_VEG_PGD_n 
(    3) INTERFACE
(    4) SUBROUTINE INIT_VEG_PGD_n (ISSK, DTI, IO, S, K, KK, PK, PEK, AGK, KI, &
(    5)                            HPROGRAM, HSURF, KLUOUT, KSIZE, KMONTH,    &
(    6)                            ODEEPSOIL, OPHYSDOMC, PTDEEP_CLI, PGAMMAT_CLI,     &
(    7)                            OAGRIP, PTHRESHOLD, HINIT, PCO2, PRHOA     )  
(    8) USE MODD_SSO_n, ONLY : SSO_t
(    9) USE MODD_DATA_ISBA_n, ONLY : DATA_ISBA_t
(   10) USE MODD_ISBA_OPTIONS_n, ONLY : ISBA_OPTIONS_t
(   11) USE MODD_ISBA_n, ONLY : ISBA_S_t, ISBA_K_t, ISBA_P_t, ISBA_PE_t
(   12) USE MODD_AGRI_n, ONLY : AGRI_t
(   13) TYPE(SSO_t), INTENT(INOUT) :: ISSK
(   14) TYPE(DATA_ISBA_t), INTENT(INOUT) :: DTI
(   15) TYPE(ISBA_OPTIONS_t), INTENT(INOUT) :: IO
(   16) TYPE(ISBA_S_t), INTENT(INOUT) :: S
(   17) TYPE(ISBA_K_t), INTENT(INOUT) :: K
(   18) TYPE(ISBA_K_t), INTENT(INOUT) :: KK
(   19) TYPE(ISBA_P_t), INTENT(INOUT) :: PK
(   20) TYPE(ISBA_PE_t), INTENT(INOUT) :: PEK
(   21) TYPE(AGRI_t), INTENT(INOUT) :: AGK
(   22) INTEGER, INTENT(IN) :: KI
(   23)  CHARACTER(LEN=6), INTENT(IN)  :: HPROGRAM  ! program calling surf. schemes
(   24)  CHARACTER(LEN=6), INTENT(IN)  :: HSURF     ! Type of surface
(   25) INTEGER, INTENT(IN)  :: KLUOUT
(   26) INTEGER, INTENT(IN)  :: KSIZE
(   27) INTEGER, INTENT(IN)  :: KMONTH
(   28) LOGICAL, INTENT(IN) :: ODEEPSOIL
(   29) LOGICAL, INTENT(IN) :: OPHYSDOMC
(   30) REAL, DIMENSION(:), INTENT(IN) :: PTDEEP_CLI
(   31) REAL, DIMENSION(:), INTENT(IN) :: PGAMMAT_CLI
(   32) LOGICAL, INTENT(IN) :: OAGRIP
(   33) REAL, DIMENSION(:), INTENT(IN) :: PTHRESHOLD
(   34)  CHARACTER(LEN=3), INTENT(IN) :: HINIT
(   35) REAL, DIMENSION(:), INTENT(IN) :: PCO2
(   36) REAL, DIMENSION(:), INTENT(IN) :: PRHOA
(   37) END SUBROUTINE INIT_VEG_PGD_n
(   38) # 39 "modi_init_veg_pgdn.F90"
(   39) END INTERFACE
(   40) END MODULE MODI_INIT_VEG_PGD_n 
