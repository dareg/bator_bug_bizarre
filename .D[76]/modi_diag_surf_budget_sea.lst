


NVFORTRAN (Version     23.1)          02/24/2023  13:52:18      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:52:18      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: modi_diag_surf_budget_sea.F90

(    1) !depfile:diag_surf_budget_sea.F90
(    2) MODULE MODI_DIAG_SURF_BUDGET_SEA
(    3) INTERFACE
(    4) SUBROUTINE  DIAG_SURF_BUDGET_SEA(D, DI, S, PTT, PRHOA, PSFTH, PSFTH_ICE, &
(    5)                                  PSFTQ, PSFTQ_ICE, PDIR_SW, PSCA_SW, PLW,    &
(    6)                                  PDIR_ALB, PSCA_ALB, PEMIS, PTRAD,           &
(    7)                                  PSFZON, PSFZON_ICE, PSFMER, PSFMER_ICE   ) 
(    8) USE MODD_SEAFLUX_n, ONLY : SEAFLUX_t
(    9) USE MODD_DIAG_n, ONLY : DIAG_t
(   10) TYPE(DIAG_t), INTENT(INOUT) :: D
(   11) TYPE(DIAG_t), INTENT(INOUT) :: DI
(   12) TYPE(SEAFLUX_t), INTENT(INOUT) :: S
(   13) REAL,               INTENT(IN) :: PTT       ! freezing temperature of water surface
(   14) REAL, DIMENSION(:), INTENT(IN) :: PRHOA     ! air density
(   15) REAL, DIMENSION(:), INTENT(IN) :: PSFTH     ! heat flux
(   16) REAL, DIMENSION(:), INTENT(IN) :: PSFTH_ICE ! heat flux on seaice
(   17) REAL, DIMENSION(:), INTENT(IN) :: PSFTQ     ! water flux
(   18) REAL, DIMENSION(:), INTENT(IN) :: PSFTQ_ICE ! water flux on seaice
(   19) REAL, DIMENSION(:,:),INTENT(IN):: PDIR_SW   ! direct  solar radiation (on horizontal surf.)
(   20) REAL, DIMENSION(:,:),INTENT(IN):: PSCA_SW   ! diffuse solar radiation (on horizontal surf.)
(   21) REAL, DIMENSION(:), INTENT(IN) :: PLW       ! longwave radiation (on horizontal surf.)
(   22) REAL, DIMENSION(:,:),INTENT(IN):: PDIR_ALB  ! direct albedo for each spectral band  (-)
(   23) REAL, DIMENSION(:,:),INTENT(IN):: PSCA_ALB  ! diffuse albedo for each spectral band (-)
(   24) REAL, DIMENSION(:), INTENT(IN) :: PEMIS     ! emissivity                            (-)
(   25) REAL, DIMENSION(:), INTENT(IN) :: PTRAD     ! radiative temperature                 (K)
(   26) REAL, DIMENSION(:), INTENT(IN) :: PSFZON    ! zonal friction
(   27) REAL, DIMENSION(:), INTENT(IN) :: PSFZON_ICE! zonal friction
(   28) REAL, DIMENSION(:), INTENT(IN) :: PSFMER    ! meridional friction
(   29) REAL, DIMENSION(:), INTENT(IN) :: PSFMER_ICE! meridional friction
(   30) END SUBROUTINE DIAG_SURF_BUDGET_SEA






NVFORTRAN (Version     23.1)          02/24/2023  13:52:18      page 3

(   31) 
(   32) END INTERFACE
(   33) END MODULE MODI_DIAG_SURF_BUDGET_SEA





























































NVFORTRAN (Version     23.1)          02/24/2023  13:52:18      page 4

(    1) # 1 "modi_diag_surf_budget_sea.F90"
(    1) !depfile:diag_surf_budget_sea.F90
(    2) MODULE MODI_DIAG_SURF_BUDGET_SEA
(    3) INTERFACE
(    4) SUBROUTINE  DIAG_SURF_BUDGET_SEA(D, DI, S, PTT, PRHOA, PSFTH, PSFTH_ICE, &
(    5)                                  PSFTQ, PSFTQ_ICE, PDIR_SW, PSCA_SW, PLW,    &
(    6)                                  PDIR_ALB, PSCA_ALB, PEMIS, PTRAD,           &
(    7)                                  PSFZON, PSFZON_ICE, PSFMER, PSFMER_ICE   ) 
(    8) USE MODD_SEAFLUX_n, ONLY : SEAFLUX_t
(    9) USE MODD_DIAG_n, ONLY : DIAG_t
(   10) TYPE(DIAG_t), INTENT(INOUT) :: D
(   11) TYPE(DIAG_t), INTENT(INOUT) :: DI
(   12) TYPE(SEAFLUX_t), INTENT(INOUT) :: S
(   13) REAL,               INTENT(IN) :: PTT       ! freezing temperature of water surface
(   14) REAL, DIMENSION(:), INTENT(IN) :: PRHOA     ! air density
(   15) REAL, DIMENSION(:), INTENT(IN) :: PSFTH     ! heat flux
(   16) REAL, DIMENSION(:), INTENT(IN) :: PSFTH_ICE ! heat flux on seaice
(   17) REAL, DIMENSION(:), INTENT(IN) :: PSFTQ     ! water flux
(   18) REAL, DIMENSION(:), INTENT(IN) :: PSFTQ_ICE ! water flux on seaice
(   19) REAL, DIMENSION(:,:),INTENT(IN):: PDIR_SW   ! direct  solar radiation (on horizontal surf.)
(   20) REAL, DIMENSION(:,:),INTENT(IN):: PSCA_SW   ! diffuse solar radiation (on horizontal surf.)
(   21) REAL, DIMENSION(:), INTENT(IN) :: PLW       ! longwave radiation (on horizontal surf.)
(   22) REAL, DIMENSION(:,:),INTENT(IN):: PDIR_ALB  ! direct albedo for each spectral band  (-)
(   23) REAL, DIMENSION(:,:),INTENT(IN):: PSCA_ALB  ! diffuse albedo for each spectral band (-)
(   24) REAL, DIMENSION(:), INTENT(IN) :: PEMIS     ! emissivity                            (-)
(   25) REAL, DIMENSION(:), INTENT(IN) :: PTRAD     ! radiative temperature                 (K)
(   26) REAL, DIMENSION(:), INTENT(IN) :: PSFZON    ! zonal friction
(   27) REAL, DIMENSION(:), INTENT(IN) :: PSFZON_ICE! zonal friction
(   28) REAL, DIMENSION(:), INTENT(IN) :: PSFMER    ! meridional friction
(   29) REAL, DIMENSION(:), INTENT(IN) :: PSFMER_ICE! meridional friction
(   30) END SUBROUTINE DIAG_SURF_BUDGET_SEA
(   31) # 32 "modi_diag_surf_budget_sea.F90"
(   32) END INTERFACE
(   33) END MODULE MODI_DIAG_SURF_BUDGET_SEA
