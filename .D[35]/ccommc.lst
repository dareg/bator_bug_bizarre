


NVFORTRAN (Version     23.1)          02/24/2023  13:33:31      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:33:31      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: ccommc.F

(    1) ! Look for common elements in two sorted lists
(    2)       SUBROUTINE CCOMMC (KNC, KCOM1, KCOM2, KN1, CD1, KN2, CD2)
(    3)       USE PARKIND1, ONLY : JPIM
(    4)       IMPLICIT NONE
(    5)       
(    6)       INTEGER(KIND=JPIM) :: KNC, KN1, KN2
(    7)       INTEGER(KIND=JPIM) :: KCOM1 (KNC), KCOM2 (KNC)
(    8) 
(    9)       CHARACTER(LEN=*) :: CD1 (KN1), CD2 (KN2)
(   10)       INTEGER(KIND=JPIM) :: I1, I2, IC
(   11) 
(   12)       I1 = 1
(   13)       I2 = 1
(   14)       IC = 0
(   15) 
(   16)       DO WHILE ((I1 <= KN1) .AND. (I2 <= KN2))
(   17)         IF (CD1 (I1) == CD2 (I2)) THEN
(   18)           IC = IC + 1
(   19)           KCOM1 (IC) = I1
(   20)           KCOM2 (IC) = I2
(   21)           I1 = I1 + 1
(   22)           I2 = I2 + 1
(   23)         ELSEIF (CD1 (I1) > CD2 (I2)) THEN
(   24)           I2 = I2 + 1
(   25)         ELSEIF (CD1 (I1) < CD2 (I2)) THEN
(   26)           I1 = I1 + 1
(   27)         ENDIF
(   28)       ENDDO
(   29)  
(   30)       KNC = IC






NVFORTRAN (Version     23.1)          02/24/2023  13:33:31      page 3

(   31) 
(   32)       ENDSUBROUTINE CCOMMC
(   33) 





























































NVFORTRAN (Version     23.1)          02/24/2023  13:33:31      page 4

(    1) # 1 "ccommc.F"
(    1) ! Look for common elements in two sorted lists
(    2)       SUBROUTINE CCOMMC (KNC, KCOM1, KCOM2, KN1, CD1, KN2, CD2)
(    3)       USE PARKIND1, ONLY : JPIM
(    4)       IMPLICIT NONE
(    5)       
(    6)       INTEGER(KIND=JPIM) :: KNC, KN1, KN2
(    7)       INTEGER(KIND=JPIM) :: KCOM1 (KNC), KCOM2 (KNC)
(    8) # 9 "ccommc.F"
(    9)       CHARACTER(LEN=*) :: CD1 (KN1), CD2 (KN2)
(   10)       INTEGER(KIND=JPIM) :: I1, I2, IC
(   11) # 12 "ccommc.F"
(   12)       I1 = 1
(   13)       I2 = 1
(   14)       IC = 0
(   15) # 16 "ccommc.F"
(   16)       DO WHILE ((I1 <= KN1) .AND. (I2 <= KN2))
(   17)         IF (CD1 (I1) == CD2 (I2)) THEN
(   18)           IC = IC + 1
(   19)           KCOM1 (IC) = I1
(   20)           KCOM2 (IC) = I2
(   21)           I1 = I1 + 1
(   22)           I2 = I2 + 1
(   23)         ELSEIF (CD1 (I1) > CD2 (I2)) THEN
(   24)           I2 = I2 + 1
(   25)         ELSEIF (CD1 (I1) < CD2 (I2)) THEN
(   26)           I1 = I1 + 1
(   27)         ENDIF
(   28)       ENDDO
(   29)  
(   30)       KNC = IC
(   31) # 32 "ccommc.F"
(   32)       ENDSUBROUTINE CCOMMC
