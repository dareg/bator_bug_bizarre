


NVFORTRAN (Version     23.1)          02/24/2023  13:34:09      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:34:09      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: clock.F

(    1)       FUNCTION CLOCK()
(    2) !
(    3) !     clock() returns the amount of CPU time (in microseconds) used since
(    4) !     the first call to clock().  The time reported is the sum of the user
(    5) !     and system times of the calling process and its terminated child
(    6) !     processes for which it has executed wait() or system() (see wait(2)
(    7) !     and system(3S)).  To determine the time in seconds, the value returned
(    8) !     by clock() should be divided by the value of the macro CLOCKS_PER_SEC.
(    9) !
(   10) !     INTRODUCE A PROPER CLCOK ROUTINE HERE
(   11) !
(   12) !      IMPLICIT LOGICAL (L)
(   13)       USE PARKIND1, ONLY : JPIM, JPRB
(   14) !
(   15)       IMPLICIT NONE
(   16) !
(   17)       INTEGER(KIND=JPIM) :: CLOCK
(   18)       INTEGER(KIND=JPIM) :: IC, ICR, ICM
(   19)       CALL SYSTEM_CLOCK(IC,ICR,ICM)
(   20)       IF(ICM.EQ.0) THEN
(   21)         PRINT *,' no system clock'
(   22)         CLOCK=-99
(   23)       ELSE
(   24) #ifdef VPP
(   25)         CLOCK=IC
(   26) #else
(   27)         CLOCK=INT(1000.0_JPRB*REAL(IC,KIND=JPRB)/ICR)
(   28) #endif
(   29)       ENDIF
(   30)       RETURN






NVFORTRAN (Version     23.1)          02/24/2023  13:34:09      page 3

(   31)       ENDFUNCTION CLOCK































































NVFORTRAN (Version     23.1)          02/24/2023  13:34:09      page 4

(    1) # 1 "clock.F"
(    1)       FUNCTION CLOCK()
(    2) !
(    3) !     clock() returns the amount of CPU time (in microseconds) used sinc
(    4) !     the first call to clock().  The time reported is the sum of the us
(    5) !     and system times of the calling process and its terminated child
(    6) !     processes for which it has executed wait() or system() (see wait(2
(    7) !     and system(3S)).  To determine the time in seconds, the value retu
(    8) !     by clock() should be divided by the value of the macro CLOCKS_PER_
(    9) !
(   10) !     INTRODUCE A PROPER CLCOK ROUTINE HERE
(   11) !
(   12) !      IMPLICIT LOGICAL (L)
(   13)       USE PARKIND1, ONLY : JPIM, JPRB
(   14) !
(   15)       IMPLICIT NONE
(   16) !
(   17)       INTEGER(KIND=JPIM) :: CLOCK
(   18)       INTEGER(KIND=JPIM) :: IC, ICR, ICM
(   19)       CALL SYSTEM_CLOCK(IC,ICR,ICM)
(   20)       IF(ICM.EQ.0) THEN
(   21)         PRINT *,' no system clock'
(   22)         CLOCK=-99
(   23)       ELSE
(   24) # 27 "clock.F"
(   27)         CLOCK=INT(1000.0_JPRB*REAL(IC,KIND=JPRB)/ICR)
(   28) # 29 "clock.F"
(   29)       ENDIF
(   30)       RETURN
(   31)       ENDFUNCTION CLOCK
