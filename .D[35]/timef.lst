


NVFORTRAN (Version     23.1)          02/24/2023  13:33:59      page 1

Switches: -noasm -nodclchk -debug -nodlines -line -list
          -idir .D[1]
          -idir .D[2]
          -idir .D[3]
          -idir .D[4]
          -idir .D[5]
          -idir .D[6]
          -idir .D[7]
          -idir .D[8]
          -idir .D[9]
          -idir .D[10]
          -idir .D[11]
          -idir .D[12]
          -idir .D[13]
          -idir .D[14]
          -idir .D[15]
          -idir .D[16]
          -idir .D[17]
          -idir .D[18]
          -idir .D[19]
          -idir .D[20]
          -idir .D[21]
          -idir .D[22]
          -idir .D[23]
          -idir .D[24]
          -idir .D[25]
          -idir .D[26]
          -idir .D[27]
          -idir .D[28]
          -idir .D[29]
          -idir .D[30]
          -idir .D[31]
          -idir .D[32]
          -idir .D[33]
          -idir .D[34]
          -idir .D[35]
          -idir .D[36]
          -idir .D[37]
          -idir .D[38]
          -idir .D[39]
          -idir .D[40]
          -idir .D[41]
          -idir .D[42]
          -idir .D[43]
          -idir .D[44]
          -idir .D[45]
          -idir .D[46]
          -idir .D[47]
          -idir .D[48]
          -idir .D[49]
          -idir .D[50]
          -idir .D[51]
          -idir .D[52]
          -idir .D[53]
          -idir .D[54]
          -idir .D[55]
          -idir .D[56]
          -idir .D[57]






NVFORTRAN (Version     23.1)          02/24/2023  13:33:59      page 2

          -idir .D[58]
          -idir .D[59]
          -idir .D[60]
          -idir .D[61]
          -idir .D[62]
          -idir .D[63]
          -idir .D[64]
          -idir .D[65]
          -idir .D[66]
          -idir .D[67]
          -idir .D[68]
          -idir .D[69]
          -idir .D[70]
          -idir .D[71]
          -idir .D[72]
          -idir .D[73]
          -idir .D[74]
          -idir .D[75]
          -idir .D[76]
          -idir .D[77]
          -idir .D[78]
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/include
          -idir /opt/softs/nvidia/hpc_sdk/Linux_x86_64/23.1/comm_libs/openmpi/openmpi-3.1.5/lib
          -inform severe -opt 0 -nosave -object -noonetrip
          -depchk on -nostandard     
          -symbol -noupcase    

Filename: timef.F

(    1) #if defined ( VPP )
(    2)       FUNCTION TIMEF()
(    3)       DATA IFIRST/0/
(    4)       SAVE IFIRST,ZFIRST
(    5) !
(    6) !   fujitsu special
(    7) !
(    8)       CALL GETTOD(ZTIMEF)
(    9)       ZTIMEF=ZTIMEF/1000.0
(   10) !
(   11)       IF(IFIRST.EQ.0) THEN
(   12)          IFIRST=1
(   13)          ZFIRST=ZTIMEF
(   14)          TIMEF=0.0
(   15)       ELSE
(   16)          TIMEF=(ZTIMEF-ZFIRST)
(   17)       ENDIF
(   18) !
(   19)       RETURN
(   20)       ENDFUNCTION TIMEF
(   21) #elif defined ( RS6K )
(   22)       REAL*8 FUNCTION TIMEF()
(   23)       INTEGER*8 IRTC
(   24)       EXTERNAL IRTC
(   25)       DATA IFIRST/0/
(   26)       SAVE IFIRST,ZFIRST
(   27) !
(   28)       ZTIMEF=IRTC()*1.0E-6
(   29) !
(   30)       IF(IFIRST.EQ.0) THEN






NVFORTRAN (Version     23.1)          02/24/2023  13:33:59      page 3

(   31)          IFIRST=1
(   32)          ZFIRST=ZTIMEF
(   33)          TIMEF=0.0
(   34)       ELSE
(   35)          TIMEF=(ZTIMEF-ZFIRST)
(   36)       ENDIF
(   37) !
(   38)       RETURN
(   39)       ENDFUNCTION TIMEF
(   40) #elif defined ( _CRAYFTN )
(   41)       REAL*8 FUNCTION TIMEF()
(   42)       INTEGER*8 I_TIME1,I_RATE
(   43)       REAL*8 ZTIMEF,ZFIRST
(   44)       DATA IFIRST/0/
(   45)       SAVE IFIRST,ZFIRST
(   46) 
(   47) C     THIS IS A REAL TIME CLOCK IN MILLISECONDS.
(   48) C     USAGE OF FORTRAN90 INTRINSIC FUNCTION.
(   49)       CALL SYSTEM_CLOCK (COUNT=I_TIME1,COUNT_RATE=I_RATE)
(   50)       ZTIMEF=DFLOAT(I_TIME1)/DFLOAT(I_RATE)
(   51) 
(   52)       IF(IFIRST.EQ.0) THEN
(   53)          IFIRST=1
(   54)          ZFIRST=ZTIMEF
(   55)          TIMEF=0.0
(   56)       ELSE
(   57)          TIMEF=1000.0*(ZTIMEF-ZFIRST)
(   58)       ENDIF
(   59) 
(   60)       RETURN
(   61)       ENDFUNCTION TIMEF
(   62) 
(   63) #else
(   64) 
(   65)       FUNCTION TIMEF()
(   66) !ss: Uses util_walltime_() from DrHook -- 
(   67) !    Should now have higher precision (avoiding negative accum. wall-time in ifs.stat (see opdis.F90))
(   68)       USE PARKIND1, ONLY : JPIM, JPRD
(   69)       IMPLICIT NONE
(   70)       REAL(KIND=JPRD)           :: TIMEF
(   71)       REAL(KIND=JPRD)           :: ZTIMEF
(   72)       REAL(KIND=JPRD),SAVE      :: ZFIRST
(   73)       INTEGER(KIND=JPIM),SAVE   :: IFIRST = 0
(   74)       REAL(KIND=JPRD), EXTERNAL :: UTIL_WALLTIME ! ifsaux/support/drhook.c
(   75)       ZTIMEF = UTIL_WALLTIME()
(   76)       IF(IFIRST.EQ.0) THEN
(   77)          IFIRST=1
(   78)          ZFIRST=ZTIMEF
(   79)          TIMEF=0.0_JPRD
(   80)       ELSE
(   81)          TIMEF=1000.0_JPRD * (ZTIMEF-ZFIRST)
(   82)       ENDIF
(   83)       ENDFUNCTION TIMEF
(   84) 
(   85) #endif









NVFORTRAN (Version     23.1)          02/24/2023  13:33:59      page 4

(    1) # 1 "timef.F"
(    1) # 65 "timef.F"
(   65)       FUNCTION TIMEF()
(   66) !ss: Uses util_walltime_() from DrHook -- 
(   67) !    Should now have higher precision (avoiding negative accum. wall-tim
(   68)       USE PARKIND1, ONLY : JPIM, JPRD
(   69)       IMPLICIT NONE
(   70)       REAL(KIND=JPRD)           :: TIMEF
(   71)       REAL(KIND=JPRD)           :: ZTIMEF
(   72)       REAL(KIND=JPRD),SAVE      :: ZFIRST
(   73)       INTEGER(KIND=JPIM),SAVE   :: IFIRST = 0
(   74)       REAL(KIND=JPRD), EXTERNAL :: UTIL_WALLTIME ! ifsaux/support/drhook
(   75)       ZTIMEF = UTIL_WALLTIME()
(   76)       IF(IFIRST.EQ.0) THEN
(   77)          IFIRST=1
(   78)          ZFIRST=ZTIMEF
(   79)          TIMEF=0.0_JPRD
(   80)       ELSE
(   81)          TIMEF=1000.0_JPRD * (ZTIMEF-ZFIRST)
(   82)       ENDIF
(   83)       ENDFUNCTION TIMEF
